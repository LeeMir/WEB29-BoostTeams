{"version":3,"sources":["components/Login/Logo.tsx","components/Login/style.ts","components/Login/GithubButton.tsx","components/Login/LoginButton.tsx","components/Login/SignUpButton.tsx","templates/LoginTemplate/style.ts","templates/LoginTemplate/index.tsx","pages/LoginPage/index.tsx","components/Team/Cards/TeamCard.tsx","components/Team/Cards/InviteCard.tsx","components/Team/Cards/CreateCard.tsx","components/Team/CardList/style.ts","components/Team/CardList/MyTeamList.tsx","components/Team/CardList/InviteList.tsx","components/Team/CreateTeamModal/style.ts","components/Team/CreateTeamModal/index.tsx","templates/TeamTemplate/style.ts","templates/TeamTemplate/index.tsx","pages/TeamPage/index.tsx","templates/SignUpTemplate/style.ts","templates/SignUpTemplate/index.tsx","pages/SignUpPage/index.tsx","templates/LoadingTemplate/style.ts","templates/LoadingTemplate/index.tsx","pages/LoadingPage/index.tsx","templates/ErrorTemplate/style.ts","templates/ErrorTemplate/index.tsx","pages/ErrorPage/index.tsx","routes/PublicRoute.tsx","routes/router.tsx","App.tsx","reportWebVitals.ts","styles/global.ts","index.tsx","utils/fetch.ts","components/Team/Cards/style.ts","apis/auth.ts","components/common/Button/style.ts","components/common/Button/index.tsx","utils/cookie.ts","apis/team.ts","stores/team.ts","utils/constants.ts","stores/user.ts","components/common/Modal/style.ts","components/common/Modal/Form/style.ts","components/common/Modal/Form/index.tsx","components/common/Modal/Notification/style.ts","components/common/Modal/Notification/index.tsx","components/common/Modal/index.tsx","utils/regexs.ts","components/common/ColorPicker/style.ts","components/Team/Cards/Thumbnail.tsx","components/common/Header/style.ts","components/common/Logo/style.ts","components/common/Logo/LongLogo.tsx","components/common/Icons/ProfileIcon/style.ts","components/common/Icons/ProfileIcon/index.tsx","components/common/Header/ProfileSimple/UserInfo/style.ts","components/common/Header/ProfileSimple/UserInfo/EmailBox.tsx","components/common/Header/ProfileSimple/UserInfo/GithubBadge.tsx","components/common/Header/ProfileSimple/UserInfo/index.tsx","apis/user.ts","components/common/Header/ProfileSimple/Modals/UpdateModal/style.ts","components/common/Header/ProfileSimple/Modals/UpdateModal/index.tsx","components/common/Header/ProfileSimple/Buttons/style.ts","components/common/Header/ProfileSimple/Buttons/Account.tsx","components/common/Header/ProfileSimple/Buttons/Logout.tsx","components/common/Header/ProfileSimple/Buttons/SignOut.tsx","components/common/Header/ProfileSimple/style.ts","components/common/Header/ProfileSimple/Modals/SignOutModal/style.ts","components/common/Header/ProfileSimple/Modals/SignOutModal/index.tsx","components/common/Header/ProfileSimple/index.tsx","components/common/Header/index.tsx","components/common/Icons/TeamIcon/style.ts","components/common/Navbar/style.ts","components/common/Navbar/index.tsx","components/common/Sidebar/style.ts","components/common/Sidebar/index.tsx","components/common/DropDown/style.ts","components/common/DropDown/index.tsx","components/common/ColorPicker/index.tsx","routes/PrivateRoute.tsx"],"names":["LogoWrapper","styled","div","Logo","to","src","alt","BtnContainer","props","direction","gap","InputContainer","Input","input","ColorCode","LINE3","BACKGROUND1","PLACEHOLDER","PRIMARY1","Button","button","FONT1","FONT_BASE","WHITE","GithubButton","onClick","githubLogin","LoginButton","localLoginHandler","SignUpButton","defaultProps","Layout","Container","LoginTemplate","inputEmailHandler","inputPwHandler","type","placeholder","onChange","LoginPage","history","useHistory","useState","email","setEmail","pw","setPw","useEffect","getCookie","localStorage","setItem","push","toast","success","login","userEmail","userPassword","e","target","value","TeamCard","team_id","team_name","Thumbnail","InviteCard","setLoadTrigger","useSetRecoilState","teamListLoadTrigger","text","backgroundColor","fontColor","handler","accept","decline","CreateCard","CardListContainer","Title","span","MyTeamList","list","handleModalOpen","map","team","team_user_id","InviteList","CreateTeamModal","handleModalClose","loadTrigger","name","setName","desc","setDesc","Modal","title","handleSubmit","teamData","team_desc","create","warn","removeSubmitButton","submitBtnName","TeamTemplate","showCreateTeamModal","teamList","useRecoilValue","userTeamList","myTeamList","inviteList","reduce","pre","state","TeamPage","setShowCreateTeamModal","widthAnimation","keyframes","SignUpTemplate","signUpHandler","inputNameHandler","SignUpPage","nameRegExp","test","length","checkName","emailRegExp","checkEmail","pwRegExp","checkPW","signUp","userName","LoadingTemplate","LoadingPage","SubTitle","Text","PRIMARY2","BLACK","ErrorTemplate","goBack","ErrorPage","PublicRoute","Component","component","rest","render","getItem","TeamRoute","React","lazy","Router","exact","path","PrivateRoute","dotenv","config","App","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","reset","ReactDOM","StrictMode","document","getElementById","baseUrl","process","header","authorization","getHeader","fetchApi","get","fetch","method","mode","credentials","headers","post","data","body","JSON","stringify","put","patch","delete","BORDER_RADIUS","WIDTH","HEIGHT","ThumbnailWrapper","PrimaryPalette","Name","Font","MEDIUM","InviteButtonContainer","cb","a","encryptedPassword","AES","encrypt","toString","res","json","error","window","location","href","check","err","status","conflict","logout","removeItem","removeCookie","NormalButton","SMALL","cookies","Cookies","remove","Error","prev","message","readMyTeam","update","teamId","deleteTeam","inviteUser","kickOut","userId","leaveTeam","readTeamInfo","id","readTeamUsers","entries","el","user","user_id","user_name","user_email","color","user_color","role","Role","teamUsers","Object","fromEntries","patchRole","newRole","atom","key","default","selector","teamInfoLoadTrigger","teamInfoSelector","selectorFamily","selectedUser","teamUsersTrigger","teamUsersSelector","modalState","isOpen","BABYPINK","BABYGREEN","MINT","YELLOW","BABYBLUE","SecondaryPalette","HOTPINK","DEEPGREEN","DARKMINT","ORANGE","DARKBLUE","REM","NAVBAR","HEADER","CANVAS","innerWidth","innerHeight","POSTIT","RoleArr","MODAL_THEME","FORM","NOTIFICATION","userState","github_id","github_name","Background","Textarea","textarea","ButtonContainer","FormModal","children","closeBtnName","LINE1","NotificationModal","RED","theme","MODAL","createPortal","Form","Notification","ColorDropDown","ColorCircle","shortenName","slice","toUpperCase","Wrapper","LongLogo","width","isHover","HOVER","ProfileIconContainer","Status","GRAY","Palette","ProfileIcon","statusColor","GREEN","undefined","TextContainer","LinkContainer","NameContainer","EmailBox","GithubBadge","rel","TextInfo","UserInfo","updateName","newName","UpdateModal","useRecoilState","setUser","LINE2","AccountButton","LogoutButton","SignOutButton","dropAnimation","ModalContainer","Content","SignOutModal","console","log","ProfileSimple","showUpdateModal","showSignOutModal","setShowUpdateModal","setShowSignOutModal","handleUpdateModalClose","handleSignOutModalOpen","Account","Logout","SignOut","Header","showProfileSimple","setShowProfileSimple","nav","BellIconWrapper","FONT2","TabContainer","TeamIcon","TeamIconContainer","Navbar","groups","pathname","match","BACKGROUND2","Sidebar","OptionsWrapper","DropDown","options","selectedOption","setSelectedOption","dropDownOpen","setDropDownOpen","handleOptionClick","Number","currentTarget","dataset","option","i","ColorPicker","selectedColor","setSelectedColor","handleColorClick","colorCode"],"mappings":"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","file":"static/js/main.4177df9b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst LogoWrapper = styled.div`\r\n\twidth: 4rem;\r\n\tmargin-bottom: 1rem;\r\n\timg {\r\n\t\twidth: 100%;\r\n\t}\r\n`;\r\n\r\nconst Logo: React.FC = () => {\r\n\treturn (\r\n\t\t<LogoWrapper>\r\n\t\t\t<Link to='/'>\r\n\t\t\t\t<img src='logo.png' alt='logo' />\r\n\t\t\t</Link>\r\n\t\t</LogoWrapper>\r\n\t);\r\n};\r\n\r\nexport default Logo;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\ninterface BtnContainerProps {\r\n\tdirection: string;\r\n\tgap: string;\r\n}\r\n\r\nexport const BtnContainer = styled('div')<BtnContainerProps>`\r\n\tdisplay: flex;\r\n\tflex-direction: ${(props) => props.direction || 'row'};\r\n\twidth: 100%;\r\n\tgap: ${(props) => props.gap || '0'};\r\n\r\n\t& > * {\r\n\t\twidth: 100%;\r\n\t}\r\n`;\r\n\r\nexport const InputContainer = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\twidth: 100%;\r\n\t& > span {\r\n\t\twidth: 7rem;\r\n\t}\r\n`;\r\n\r\nexport const Input = styled.input`\r\n\twidth: 100%;\r\n\tline-height: 1.5rem;\r\n\tfont-size: 1rem;\r\n\tborder: none;\r\n\tbox-shadow: 0px 1px 0px 0px ${ColorCode.LINE3};\r\n\tbackground-color: ${ColorCode.BACKGROUND1};\r\n\tpadding: 0;\r\n\t&::placeholder {\r\n\t\tcolor: ${ColorCode.PLACEHOLDER};\r\n\t}\r\n\t&:focus-visible {\r\n\t\toutline: none;\r\n\t\tbox-shadow: 0px 2px 0px 0px ${ColorCode.PRIMARY1};\r\n\t}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\twidth: 100%;\r\n\theight: 2.5rem;\r\n\tborder: 1px solid ${ColorCode.FONT1};\r\n\tborder-radius: 10px;\r\n\tfont-size: 1.3rem;\r\n\tgap: 0.25rem;\r\n\tcursor: pointer;\r\n\tspan {\r\n\t\tfont-size: 1.1rem;\r\n\t\tcolor: ${ColorCode.FONT_BASE};\r\n\t}\r\n\t&:hover {\r\n\t\tbackground-color: ${ColorCode.PRIMARY1};\r\n\t\tspan {\r\n\t\t\tcolor: ${ColorCode.WHITE};\r\n\t\t\tfont-weight: 500;\r\n\t\t}\r\n\t\tsvg {\r\n\t\t\tfilter: invert(100%);\r\n\t\t}\r\n\t}\r\n`;\r\n","import React from 'react';\r\nimport { AiFillGithub } from 'react-icons/ai';\r\nimport { githubLogin } from '@apis/auth';\r\nimport { Button } from './style';\r\n\r\nconst GithubButton: React.FC = () => {\r\n\tconst githubLoginHandler = () => {\r\n\t\tgithubLogin();\r\n\t};\r\n\treturn (\r\n\t\t<Button onClick={githubLoginHandler}>\r\n\t\t\t<AiFillGithub />\r\n\t\t\t<span>Login with Github</span>\r\n\t\t</Button>\r\n\t);\r\n};\r\n\r\nexport default GithubButton;\r\n","import React from 'react';\r\nimport { Button } from './style';\r\n\r\ntype Props = {\r\n\tlocalLoginHandler: () => void;\r\n};\r\n\r\nconst LoginButton: React.FC<Props> = ({ localLoginHandler }) => {\r\n\treturn (\r\n\t\t<Button onClick={localLoginHandler}>\r\n\t\t\t<span>Login</span>\r\n\t\t</Button>\r\n\t);\r\n};\r\n\r\nexport default LoginButton;\r\n","import React from 'react';\r\nimport { Button } from './style';\r\n\r\ntype Props = {\r\n\tonClick?: () => void;\r\n};\r\n\r\nconst SignUpButton: React.FC<Props> = ({ onClick }) => {\r\n\treturn (\r\n\t\t<Button onClick={onClick}>\r\n\t\t\t<span>Signup</span>\r\n\t\t</Button>\r\n\t);\r\n};\r\n\r\nSignUpButton.defaultProps = {\r\n\tonClick: () => null,\r\n};\r\n\r\nexport default SignUpButton;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nexport const Layout = styled.div`\r\n\tdisplay: flex;\r\n\twidth: 100vw;\r\n\theight: 100vh;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tbackground-color: ${ColorCode.PRIMARY1};\r\n`;\r\n\r\nexport const Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n\twidth: 13rem;\r\n\theight: 23rem;\r\n\tpadding: 3rem 5rem 5rem 5rem;\r\n\tbackground-color: ${ColorCode.BACKGROUND1};\r\n\tbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n\tborder-radius: 10px;\r\n`;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Logo, Input, BtnContainer, GithubButton, LoginButton, SignUpButton } from '@components/Login';\r\nimport { Container, Layout } from './style';\r\n\r\ninterface Props {\r\n\tlocalLoginHandler: () => void;\r\n\tinputEmailHandler: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n\tinputPwHandler: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nconst LoginTemplate: React.FC<Props> = ({ localLoginHandler, inputEmailHandler, inputPwHandler }) => {\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<Container>\r\n\t\t\t\t<Logo />\r\n\t\t\t\t<Input type='email' placeholder='이메일을 입력' onChange={inputEmailHandler} />\r\n\t\t\t\t<Input type='password' placeholder='비밀번호를 입력' onChange={inputPwHandler} />\r\n\t\t\t\t<BtnContainer direction='column' gap='1rem'>\r\n\t\t\t\t\t<BtnContainer direction='row' gap='2rem'>\r\n\t\t\t\t\t\t<LoginButton localLoginHandler={localLoginHandler} />\r\n\t\t\t\t\t\t<Link to='/signup'>\r\n\t\t\t\t\t\t\t<SignUpButton />\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</BtnContainer>\r\n\t\t\t\t\t<GithubButton />\r\n\t\t\t\t</BtnContainer>\r\n\t\t\t</Container>\r\n\t\t</Layout>\r\n\t);\r\n};\r\n\r\nexport default LoginTemplate;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport LoginTemplate from '@templates/LoginTemplate';\r\nimport { getCookie } from '@utils/cookie';\r\nimport { login } from '@apis/auth';\r\n\r\nconst LoginPage: React.FC = () => {\r\n\tconst history = useHistory();\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [pw, setPw] = useState('');\r\n\tconst inputEmailHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetEmail(e.target.value);\r\n\t};\r\n\tconst inputPwHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetPw(e.target.value);\r\n\t};\r\n\tconst localLoginHandler = () => {\r\n\t\tlogin({ userEmail: email, userPassword: pw }, () => {\r\n\t\t\tlocalStorage.setItem('JWT', getCookie('JWT'));\r\n\t\t\thistory.push('/team');\r\n\t\t\ttoast.success('😃 로그인 성공');\r\n\t\t});\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tif (getCookie('JWT')) {\r\n\t\t\tlocalStorage.setItem('JWT', getCookie('JWT'));\r\n\t\t\thistory.push('/team');\r\n\t\t\ttoast.success('😎 Github 로그인 성공');\r\n\t\t}\r\n\t}, []);\r\n\treturn (\r\n\t\t<LoginTemplate\r\n\t\t\tlocalLoginHandler={localLoginHandler}\r\n\t\t\tinputEmailHandler={inputEmailHandler}\r\n\t\t\tinputPwHandler={inputPwHandler}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default LoginPage;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Thumbnail from './Thumbnail';\r\n\r\nimport { Container, Name } from './style';\r\n\r\ninterface Props {\r\n\tteam_id: number;\r\n\tteam_name: string;\r\n}\r\n\r\nconst TeamCard: React.FC<Props> = ({ team_id, team_name }) => {\r\n\treturn (\r\n\t\t<Link to={`/team/${team_id}/calendar`}>\r\n\t\t\t<Container>\r\n\t\t\t\t<Thumbnail team_id={team_id} team_name={team_name} />\r\n\t\t\t\t<Name>{team_name}</Name>\r\n\t\t\t</Container>\r\n\t\t</Link>\r\n\t);\r\n};\r\n\r\nexport default TeamCard;\r\n","import React from 'react';\r\nimport { useSetRecoilState } from 'recoil';\r\nimport { accept, decline } from '@apis/team';\r\nimport { teamListLoadTrigger } from '@stores/team';\r\nimport { ColorCode } from '@utils/constants';\r\nimport Button from '@components/common/Button';\r\nimport Thumbnail from './Thumbnail';\r\n\r\nimport { Container, InviteButtonContainer, Name } from './style';\r\n\r\ninterface Props {\r\n\tteam_id: number;\r\n\tteam_name: string;\r\n}\r\n\r\nconst InviteCard: React.FC<Props> = ({ team_id, team_name }) => {\r\n\tconst setLoadTrigger = useSetRecoilState(teamListLoadTrigger);\r\n\tconst acceptHandler = () => {\r\n\t\taccept(setLoadTrigger, team_id);\r\n\t};\r\n\tconst declineHandler = () => {\r\n\t\tdecline(setLoadTrigger, team_id);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Thumbnail team_id={team_id} team_name={team_name} />\r\n\t\t\t<Name>{team_name}</Name>\r\n\t\t\t<InviteButtonContainer>\r\n\t\t\t\t<Button text='수락' backgroundColor={ColorCode.PRIMARY1} fontColor={ColorCode.WHITE} handler={acceptHandler} />\r\n\t\t\t\t<Button text='거절' backgroundColor='' fontColor='' handler={declineHandler} />\r\n\t\t\t</InviteButtonContainer>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default InviteCard;\r\n","import React from 'react';\r\nimport { BsPlusCircleDotted } from 'react-icons/bs';\r\nimport { Container, Name, ThumbnailWrapper } from './style';\r\n\r\ninterface Props {\r\n\tonClick: () => void;\r\n}\r\n\r\nconst CreateCard: React.FC<Props> = ({ onClick }) => {\r\n\treturn (\r\n\t\t<Container onClick={onClick}>\r\n\t\t\t<ThumbnailWrapper team_id={0}>\r\n\t\t\t\t<BsPlusCircleDotted />\r\n\t\t\t</ThumbnailWrapper>\r\n\t\t\t<Name>새로운 팀 생성</Name>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default CreateCard;\r\n","import styled from 'styled-components';\r\n\r\nexport const CardListContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n\tgap: 3rem;\r\n\talign-items: flex-start;\r\n\tpadding: 2rem 0;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tpadding: 5rem 2rem;\r\n\theight: calc((100% - 3rem) / 2 - 10rem); // 3rem: header, 10rem: padding\r\n`;\r\n\r\nexport const Title = styled.span`\r\n\tfont-weight: 700;\r\n`;\r\n","import React from 'react';\r\nimport { TeamCard, CreateCard } from '../Cards';\r\nimport { CardData } from '../type';\r\nimport { Container, Title, CardListContainer } from './style';\r\n\r\ninterface Props {\r\n\tlist: CardData[];\r\n\thandleModalOpen: () => void;\r\n}\r\n\r\nconst MyTeamList: React.FC<Props> = ({ list, handleModalOpen }) => {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Title>내 팀</Title>\r\n\t\t\t<CardListContainer>\r\n\t\t\t\t{list.map((team: CardData) => (\r\n\t\t\t\t\t<TeamCard key={team.team_user_id} team_name={team.team.team_name} team_id={team.team.team_id} />\r\n\t\t\t\t))}\r\n\t\t\t\t<CreateCard onClick={handleModalOpen} />\r\n\t\t\t</CardListContainer>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default MyTeamList;\r\n","import React from 'react';\r\nimport { InviteCard } from '../Cards';\r\nimport { CardData } from '../type';\r\nimport { Container, Title, CardListContainer } from './style';\r\n\r\ninterface Props {\r\n\tlist: CardData[];\r\n}\r\n\r\nconst InviteList: React.FC<Props> = ({ list }) => {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Title>초대 목록</Title>\r\n\t\t\t<CardListContainer>\r\n\t\t\t\t{list.map((team: CardData) => (\r\n\t\t\t\t\t<InviteCard key={team.team_user_id} team_id={team.team.team_id} team_name={team.team.team_name} />\r\n\t\t\t\t))}\r\n\t\t\t</CardListContainer>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default InviteList;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: 2rem;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useSetRecoilState } from 'recoil';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { teamListLoadTrigger } from '@stores/team';\r\nimport { create } from '@apis/team';\r\nimport Modal from '@components/common/Modal';\r\nimport { Input, Textarea } from '@components/common/Modal/style';\r\n\r\nimport { Container } from './style';\r\n\r\ntype Props = {\r\n\thandleModalClose: () => void;\r\n};\r\n\r\nconst CreateTeamModal: React.FC<Props> = ({ handleModalClose }) => {\r\n\tconst loadTrigger = useSetRecoilState(teamListLoadTrigger);\r\n\tconst [name, setName] = useState('');\r\n\tconst [desc, setDesc] = useState('');\r\n\r\n\tconst inputNameHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetName(e.target.value);\r\n\t};\r\n\r\n\tconst inputDescHandler = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n\t\tsetDesc(e.target.value);\r\n\t};\r\n\r\n\tconst handleSubmit = () => {\r\n\t\tif (name !== '') {\r\n\t\t\tconst teamData = {\r\n\t\t\t\tteam_name: name,\r\n\t\t\t\tteam_desc: desc,\r\n\t\t\t};\r\n\t\t\tcreate(loadTrigger, teamData);\r\n\t\t\thandleModalClose();\r\n\t\t} else {\r\n\t\t\ttoast.warn('😮 팀 이름을 입력해주세요!');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\ttitle='팀 만들기'\r\n\t\t\thandleModalClose={handleModalClose}\r\n\t\t\thandleSubmit={handleSubmit}\r\n\t\t\tremoveSubmitButton={false}\r\n\t\t\tsubmitBtnName='생성'\r\n\t\t>\r\n\t\t\t<Container>\r\n\t\t\t\t<Input onChange={inputNameHandler} value={name} placeholder='팀 이름을 입력하세요' />\r\n\t\t\t\t<Textarea onChange={inputDescHandler} value={desc} placeholder='팀에 대한 세부 정보를 입력하세요' />\r\n\t\t\t</Container>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default CreateTeamModal;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nexport const Layout = styled.div`\r\n\tposition: relative;\r\n\theight: 100%;\r\n\tbackground-color: ${ColorCode.BACKGROUND1};\r\n`;\r\n","import React from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { userTeamList } from '@stores/team';\r\n\r\nimport { CardData } from '@components/Team/type';\r\nimport { Header } from '@components/common';\r\nimport { MyTeamList, InviteList, CreateTeamModal } from '@components/Team';\r\nimport { Layout } from './style';\r\n\r\ntype Props = {\r\n\tshowCreateTeamModal: boolean;\r\n\thandleModalOpen: () => void;\r\n\thandleModalClose: () => void;\r\n};\r\n\r\nconst TeamTemplate: React.FC<Props> = ({ showCreateTeamModal, handleModalOpen, handleModalClose }) => {\r\n\tconst teamList = useRecoilValue(userTeamList);\r\n\tconst myTeamList: CardData[] = [];\r\n\tconst inviteList: CardData[] = [];\r\n\tteamList.reduce((pre: void, team: CardData) => {\r\n\t\tif (team.state) {\r\n\t\t\tmyTeamList.push(team);\r\n\t\t} else {\r\n\t\t\tinviteList.push(team);\r\n\t\t}\r\n\t\treturn pre;\r\n\t}, '');\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<Header />\r\n\t\t\t<MyTeamList list={myTeamList} handleModalOpen={handleModalOpen} />\r\n\t\t\t<InviteList list={inviteList} />\r\n\t\t\t{showCreateTeamModal && <CreateTeamModal handleModalClose={handleModalClose} />}\r\n\t\t</Layout>\r\n\t);\r\n};\r\n\r\nexport default TeamTemplate;\r\n","import React, { useState } from 'react';\r\nimport TeamTemplate from '@templates/TeamTemplate';\r\n\r\nconst TeamPage: React.FC = () => {\r\n\tconst [showCreateTeamModal, setShowCreateTeamModal] = useState(false);\r\n\tconst handleModalOpen = () => {\r\n\t\tsetShowCreateTeamModal(true);\r\n\t};\r\n\tconst handleModalClose = () => {\r\n\t\tsetShowCreateTeamModal(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<TeamTemplate\r\n\t\t\tshowCreateTeamModal={showCreateTeamModal}\r\n\t\t\thandleModalOpen={handleModalOpen}\r\n\t\t\thandleModalClose={handleModalClose}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default TeamPage;\r\n","import styled, { keyframes } from 'styled-components';\r\nimport { ColorCode } from '../../utils/constants';\r\n\r\nconst widthAnimation = keyframes`\r\n\t0% {\r\n\t\twidth: 13rem;\r\n\t}\r\n\t100% {\r\n\t\twidth: 20rem;\r\n\t}\r\n`;\r\n\r\nexport const Layout = styled.div`\r\n\tdisplay: flex;\r\n\twidth: 100vw;\r\n\theight: 100vh;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tbackground-color: ${ColorCode.PRIMARY1};\r\n`;\r\n\r\nexport const Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n\twidth: 20rem;\r\n\theight: 23rem;\r\n\tpadding: 3rem 5rem 5rem 5rem;\r\n\tbackground-color: ${ColorCode.BACKGROUND1};\r\n\tbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n\tborder-radius: 10px;\r\n\tanimation: ${widthAnimation} 0.3s ease-in-out 1;\r\n`;\r\n","import React from 'react';\r\nimport { InputContainer, BtnContainer, GithubButton, Input, Logo, SignUpButton } from '@components/Login';\r\nimport { Container, Layout } from './style';\r\n\r\ninterface Props {\r\n\tsignUpHandler: () => void;\r\n\tinputNameHandler: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n\tinputEmailHandler: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n\tinputPwHandler: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nconst SignUpTemplate: React.FC<Props> = ({ signUpHandler, inputNameHandler, inputEmailHandler, inputPwHandler }) => {\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<Container>\r\n\t\t\t\t<Logo />\r\n\t\t\t\t<InputContainer>\r\n\t\t\t\t\t<span>이름 : </span>\r\n\t\t\t\t\t<Input type='name' placeholder='2-20자 사이의 영문자, 숫자' onChange={inputNameHandler} />\r\n\t\t\t\t</InputContainer>\r\n\t\t\t\t<InputContainer>\r\n\t\t\t\t\t<span>이메일 : </span>\r\n\t\t\t\t\t<Input type='email' placeholder='scc@boostteams.com' onChange={inputEmailHandler} />\r\n\t\t\t\t</InputContainer>\r\n\t\t\t\t<InputContainer>\r\n\t\t\t\t\t<span>비밀번호 : </span>\r\n\t\t\t\t\t<Input type='password' placeholder='8-15자 사이의 영문자, 숫자' onChange={inputPwHandler} />\r\n\t\t\t\t</InputContainer>\r\n\t\t\t\t<BtnContainer direction='column' gap='1rem'>\r\n\t\t\t\t\t<SignUpButton onClick={signUpHandler} />\r\n\t\t\t\t\t<GithubButton />\r\n\t\t\t\t</BtnContainer>\r\n\t\t\t</Container>\r\n\t\t</Layout>\r\n\t);\r\n};\r\nexport default SignUpTemplate;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\nimport { signUp } from '@apis/auth';\r\nimport SignUpTemplate from '@templates/SignUpTemplate';\r\nimport { getCookie } from '@utils/cookie';\r\nimport { emailRegExp, pwRegExp, nameRegExp } from '@utils/regexs';\r\n\r\nconst checkName = (name: string) => {\r\n\tif (name === '') {\r\n\t\ttoast.warn('😮 이름을 입력해주세요!');\r\n\t\treturn false;\r\n\t}\r\n\tif (!nameRegExp.test(name) || name.length > 20) {\r\n\t\ttoast.warn('😮 올바르지 않은 이름입니다!');\r\n\t\treturn false;\r\n\t}\r\n\treturn true;\r\n};\r\n\r\nconst checkEmail = (email: string) => {\r\n\tif (email === '') {\r\n\t\ttoast.warn('😮 이메일을 입력해주세요!');\r\n\t\treturn false;\r\n\t}\r\n\tif (!emailRegExp.test(email)) {\r\n\t\ttoast.warn('😮 올바르지 않은 이메일 형식입니다!');\r\n\t\treturn false;\r\n\t}\r\n\treturn true;\r\n};\r\n\r\nconst checkPW = (pw: string) => {\r\n\tif (pw === '') {\r\n\t\ttoast.warn('😮 비밀번호를 입력해주세요!');\r\n\t\treturn false;\r\n\t}\r\n\tif (!pwRegExp.test(pw) || pw.length > 15) {\r\n\t\ttoast.warn('😮 올바르지 않은 비밀번호입니다!');\r\n\t\treturn false;\r\n\t}\r\n\treturn true;\r\n};\r\n\r\nconst SignUpPage: React.FC = () => {\r\n\tconst history = useHistory();\r\n\tconst [name, setName] = useState('');\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [pw, setPw] = useState('');\r\n\tconst signUpHandler = () => {\r\n\t\tif (checkName(name) && checkEmail(email) && checkPW(pw)) {\r\n\t\t\tsignUp({ userName: name, userEmail: email, userPassword: pw }, () => {\r\n\t\t\t\tlocalStorage.setItem('JWT', getCookie('JWT'));\r\n\t\t\t\ttoast.success('😎 회원가입 성공');\r\n\t\t\t\thistory.push('/team');\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\tconst inputNameHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetName(e.target.value);\r\n\t};\r\n\tconst inputEmailHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetEmail(e.target.value);\r\n\t};\r\n\tconst inputPwHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetPw(e.target.value);\r\n\t};\r\n\treturn (\r\n\t\t<SignUpTemplate\r\n\t\t\tsignUpHandler={signUpHandler}\r\n\t\t\tinputNameHandler={inputNameHandler}\r\n\t\t\tinputEmailHandler={inputEmailHandler}\r\n\t\t\tinputPwHandler={inputPwHandler}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default SignUpPage;\r\n","import styled from 'styled-components';\r\n\r\nexport const Layout = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n`;\r\n","import React from 'react';\r\nimport { Layout } from './style';\r\n\r\nconst LoadingTemplate: React.FC = () => {\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<img src='/images/loading.gif' alt='loading' />\r\n\t\t\t<span>Loading...</span>\r\n\t\t</Layout>\r\n\t);\r\n};\r\n\r\nexport default LoadingTemplate;\r\n","import React from 'react';\r\nimport LoadingTemplate from '@templates/LoadingTemplate';\r\n\r\nconst LoadingPage: React.FC = () => {\r\n\treturn <LoadingTemplate />;\r\n};\r\n\r\nexport default LoadingPage;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nexport const Layout = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tgap: 2rem;\r\n\timg {\r\n\t\tposition: absolute;\r\n\t\twidth: 30rem;\r\n\t\tz-index: 0;\r\n\t\topacity: 0.2;\r\n\t}\r\n`;\r\n\r\nexport const Title = styled.span`\r\n\tfont-weight: 700;\r\n\tfont-size: 10rem;\r\n\tcolor: ${ColorCode.FONT1};\r\n\tz-index: 10;\r\n`;\r\n\r\nexport const SubTitle = styled.span`\r\n\tfont-weight: 700;\r\n\tfont-size: 2rem;\r\n\tz-index: 10;\r\n`;\r\n\r\nexport const Text = styled.span`\r\n\tfont-size: 1.5rem;\r\n\tz-index: 10;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n\twidth: 15rem;\r\n\theight: 3rem;\r\n\tfont-size: 1rem;\r\n\tz-index: 10;\r\n\tbackground-color: ${ColorCode.PRIMARY1};\r\n\tcolor: ${ColorCode.WHITE};\r\n\tborder: none;\r\n\tborder-radius: 20px;\r\n\t&:hover {\r\n\t\tbackground-color: ${ColorCode.PRIMARY2};\r\n\t\tcolor: ${ColorCode.BLACK};\r\n\t}\r\n\ttransition: all 0.15s ease-in-out;\r\n`;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { Layout, Title, SubTitle, Text, Button } from './style';\r\n\r\nconst ErrorTemplate: React.FC = () => {\r\n\tconst history = useHistory();\r\n\tconst handleClick = () => history.goBack();\r\n\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<img src='/logo.png' alt='logo' />\r\n\t\t\t<Title>404</Title>\r\n\t\t\t<SubTitle>페이지가 존재하지 않습니다</SubTitle>\r\n\t\t\t<Text>주소를 잘못 입력하셨거나 요청하신 페이지가 삭제 / 이동되었을 수 있습니다</Text>\r\n\t\t\t<Button type='button' onClick={handleClick}>\r\n\t\t\t\t돌아가기\r\n\t\t\t</Button>\r\n\t\t</Layout>\r\n\t);\r\n};\r\n\r\nexport default ErrorTemplate;\r\n","import React from 'react';\r\nimport ErrorTemplate from '@templates/ErrorTemplate';\r\n\r\nconst ErrorPage: React.FC = () => {\r\n\treturn <ErrorTemplate />;\r\n};\r\n\r\nexport default ErrorPage;\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nconst PublicRoute = ({ component: Component, ...rest }: any) => {\r\n\treturn (\r\n\t\t<Route\r\n\t\t\t{...rest}\r\n\t\t\trender={(props) => (localStorage.getItem('JWT') ? <Redirect to='/team' /> : <Component {...props} />)}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default PublicRoute;\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\n\r\nimport LoginPage from '@pages/LoginPage';\r\nimport TeamPage from '@pages/TeamPage';\r\nimport SignUpPage from '@pages/SignUpPage';\r\nimport LoadingPage from '@pages/LoadingPage';\r\nimport ErrorPage from '@pages/ErrorPage';\r\n\r\nimport PrivateRoute from './PrivateRoute';\r\nimport PublicRoute from './PublicRoute';\r\n\r\nconst TeamRoute = React.lazy(() => import('./TeamRoute'));\r\n\r\nconst Router: React.FC = () => {\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t\t\t<Switch>\r\n\t\t\t\t<PublicRoute exact path='/' component={LoginPage} />\r\n\t\t\t\t<PublicRoute exact path='/signup' component={SignUpPage} />\r\n\t\t\t\t<PrivateRoute exact path='/team' component={TeamPage} />\r\n\t\t\t\t<TeamRoute path='/team/:teamId' />\r\n\t\t\t\t<Route exact path='/loading' component={LoadingPage} />\r\n\t\t\t\t<Route path='*' component={ErrorPage} />\r\n\t\t\t</Switch>\r\n\t\t</BrowserRouter>\r\n\t);\r\n};\r\n\r\nexport default Router;\r\n/* \r\n1. url에 유저 id 안 넣어도 됨? (안 넣어도 여전히 RESTful한 가?)\r\n\r\nusers/:user_id/teams/:team_id/calendar\r\nusers/:user_id/teams/:team_id/chats\r\nusers/:user_id/teams/:team_id/chats/:chat_id\r\n*/\r\n","import React, { Suspense } from 'react';\r\nimport dotenv from 'dotenv';\r\nimport { RecoilRoot } from 'recoil';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport Router from './routes/router';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport LoadingPage from './pages/LoadingPage';\r\n\r\ndotenv.config();\r\n\r\nconst App: React.FC = () => {\r\n\treturn (\r\n\t\t<Suspense fallback={<LoadingPage />}>\r\n\t\t\t<RecoilRoot>\r\n\t\t\t\t<Router />\r\n\t\t\t</RecoilRoot>\r\n\t\t\t<ToastContainer />\r\n\t\t</Suspense>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\r\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n\t\t\tgetCLS(onPerfEntry);\r\n\t\t\tgetFID(onPerfEntry);\r\n\t\t\tgetFCP(onPerfEntry);\r\n\t\t\tgetLCP(onPerfEntry);\r\n\t\t\tgetTTFB(onPerfEntry);\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport reset from 'styled-reset';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  ${reset}\r\n  @font-face {\r\n    font-family: 'Noto Sans KR';\r\n    font-weight: 300;\r\n    font-style: normal;\r\n    src: url('/public/fonts/NotoSansKR-Light.otf') format('opentype'),\r\n  }\r\n  @font-face {\r\n    font-family: 'Noto Sans KR';\r\n    font-weight: 400;\r\n    font-style: normal;\r\n    src: url('/public/fonts/NotoSansKR-Regular.otf') format('opentype'),\r\n  }\r\n  @font-face {\r\n    font-family: 'Noto Sans KR';\r\n    font-weight: 500;\r\n    font-style: normal;\r\n    src: url('/public/fonts/NotoSansKR-Medium.otf') format('opentype'),\r\n  }\r\n  @font-face {\r\n    font-family: 'Noto Sans KR';\r\n    font-weight: 700;\r\n    font-style: normal;\r\n    src: url('/public/fonts/NotoSansKR-Bold.otf') format('opentype'),\r\n  }\r\n  @font-face {\r\n    font-family: 'Noto Sans';\r\n    font-weight: 400;\r\n    font-style: normal;\r\n    src: url('/public/fonts/NotoSans-Regular.otf') format('truetype'),\r\n  }\r\n  @font-face {\r\n    font-family: 'Noto Sans';\r\n    font-weight: 700;\r\n    font-style: normal;\r\n    src: url('/public/fonts/NotoSans-Bold.otf') format('truetype'),\r\n  }\r\n  html {\r\n    font-family: 'Noto Sans KR', 'Noto Sans', sans-serif;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    color: ${ColorCode.BLACK};\r\n    &:visited {\r\n      color: ${ColorCode.BLACK};\r\n    }\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport GlobalStyle from './styles/global';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<GlobalStyle />\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root'),\r\n);\r\n\r\nreportWebVitals();\r\n","const baseUrl = process.env.REACT_APP_SERVER ?? 'http://localhost:4000';\r\n\r\nconst header: HeadersInit = {\r\n\t'Content-Type': 'application/json',\r\n\tauthorization: `Bearer ${localStorage.getItem('JWT')}`,\r\n};\r\n\r\nconst getHeader = () => {\r\n\theader.authorization = `Bearer ${localStorage.getItem('JWT')}`;\r\n\treturn header;\r\n};\r\n\r\ntype RequestData = { [key: string]: string | number | any[] };\r\n\r\nconst fetchApi = {\r\n\tget: (path: string): Promise<Response> =>\r\n\t\tfetch(`${baseUrl}${path}`, {\r\n\t\t\tmethod: 'GET',\r\n\t\t\tmode: 'cors',\r\n\t\t\tcredentials: 'include',\r\n\t\t\theaders: getHeader(),\r\n\t\t}),\r\n\r\n\tpost: (path: string, data: RequestData): Promise<Response> =>\r\n\t\tfetch(`${baseUrl}${path}`, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tmode: 'cors',\r\n\t\t\tcredentials: 'include',\r\n\t\t\theaders: getHeader(),\r\n\t\t\tbody: JSON.stringify(data),\r\n\t\t}),\r\n\r\n\tput: (path: string, data: RequestData): Promise<Response> =>\r\n\t\tfetch(`${baseUrl}${path}`, {\r\n\t\t\tmethod: 'PUT',\r\n\t\t\tmode: 'cors',\r\n\t\t\tcredentials: 'include',\r\n\t\t\theaders: getHeader(),\r\n\t\t\tbody: JSON.stringify(data),\r\n\t\t}),\r\n\r\n\tpatch: (path: string, data: RequestData): Promise<Response> =>\r\n\t\tfetch(`${baseUrl}${path}`, {\r\n\t\t\tmethod: 'PATCH',\r\n\t\t\tmode: 'cors',\r\n\t\t\tcredentials: 'include',\r\n\t\t\theaders: getHeader(),\r\n\t\t\tbody: JSON.stringify(data),\r\n\t\t}),\r\n\r\n\tdelete: (path: string, data?: RequestData): Promise<Response> =>\r\n\t\tfetch(`${baseUrl}${path}`, {\r\n\t\t\tmethod: 'DELETE',\r\n\t\t\tmode: 'cors',\r\n\t\t\tcredentials: 'include',\r\n\t\t\theaders: getHeader(),\r\n\t\t\tbody: JSON.stringify(data),\r\n\t\t}),\r\n};\r\n\r\nexport default fetchApi;\r\n","import styled from 'styled-components';\r\nimport { ColorCode, TeamCard, Font, PrimaryPalette } from '@utils/constants';\r\n\r\ninterface ThumbnailProps {\r\n\tteam_id: number;\r\n}\r\n\r\nexport const Container = styled.div`\r\n\tdisplay: flex;\r\n\tposition: relative;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tbackground-color: ${ColorCode.WHITE};\r\n\tborder-radius: ${TeamCard.BORDER_RADIUS};\r\n\tbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.1);\r\n\twidth: ${TeamCard.WIDTH};\r\n\theight: ${TeamCard.HEIGHT};\r\n\tcursor: pointer;\r\n\t&:hover {\r\n\t\tfilter: brightness(90%);\r\n\t}\r\n\ttransition: filter 0.2s ease-in-out;\r\n`;\r\n\r\nexport const ThumbnailWrapper = styled('div')<ThumbnailProps>`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\twidth: 9rem;\r\n\theight: 9rem;\r\n\tborder-radius: 5px;\r\n\tfont-size: 3rem;\r\n\tcolor: ${ColorCode.FONT1};\r\n\tbackground-color: ${(props) => PrimaryPalette[props.team_id % 6]};\r\n\tmargin-bottom: 1rem;\r\n`;\r\n\r\nexport const Name = styled.span`\r\n\twidth: ${TeamCard.WIDTH};\r\n\theight: calc(${TeamCard.HEIGHT} * 0.1);\r\n\tfont-size: ${Font.MEDIUM};\r\n\tfont-weight: bold;\r\n\ttext-align: center;\r\n\tpadding-top: 0.5rem;\r\n\tpadding-bottom: 0.5rem;\r\n`;\r\n\r\nexport const InviteButtonContainer = styled.div`\r\n\tposition: absolute;\r\n\tpadding: 1rem;\r\n\twidth: calc(100% - 2rem); // 2rem: padding\r\n\theight: calc(100% - 2rem); // 2rem: padding\r\n\tdisplay: flex;\r\n\talign-items: end;\r\n\tbackground-color: rgba(0, 0, 0, 0.3);\r\n\tborder-radius: ${TeamCard.BORDER_RADIUS};\r\n\tjustify-content: space-between;\r\n`;\r\n","import AES from 'crypto-js/aes';\r\nimport { toast } from 'react-toastify';\r\nimport { removeCookie } from '@utils/cookie';\r\nimport fetchApi from '@utils/fetch';\r\n\r\n/**\r\n * @param cb: 로그인 확인 성공시 콜백 함수\r\n * @param err: 로그인 확인 실패시 콜백 함수\r\n */\r\nexport const login = async ({ userEmail, userPassword }: { userEmail: string; userPassword: string }, cb?: any) => {\r\n\tconst key = process.env.REACT_APP_AES_KEY || 'key';\r\n\tconst encryptedPassword = AES.encrypt(userPassword, key).toString();\r\n\ttry {\r\n\t\tconst res = await fetchApi.post('/api/auth/login', { userEmail, encryptedPassword });\r\n\t\tconst data = await res.json();\r\n\t\tcb(data);\r\n\t} catch (error) {\r\n\t\ttoast.error('😣 존재하지 않는 계정입니다!');\r\n\t}\r\n};\r\n\r\nexport const githubLogin = () => {\r\n\twindow.location.href = `${process.env.REACT_APP_SERVER ?? 'http://localhost:4000'}/api/auth/github`;\r\n};\r\n\r\n/**\r\n * @param cb: 로그인 확인 성공시 콜백 함수\r\n * @param err: 로그인 확인 실패시 콜백 함수\r\n */\r\nexport const check = async (cb?: any, err?: any) => {\r\n\ttry {\r\n\t\tconst res = await fetchApi.get('/api/auth/info');\r\n\t\tconst data = await res.json();\r\n\t\tif (res.status === 200) {\r\n\t\t\tcb(data);\r\n\t\t}\r\n\t\tif (res.status === 401) {\r\n\t\t\terr();\r\n\t\t}\r\n\t} catch (err) {\r\n\t\ttoast.error('😣 서버와의 연결이 심상치 않습니다!');\r\n\t}\r\n};\r\n\r\nexport const signUp = async (\r\n\t{ userName, userEmail, userPassword }: { userName: string; userEmail: string; userPassword: string },\r\n\tcb?: any,\r\n) => {\r\n\tconst key = process.env.REACT_APP_AES_KEY || 'key';\r\n\tconst encryptedPassword = AES.encrypt(userPassword, key).toString();\r\n\ttry {\r\n\t\tconst res = await fetchApi.post('/api/auth/signup', { userName, userEmail, encryptedPassword });\r\n\t\tconst data = await res.json();\r\n\t\tif (res.status === 200) {\r\n\t\t\tcb();\r\n\t\t}\r\n\t\tif (res.status === 409 && data.conflict === 'email') {\r\n\t\t\ttoast.warn('😣 이미 존재하는 계정입니다!');\r\n\t\t}\r\n\t\tif (res.status === 409 && data.conflict === 'name') {\r\n\t\t\ttoast.warn('😣 이미 존재하는 이름입니다!');\r\n\t\t}\r\n\t} catch (err) {\r\n\t\ttoast.error('😣 서버와의 연결이 심상치 않습니다!');\r\n\t}\r\n};\r\n\r\nexport const logout = (cb: any) => {\r\n\tlocalStorage.removeItem('JWT');\r\n\tremoveCookie('JWT');\r\n\t// TODO: fetch, socket\r\n\tcb();\r\n};\r\n","import styled from 'styled-components';\r\nimport { Font } from '@utils/constants';\r\n\r\ninterface NormalButtonProps {\r\n\tbackgroundColor: string;\r\n\tfontColor: string;\r\n}\r\n\r\nexport const NormalButton = styled.button<NormalButtonProps>`\r\n\toutline: none;\r\n\tbackground-color: ${(props) => `${props.backgroundColor}`};\r\n\tcolor: ${(props) => `${props.fontColor}`};\r\n\tborder-radius: 10px;\r\n\tborder: none;\r\n\tfont-size: ${Font.SMALL};\r\n\tfont-weight: 600;\r\n\twidth: 4rem;\r\n\tpadding: 0.25rem 1rem;\r\n\tcursor: pointer;\r\n\t&:hover {\r\n\t\tfilter: brightness(95%);\r\n\t}\r\n`;\r\n","import React from 'react';\r\nimport { NormalButton } from './style';\r\n\r\nexport interface Props {\r\n\ttext: string;\r\n\tbackgroundColor: string;\r\n\tfontColor: string;\r\n\thandler: () => void;\r\n}\r\n\r\nconst Button: React.FC<Props> = ({ text, backgroundColor, fontColor, handler }) => {\r\n\treturn (\r\n\t\t<NormalButton type='button' onClick={handler} backgroundColor={backgroundColor} fontColor={fontColor}>\r\n\t\t\t{text}\r\n\t\t</NormalButton>\r\n\t);\r\n};\r\n\r\nexport default Button;\r\n","import { Cookies } from 'react-cookie';\r\n\r\nconst cookies = new Cookies();\r\n\r\nexport const getCookie: any = (name: string) => {\r\n\treturn cookies.get(name);\r\n};\r\n\r\nexport const removeCookie: any = (name: string) => {\r\n\treturn cookies.remove(name);\r\n};\r\n","import { TeamUsersResType, TeamUsersType } from '@src/types/team';\r\nimport { Role } from '@utils/constants';\r\nimport fetchApi from '@utils/fetch';\r\nimport { toast } from 'react-toastify';\r\n\r\ninterface teamData {\r\n\tteam_id?: number;\r\n\tteam_name: string;\r\n\tteam_desc: string;\r\n}\r\n\r\nexport const create = async (setLoadTrigger: (param: any) => void, teamData: teamData) => {\r\n\ttry {\r\n\t\tconst res = await fetchApi.post('/api/teams', { ...teamData });\r\n\t\tif (res.status === 409) throw new Error('😣 팀 생성에 실패했습니다!');\r\n\t\tsetLoadTrigger((prev: number) => prev + 1);\r\n\t} catch (err) {\r\n\t\ttoast.error((err as Error).message);\r\n\t}\r\n};\r\n\r\nexport const readMyTeam = async () => {\r\n\ttry {\r\n\t\tconst res = await fetchApi.get(`/api/teams`);\r\n\t\tif (res.status === 409) throw new Error('😣 팀 목록을 읽어오지 못했습니다!');\r\n\t\tconst data = await res.json();\r\n\t\treturn data;\r\n\t} catch (err) {\r\n\t\ttoast.error((err as Error).message);\r\n\t\treturn err;\r\n\t}\r\n};\r\n\r\nexport const update = async (setLoadTrigger: (param: any) => void, teamId: number, teamData: teamData) => {\r\n\ttry {\r\n\t\tconst res = await fetchApi.put(`/api/teams/${teamId}`, { ...teamData });\r\n\t\tif (res.status === 403) throw new Error('😣 권한이 없습니다!');\r\n\t\telse if (res.status === 409) throw new Error('😣 팀 업데이트에 실패했습니다!');\r\n\t\tsetLoadTrigger((prev: number) => prev + 1);\r\n\t} catch (err) {\r\n\t\ttoast.error((err as Error).message);\r\n\t}\r\n};\r\n\r\nexport const deleteTeam = async (setLoadTrigger: (param: any) => void, teamId: number) => {\r\n\ttry {\r\n\t\tconst res = await fetchApi.delete(`/api/teams/${teamId}`);\r\n\t\tif (res.status === 403) throw new Error('😣 권한이 없습니다!');\r\n\t\telse if (res.status === 409) throw new Error('😣 팀 삭제에 실패했습니다!');\r\n\t\tsetLoadTrigger((prev: number) => prev + 1);\r\n\t} catch (err) {\r\n\t\ttoast.error((err as Error).message);\r\n\t}\r\n};\r\n\r\nexport const inviteUser = async (teamId: number, userName: string) => {\r\n\ttry {\r\n\t\tconst res = await fetchApi.post(`/api/teams/${teamId}/invitations`, { teamId, userName });\r\n\t\tif (res.status === 404) throw new Error('😣 해당 유저가 존재하지 않습니다!');\r\n\t\telse if (res.status === 403) throw new Error('😣 권한이 없습니다!');\r\n\t\telse if (res.status === 409) throw new Error('😣 초대에 실패했습니다!');\r\n\t} catch (err) {\r\n\t\ttoast.error((err as Error).message);\r\n\t}\r\n};\r\n\r\nexport const accept = async (setLoadTrigger: (param: any) => void, teamId: number) => {\r\n\ttry {\r\n\t\tconst res = await fetchApi.patch(`/api/teams/${teamId}/invitations`, {});\r\n\t\tif (res.status === 403) throw new Error('😣 권한이 없습니다!');\r\n\t\telse if (res.status === 409) throw new Error('😣 초대를 수락하지 못했습니다!');\r\n\t\tsetLoadTrigger((prev: number) => prev + 1);\r\n\t} catch (err) {\r\n\t\ttoast.error((err as Error).message);\r\n\t}\r\n};\r\n\r\nexport const decline = async (setLoadTrigger: (param: any) => void, teamId: number) => {\r\n\ttry {\r\n\t\tconst res = await fetchApi.delete(`/api/teams/${teamId}/invitations`);\r\n\t\tif (res.status === 403) throw new Error('😣 권한이 없습니다!');\r\n\t\telse if (res.status === 409) throw new Error('😣 초대를 거절하지 못했습니다!');\r\n\t\tsetLoadTrigger((prev: number) => prev + 1);\r\n\t} catch (err) {\r\n\t\ttoast.error((err as Error).message);\r\n\t}\r\n};\r\n\r\nexport const kickOut = async (setLoadTrigger: (param: any) => void, userId: number, teamId: number) => {\r\n\ttry {\r\n\t\tconst res = await fetchApi.delete(`/api/teams/${teamId}/users/${userId}`);\r\n\t\tif (res.status === 403) throw new Error('😣 권한이 없습니다!');\r\n\t\telse if (res.status === 409) throw new Error('😣 유저 강퇴에 실패했습니다!');\r\n\t\tsetLoadTrigger((prev: number) => prev + 1);\r\n\t} catch (err) {\r\n\t\ttoast.error((err as Error).message);\r\n\t}\r\n};\r\n\r\nexport const leaveTeam = async (setLoadTrigger: (param: any) => void, teamId: number) => {\r\n\ttry {\r\n\t\tconst res = await fetchApi.delete(`/api/teams/${teamId}/invitations`);\r\n\t\tif (res.status === 409) throw new Error('😣 팀 탈퇴에 실패했습니다!');\r\n\t\tsetLoadTrigger((prev: number) => prev + 1);\r\n\t} catch (err) {\r\n\t\ttoast.error((err as Error).message);\r\n\t}\r\n};\r\n\r\nexport const readTeamInfo = async (id: number) => {\r\n\ttry {\r\n\t\tconst res = await fetchApi.get(`/api/teams/${id}`);\r\n\t\tif (res.status === 403) throw new Error('😣 올바른 접근이 아닙니다!');\r\n\t\telse if (res.status === 403) throw new Error('😣 팀 정보를 읽어오지 못했습니다!');\r\n\t\tconst data = await res.json();\r\n\t\treturn data;\r\n\t} catch (err) {\r\n\t\ttoast.error((err as Error).message);\r\n\t\treturn err;\r\n\t}\r\n};\r\n\r\nexport const readTeamUsers = async (id: number) => {\r\n\ttry {\r\n\t\tconst res = await fetchApi.get(`/api/teams/${id}/users`);\r\n\t\tif (res.status === 403) throw new Error('😣 권한이 없습니다!');\r\n\t\telse if (res.status === 409) throw new Error('😣 유저 목록을 읽어오지 못했습니다!');\r\n\t\tconst data = await res.json();\r\n\t\tconst entries = data.map((el: TeamUsersResType) => {\r\n\t\t\treturn [\r\n\t\t\t\tel.user.user_id,\r\n\t\t\t\t{\r\n\t\t\t\t\tuserId: el.user.user_id,\r\n\t\t\t\t\tname: el.user.user_name,\r\n\t\t\t\t\temail: el.user.user_email,\r\n\t\t\t\t\tcolor: el.user.user_color,\r\n\t\t\t\t\trole: Role[el.role],\r\n\t\t\t\t},\r\n\t\t\t];\r\n\t\t});\r\n\t\tconst teamUsers: TeamUsersType = Object.fromEntries(entries);\r\n\t\treturn teamUsers;\r\n\t} catch (err) {\r\n\t\ttoast.error((err as Error).message);\r\n\t\treturn {};\r\n\t}\r\n};\r\n\r\nexport const patchRole = async (\r\n\tsetLoadTrigger: (param: any) => void,\r\n\tuserId: number,\r\n\tteamId: number,\r\n\tnewRole: number,\r\n) => {\r\n\ttry {\r\n\t\tconst res = await fetchApi.patch(`/api/teams/${teamId}/users/${userId}`, { role: newRole });\r\n\t\tif (res.status === 403) throw new Error('😣 권한이 없습니다!');\r\n\t\telse if (res.status === 409) throw new Error('😣 권한 수정에 실패했습니다!');\r\n\t\tsetLoadTrigger((prev: number) => prev + 1);\r\n\t} catch (err) {\r\n\t\ttoast.error((err as Error).message);\r\n\t}\r\n};\r\n","import { atom, selector, selectorFamily } from 'recoil';\r\nimport { readMyTeam, readTeamInfo, readTeamUsers } from '@apis/team';\r\n\r\nexport const teamListLoadTrigger = atom({\r\n\tkey: 'loadTrigger',\r\n\tdefault: 0,\r\n});\r\n\r\nexport const userTeamList = selector({\r\n\tkey: 'teamList',\r\n\tget: async ({ get }) => {\r\n\t\tget(teamListLoadTrigger);\r\n\t\tconst teamList = await readMyTeam();\r\n\t\treturn teamList;\r\n\t},\r\n});\r\n\r\nexport const teamInfoLoadTrigger = atom({\r\n\tkey: 'loadTrigger',\r\n\tdefault: 0,\r\n});\r\n\r\nexport const teamInfoSelector = selectorFamily({\r\n\tkey: 'teamInfoSelector',\r\n\tget:\r\n\t\t(teamId: number) =>\r\n\t\tasync ({ get }) => {\r\n\t\t\tget(teamInfoLoadTrigger);\r\n\t\t\tconst team = await readTeamInfo(teamId);\r\n\t\t\treturn team;\r\n\t\t},\r\n});\r\n\r\nexport const selectedUser = atom({\r\n\tkey: 'user',\r\n\tdefault: {\r\n\t\tid: -1,\r\n\t},\r\n});\r\n\r\nexport const teamUsersTrigger = atom({\r\n\tkey: 'teamUsersTrigger',\r\n\tdefault: 0,\r\n});\r\n\r\nexport const teamUsersSelector = selectorFamily({\r\n\tkey: 'teamUsersSelector',\r\n\tget:\r\n\t\t(teamId: number) =>\r\n\t\tasync ({ get }) => {\r\n\t\t\tget(teamUsersTrigger);\r\n\t\t\tconst data = await readTeamUsers(teamId);\r\n\t\t\treturn data;\r\n\t\t},\r\n});\r\n\r\nexport const modalState = atom({\r\n\tkey: 'modalState',\r\n\tdefault: {\r\n\t\tisOpen: false,\r\n\t\tmode: '',\r\n\t},\r\n});\r\n","enum ColorCode {\r\n\tPRIMARY1 = '#464775',\r\n\tPRIMARY2 = '#C7BFEE',\r\n\tFONT_BASE = '#242424',\r\n\tFONT1 = '#616161',\r\n\tFONT2 = '#ADADAD',\r\n\tLINE1 = '#EBEBEB',\r\n\tLINE2 = '#D1D1D1',\r\n\tLINE3 = '#888888',\r\n\tBACKGROUND1 = '#F5F5F5',\r\n\tBACKGROUND2 = '#F0F0F0',\r\n\tPLACEHOLDER = '#BBBBBB',\r\n\tWHITE = '#FFFFFF',\r\n\tBLACK = '#000000',\r\n\tGRAY = '#808080',\r\n\tRED = '#FF0000',\r\n\tORANGE = '#FFA500',\r\n\tHOVER = '#6264a7',\r\n\tMINT = '#92ddc8',\r\n\tDARKMINT = '#0a3a2a',\r\n\tBABYBLUE = '#c9eaff',\r\n\tDARKBLUE = '#274472',\r\n\tYELLOW = '#FFD972',\r\n\tBABYPINK = '#FCC7CF',\r\n\tHOTPINK = '#D85678',\r\n\tBABYGREEN = '#C5E89B',\r\n\tDEEPGREEN = '#2B4D00',\r\n\tGREEN = '#008000',\r\n\tERROR = '#b8283c',\r\n}\r\n\r\nenum Font {\r\n\tLARGE = '1.5rem',\r\n\tMEDIUM = '1rem',\r\n\tSMALL = '0.9rem',\r\n\tX_SMALL = '0.8rem',\r\n}\r\n\r\nconst PrimaryPalette = [\r\n\tColorCode.PRIMARY2,\r\n\tColorCode.BABYPINK,\r\n\tColorCode.BABYGREEN,\r\n\tColorCode.MINT,\r\n\tColorCode.YELLOW,\r\n\tColorCode.BABYBLUE,\r\n];\r\n\r\nconst SecondaryPalette = [\r\n\tColorCode.PRIMARY1,\r\n\tColorCode.HOTPINK,\r\n\tColorCode.DEEPGREEN,\r\n\tColorCode.DARKMINT,\r\n\tColorCode.ORANGE,\r\n\tColorCode.DARKBLUE,\r\n];\r\n\r\nconst TeamCard = {\r\n\tBORDER_RADIUS: '1rem',\r\n\tWIDTH: '15rem',\r\n\tHEIGHT: '15rem',\r\n};\r\n\r\nconst REM = 16; // TODO: 반응형 (style과 별도로 적용)\r\n\r\n// const converRemToPx = (rem: number) => rem * parseFloat(getComputedStyle(document.documentElement).fontSize);\r\n\r\nconst NAVBAR = {\r\n\tWIDTH: 4.2 * REM,\r\n};\r\n\r\nconst HEADER = {\r\n\tHEIGHT: 3 * REM,\r\n};\r\n\r\nconst CANVAS = {\r\n\tWIDTH: window.innerWidth - NAVBAR.WIDTH,\r\n\tHEIGHT: window.innerHeight - HEADER.HEIGHT,\r\n};\r\n\r\nconst POSTIT = {\r\n\tWIDTH: 16 * REM,\r\n\tHEIGHT: 16 * REM,\r\n};\r\n\r\ntype RoleType = {\r\n\t[key: number]: string;\r\n};\r\n\r\nconst Role: RoleType = {\r\n\t0: '관리자',\r\n\t1: '구성원',\r\n};\r\n\r\nconst RoleArr = ['관리자', '구성원'];\r\n\r\nconst MODAL_THEME = {\r\n\tFORM: 'form',\r\n\tNOTIFICATION: 'notification',\r\n};\r\n\r\nexport { ColorCode, Font, PrimaryPalette, SecondaryPalette, TeamCard, Role, RoleArr };\r\nexport { REM, NAVBAR, HEADER, CANVAS, POSTIT, MODAL_THEME };\r\n","import { atom } from 'recoil';\r\n\r\nconst userState = atom({\r\n\tkey: 'userState',\r\n\tdefault: { id: -1, name: '', email: '', color: 0, github_id: '', github_name: '' },\r\n});\r\n\r\nexport default userState;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nexport const Background = styled.div`\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100vw;\r\n\theight: 100vh;\r\n\tz-index: 25;\r\n\tbackground-color: rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nexport const Input = styled.input`\r\n\tline-height: 1.5rem;\r\n\tfont-size: 0.9rem;\r\n\twidth: calc(100% - 1rem);\r\n\tborder-radius: 5px;\r\n\tbackground-color: ${ColorCode.BACKGROUND1};\r\n\tpadding: 0.5rem;\r\n`;\r\n\r\nexport const Textarea = styled.textarea`\r\n\tfont-size: 0.9rem;\r\n\twidth: calc(100% - 1rem);\r\n\tresize: none;\r\n\theight: 3rem;\r\n\tfont-family: 'Noto Sans KR', 'Noto Sans';\r\n\toutline: none;\r\n\tborder: none;\r\n\tborder-radius: 5px;\r\n\tbackground-color: ${ColorCode.BACKGROUND1};\r\n\tpadding: 0.5rem;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nexport const Container = styled.div`\r\n\tposition: fixed;\r\n\ttop: 50%;\r\n\tleft: 50%;\r\n\ttransform: translate(-50%, -50%);\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: 2rem;\r\n\twidth: 30rem;\r\n\tbackground-color: ${ColorCode.WHITE};\r\n\tbox-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\r\n\tborder-radius: 8px;\r\n\tz-index: 25;\r\n\tpadding: 4rem 2rem 2rem 2rem;\r\n\tbox-sizing: border-box;\r\n\tinput {\r\n\t\tborder: none;\r\n\t\t&:focus {\r\n\t\t\toutline: none;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: right;\r\n\tbutton {\r\n\t\tmargin-left: 1rem;\r\n\t}\r\n`;\r\n\r\nexport const Title = styled.span`\r\n\tfont-size: 1.1rem;\r\n\tfont-weight: 700;\r\n\tcolor: ${ColorCode.FONT1};\r\n`;\r\n","import React from 'react';\r\nimport { ColorCode } from '@utils/constants';\r\nimport { Container, ButtonContainer, Title } from './style';\r\nimport Button from '../../Button';\r\n\r\nexport interface Props {\r\n\ttitle: string | undefined;\r\n\thandleModalClose: () => void;\r\n\thandleSubmit: () => void;\r\n\tremoveSubmitButton: boolean;\r\n\tsubmitBtnName: string;\r\n\tcloseBtnName: string;\r\n}\r\n\r\nconst FormModal: React.FC<Props> = ({\r\n\tchildren,\r\n\ttitle,\r\n\thandleModalClose,\r\n\thandleSubmit,\r\n\tremoveSubmitButton = false,\r\n\tsubmitBtnName,\r\n\tcloseBtnName,\r\n}) => {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{title && <Title>{title}</Title>}\r\n\t\t\t{children}\r\n\t\t\t<ButtonContainer>\r\n\t\t\t\t{!removeSubmitButton && (\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttext={submitBtnName}\r\n\t\t\t\t\t\thandler={handleSubmit}\r\n\t\t\t\t\t\tbackgroundColor={ColorCode.PRIMARY1}\r\n\t\t\t\t\t\tfontColor={ColorCode.WHITE}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttext={closeBtnName}\r\n\t\t\t\t\thandler={handleModalClose}\r\n\t\t\t\t\tbackgroundColor={ColorCode.WHITE}\r\n\t\t\t\t\tfontColor={ColorCode.FONT_BASE}\r\n\t\t\t\t/>\r\n\t\t\t</ButtonContainer>\r\n\t\t</Container>\r\n\t);\r\n};\r\nexport default FormModal;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nexport const Background = styled.div`\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100vw;\r\n\theight: 100vh;\r\n\tbackground-color: transparent;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n\tposition: fixed;\r\n\ttop: 50%;\r\n\tleft: 50%;\r\n\ttransform: translate(-50%, -50%);\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\twidth: 20rem;\r\n\tbackground-color: ${ColorCode.WHITE};\r\n\tbox-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\r\n\tborder-radius: 8px;\r\n\tz-index: 25;\r\n\tpadding: 0;\r\n\tbox-sizing: border-box;\r\n\toverflow: hidden;\r\n\tinput {\r\n\t\tborder: none;\r\n\t\t&:focus {\r\n\t\t\toutline: none;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n\tdisplay: flex;\r\n\twidth: 100%;\r\n\tborder-top: 2px solid ${ColorCode.LINE1};\r\n\tbutton {\r\n\t\twidth: 100%;\r\n\t\theight: 2.5rem;\r\n\t\tborder: none;\r\n\t\tborder-radius: 0;\r\n\t}\r\n`;\r\n\r\nexport const Title = styled.span`\r\n\twidth: 100%;\r\n\theight: 2rem;\r\n\tline-height: 2rem;\r\n\tfont-size: 1.05rem;\r\n\tfont-weight: 600;\r\n\tcolor: ${ColorCode.FONT1};\r\n\ttext-align: center;\r\n\tborder-bottom: 2px solid ${ColorCode.LINE1};\r\n`;\r\n","import React from 'react';\r\nimport Button from '@components/common/Button';\r\nimport { ColorCode } from '@utils/constants';\r\nimport { Container, ButtonContainer, Title } from './style';\r\n\r\nexport interface Props {\r\n\ttitle: string | undefined;\r\n\thandleModalClose: () => void;\r\n\thandleSubmit: () => void;\r\n\tremoveSubmitButton: boolean;\r\n\tsubmitBtnName: string;\r\n\tcloseBtnName: string;\r\n}\r\n\r\nconst NotificationModal: React.FC<Props> = ({\r\n\tchildren,\r\n\ttitle = '알림',\r\n\thandleModalClose,\r\n\thandleSubmit,\r\n\tremoveSubmitButton = false,\r\n\tsubmitBtnName,\r\n\tcloseBtnName,\r\n}) => {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Title>{title}</Title>\r\n\t\t\t{children}\r\n\t\t\t<ButtonContainer>\r\n\t\t\t\t{!removeSubmitButton && (\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttext={submitBtnName}\r\n\t\t\t\t\t\thandler={handleSubmit}\r\n\t\t\t\t\t\tbackgroundColor={ColorCode.WHITE}\r\n\t\t\t\t\t\tfontColor={ColorCode.RED}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttext={closeBtnName}\r\n\t\t\t\t\thandler={handleModalClose}\r\n\t\t\t\t\tbackgroundColor={ColorCode.WHITE}\r\n\t\t\t\t\tfontColor={ColorCode.FONT_BASE}\r\n\t\t\t\t/>\r\n\t\t\t</ButtonContainer>\r\n\t\t</Container>\r\n\t);\r\n};\r\nexport default NotificationModal;\r\n","import React from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { MODAL_THEME } from '@utils/constants';\r\nimport { Background } from './style';\r\nimport FormModal from './Form';\r\nimport NotificationModal from './Notification';\r\n\r\nexport interface Props {\r\n\ttheme?: string;\r\n\tchildren: React.ReactNode;\r\n\thandleModalClose: () => void;\r\n\thandleSubmit: () => void;\r\n\tremoveSubmitButton: boolean;\r\n\ttitle?: string | undefined;\r\n\tsubmitBtnName?: string;\r\n\tcloseBtnName?: string;\r\n}\r\n\r\nconst Modal: React.FC<Props> = ({\r\n\ttheme = MODAL_THEME.FORM,\r\n\tchildren,\r\n\thandleModalClose,\r\n\thandleSubmit,\r\n\tremoveSubmitButton = false,\r\n\ttitle,\r\n\tsubmitBtnName = '저장',\r\n\tcloseBtnName = '닫기',\r\n}) => {\r\n\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n\tconst MODAL: Element = document.getElementById('modal')!;\r\n\treturn createPortal(\r\n\t\t<>\r\n\t\t\t<Background onClick={handleModalClose} />\r\n\t\t\t{theme === MODAL_THEME.FORM && (\r\n\t\t\t\t<FormModal\r\n\t\t\t\t\ttitle={title}\r\n\t\t\t\t\thandleModalClose={handleModalClose}\r\n\t\t\t\t\thandleSubmit={handleSubmit}\r\n\t\t\t\t\tremoveSubmitButton={removeSubmitButton}\r\n\t\t\t\t\tsubmitBtnName={submitBtnName}\r\n\t\t\t\t\tcloseBtnName={closeBtnName}\r\n\t\t\t\t>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</FormModal>\r\n\t\t\t)}\r\n\t\t\t{theme === MODAL_THEME.NOTIFICATION && (\r\n\t\t\t\t<NotificationModal\r\n\t\t\t\t\ttitle={title}\r\n\t\t\t\t\thandleModalClose={handleModalClose}\r\n\t\t\t\t\thandleSubmit={handleSubmit}\r\n\t\t\t\t\tremoveSubmitButton={removeSubmitButton}\r\n\t\t\t\t\tsubmitBtnName={submitBtnName}\r\n\t\t\t\t\tcloseBtnName={closeBtnName}\r\n\t\t\t\t>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</NotificationModal>\r\n\t\t\t)}\r\n\t\t</>,\r\n\t\tMODAL,\r\n\t);\r\n};\r\nexport default Modal;\r\n","export const emailRegExp = /[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}/;\r\nexport const pwRegExp = /(?=.*\\d)(?=.*[a-zA-Z])[0-9a-zA-Z]{8,15}/;\r\nexport const nameRegExp = /[a-zA-Z0-9]{2,20}/;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nexport const Container = styled.div`\r\n\tposition: relative;\r\n\twidth: 1.2rem;\r\n\theight: 1.2rem;\r\n\tz-index: 30;\r\n`;\r\n\r\nexport const ColorDropDown = styled.div`\r\n\tposition: absolute;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: space-evenly;\r\n\ttop: 1.8rem;\r\n\tleft: -0.7rem;\r\n\twidth: 12rem;\r\n\theight: 2rem;\r\n\tbackground-color: ${ColorCode.WHITE};\r\n\tborder-radius: 8px;\r\n\tbox-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\r\n`;\r\nexport const ColorCircle = styled.div`\r\n\twidth: 1.2rem;\r\n\theight: 1.2rem;\r\n\tborder-radius: 50%;\r\n\tbackground-color: ${(props) => props.color};\r\n\tcursor: pointer;\r\n`;\r\n","import React from 'react';\r\nimport { ThumbnailWrapper } from './style';\r\n\r\ntype Props = {\r\n\tteam_id: number;\r\n\tteam_name: string;\r\n};\r\n\r\nconst Thumbnail: React.FC<Props> = ({ team_id, team_name }) => {\r\n\tconst shortenName = team_name?.slice(0, 1).toUpperCase();\r\n\treturn (\r\n\t\t<ThumbnailWrapper team_id={team_id}>\r\n\t\t\t<span>{shortenName}</span>\r\n\t\t</ThumbnailWrapper>\r\n\t);\r\n};\r\n\r\nexport default Thumbnail;\r\n","import styled from 'styled-components';\r\nimport { ColorCode, HEADER } from '@utils/constants';\r\n\r\nexport const Container = styled.header`\r\n\theight: ${HEADER.HEIGHT}px;\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\tbackground-color: ${ColorCode.PRIMARY1};\r\n\tpadding: 0 1rem;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nexport const Wrapper = styled.div`\r\n\ta {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\ttext-decoration: none;\r\n\t\tcolor: ${ColorCode.WHITE};\r\n\t\tfont-weight: bold;\r\n\t\tfont-size: 1.5rem;\r\n\t\timg {\r\n\t\t\tpadding-right: 0.5rem;\r\n\t\t\twidth: 2rem;\r\n\t\t}\r\n\t\t&:visited {\r\n\t\t\tcolor: ${ColorCode.WHITE};\r\n\t\t}\r\n\t}\r\n`;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Wrapper } from './style';\r\n\r\nconst LongLogo: React.FC = () => {\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t<Link to='/'>\r\n\t\t\t\t<img src='/logo.png' alt='logo' />\r\n\t\t\t\tBoostTeams\r\n\t\t\t</Link>\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nexport default LongLogo;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\ninterface ContainerProps {\r\n\twidth: string;\r\n\tisHover?: boolean;\r\n}\r\n\r\ninterface ProfileIconContainerProps extends ContainerProps {\r\n\tbackgroundColor: string;\r\n\tfontColor: string;\r\n}\r\n\r\nexport const Container = styled('div')<ContainerProps>`\r\n\theight: ${(props) => props.width};\r\n\twidth: ${(props) => props.width};\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\t&:hover {\r\n\t\tbackground-color: ${(props) => (props.isHover ? ColorCode.HOVER : 'none')};\r\n\t}\r\n\tcursor: pointer;\r\n`;\r\n\r\nexport const ProfileIconContainer = styled('div')<ProfileIconContainerProps>`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tposition: relative;\r\n\theight: ${(props) => props.width};\r\n\twidth: ${(props) => props.width};\r\n\tborder: 1px solid ${ColorCode.PRIMARY1};\r\n\tborder-radius: 50%;\r\n\tbackground-color: ${(props) => props.backgroundColor || ColorCode.WHITE};\r\n\tcolor: ${(props) => props.fontColor || ColorCode.BLACK};\r\n\tspan {\r\n\t\tfont-weight: bold;\r\n\t\tfont-size: calc(${(props) => props.width} / 2);\r\n\t\tvertical-align: middle;\r\n\t}\r\n`;\r\n\r\nexport const Status = styled.div`\r\n\tposition: absolute;\r\n\tright: 0;\r\n\tbottom: 0;\r\n\tbackground-color: ${(props) => props.color || ColorCode.GRAY};\r\n\theight: 0.5rem;\r\n\twidth: 0.5rem;\r\n\tborder-radius: 50%;\r\n`;\r\n","import React from 'react';\r\nimport { ColorCode, PrimaryPalette, SecondaryPalette } from '@utils/constants';\r\nimport { Container, ProfileIconContainer, Status } from './style';\r\n\r\ninterface ProfileProps {\r\n\tname: string; // 유저 name\r\n\tcolor: number; // 유저 프로필 배경색 user_color\r\n\tstatus: string; // online, offline, none\r\n\twidth: number; // n rem으로 크기 결정\r\n\tisHover?: boolean; // hover 효과 줄건가? (default: true)\r\n\tonClick?: (e: React.MouseEvent<HTMLElement>) => void; // onClick Event\r\n}\r\n\r\nconst Palette = [...PrimaryPalette, ...SecondaryPalette];\r\n\r\nconst ProfileIcon: React.FC<ProfileProps> = ({ name, color, status, width, isHover, onClick }) => {\r\n\tconst backgroundColor = color === 6 ? ColorCode.WHITE : Palette[color]; // 6이면 header 색상과 같음\r\n\tconst fontColor = color === 8 || color === 9 || color === 11 ? ColorCode.WHITE : ColorCode.BLACK;\r\n\tconst statusColor = status === 'online' ? ColorCode.GREEN : ColorCode.GRAY;\r\n\treturn (\r\n\t\t<Container onClick={onClick} width={`${width}rem`} isHover={isHover}>\r\n\t\t\t<ProfileIconContainer backgroundColor={backgroundColor} fontColor={fontColor} width={`${width - 1}rem`}>\r\n\t\t\t\t<span>{name[0]}</span>\r\n\t\t\t\t{status !== 'none' && <Status color={statusColor} />}\r\n\t\t\t</ProfileIconContainer>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nProfileIcon.defaultProps = {\r\n\tisHover: true,\r\n\tonClick: undefined,\r\n};\r\n\r\nexport default ProfileIcon;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nexport const Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tpadding: 0 1rem;\r\n\tgap: 0.25rem;\r\n\tmargin-bottom: 1rem;\r\n`;\r\n\r\nexport const TextContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: space-around;\r\n\tpadding: 0.5rem 0;\r\n\tfont-size: 1rem;\r\n\tfont-weight: 500;\r\n`;\r\n\r\nexport const LinkContainer = styled.a`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tgap: 0.2rem;\r\n\tborder: 1px solid ${ColorCode.BLACK};\r\n\tborder-radius: 4px;\r\n\tpadding: 0.1rem 0.3rem;\r\n\tspan {\r\n\t\tfont-size: 0.7rem;\r\n\t}\r\n`;\r\n\r\nexport const NameContainer = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tgap: 0.5rem;\r\n`;\r\n","import React from 'react';\r\nimport { AiOutlineMail } from 'react-icons/ai';\r\nimport { LinkContainer } from './style';\r\n\r\ntype Props = {\r\n\temail: string;\r\n};\r\n\r\nconst EmailBox: React.FC<Props> = ({ email }) => {\r\n\treturn (\r\n\t\t<LinkContainer href={`mailto:${email}`}>\r\n\t\t\t<AiOutlineMail />\r\n\t\t\t<span>{email}</span>\r\n\t\t</LinkContainer>\r\n\t);\r\n};\r\n\r\nexport default EmailBox;\r\n","import React from 'react';\r\nimport { AiFillGithub } from 'react-icons/ai';\r\nimport { LinkContainer } from './style';\r\n\r\ntype Props = {\r\n\tgithub_id: string;\r\n\tgithub_name: string | undefined;\r\n};\r\n\r\nconst GithubBadge: React.FC<Props> = ({ github_id, github_name }) => {\r\n\treturn (\r\n\t\t<LinkContainer href={`https://github.com/${github_id}`} target='_blank' rel='noopner noreferrer nofollow'>\r\n\t\t\t<AiFillGithub />\r\n\t\t\t<span>{github_name}</span>\r\n\t\t</LinkContainer>\r\n\t);\r\n};\r\n\r\nexport default GithubBadge;\r\n","import React from 'react';\r\nimport { ProfileIcon } from '@components/common';\r\nimport EmailBox from './EmailBox';\r\nimport GithubBadge from './GithubBadge';\r\nimport { Container, NameContainer, TextContainer } from './style';\r\n\r\ntype User = {\r\n\tname: string;\r\n\temail: string;\r\n\tcolor: number;\r\n\tgithub_id?: string;\r\n\tgithub_name?: string;\r\n};\r\n\r\ntype ProfileProps = {\r\n\tuser: User;\r\n\tstatus: string;\r\n};\r\n\r\nconst TextInfo: React.FC<ProfileProps> = ({ user, status }) => {\r\n\tconst { name, email, github_id, github_name } = user;\r\n\treturn (\r\n\t\t<TextContainer>\r\n\t\t\t<NameContainer>\r\n\t\t\t\t<span>{name} |</span>\r\n\t\t\t\t{github_id && <GithubBadge github_id={github_id} github_name={github_name} />}\r\n\t\t\t\t{!github_id && <EmailBox email={email} />}\r\n\t\t\t</NameContainer>\r\n\t\t\t{status === 'none' && <span>Online</span>}\r\n\t\t\t{status !== 'none' && <span>대화 가능 | 상태 메시지 설정</span>}\r\n\t\t</TextContainer>\r\n\t);\r\n};\r\n\r\nconst UserInfo: React.FC<ProfileProps> = ({ user, status }) => {\r\n\tconst { name, color } = user;\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<ProfileIcon name={name} color={color} status={status} width={5} isHover={false} />\r\n\t\t\t<TextInfo user={user} status={status} />\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default UserInfo;\r\n","import { toast } from 'react-toastify';\r\nimport fetchApi from '@utils/fetch';\r\n\r\nexport const updateName = async ({ newName }: { newName: string }, cb?: any) => {\r\n\ttry {\r\n\t\tconst res = await fetchApi.patch('/api/users', { newName });\r\n\t\tif (res.status === 204) {\r\n\t\t\tcb();\r\n\t\t\ttoast.success('😎 닉네임 변경 성공');\r\n\t\t} else if (res.status === 401) {\r\n\t\t\tthrow new Error('😣 유저 정보를 찾을 수 없습니다!');\r\n\t\t} else if (res.status === 409) {\r\n\t\t\tthrow new Error('😣 이미 존재하는 이름입니다!');\r\n\t\t} else {\r\n\t\t\tthrow new Error('😣 서버와의 연결이 심상치 않습니다!');\r\n\t\t}\r\n\t} catch (err) {\r\n\t\ttoast.error((err as Error).message);\r\n\t}\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n`;\r\n\r\nexport const InputContainer = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tgap: 0.5rem;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { FaPencilAlt } from 'react-icons/fa';\r\nimport { toast } from 'react-toastify';\r\nimport { useRecoilState } from 'recoil';\r\nimport userState from '@stores/user';\r\n\r\nimport { check } from '@apis/auth';\r\nimport { updateName } from '@apis/user';\r\nimport { nameRegExp } from '@utils/regexs';\r\n\r\nimport Modal from '@components/common/Modal';\r\nimport { Input } from '@components/common/Modal/style';\r\n\r\nimport { Container, InputContainer } from './style';\r\n\r\nexport interface Props {\r\n\thandleModalClose: () => void;\r\n}\r\n\r\nconst UpdateModal: React.FC<Props> = ({ handleModalClose }) => {\r\n\tconst [name, setName] = useState('');\r\n\tconst [user, setUser] = useRecoilState(userState);\r\n\tconst handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetName(e.target.value);\r\n\t};\r\n\tconst handleSubmit = () => {\r\n\t\tif (name === '') {\r\n\t\t\ttoast.warn('😮 새 이름을 입력해주세요!');\r\n\t\t} else if (name === user.name) {\r\n\t\t\ttoast.warn('😮 같은 이름으로 바꿀 수 없습니다!');\r\n\t\t} else if (!nameRegExp.test(name) || name.length > 20) {\r\n\t\t\ttoast.warn('😮 올바르지 않은 이름입니다!');\r\n\t\t} else {\r\n\t\t\tupdateName({ newName: name }, () => {\r\n\t\t\t\tcheck(() => {\r\n\t\t\t\t\tsetUser({ ...user, name });\r\n\t\t\t\t\thandleModalClose();\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\ttitle='사용자 이름 변경'\r\n\t\t\thandleModalClose={handleModalClose}\r\n\t\t\thandleSubmit={handleSubmit}\r\n\t\t\tremoveSubmitButton={false}\r\n\t\t>\r\n\t\t\t<Container>\r\n\t\t\t\t<InputContainer>\r\n\t\t\t\t\t<FaPencilAlt />\r\n\t\t\t\t\t<Input placeholder='2-20자 사이의 영문자, 숫자' value={name} onChange={handleInput} />\r\n\t\t\t\t</InputContainer>\r\n\t\t\t</Container>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default UpdateModal;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nexport const Container = styled.div`\r\n\tdisplay: flex;\r\n\tgap: 0.5rem;\r\n\twidth: calc(100% - 3rem);\r\n\tfont-size: 0.9rem;\r\n\tfont-weight: 400;\r\n\tpadding: 0rem 1.5rem;\r\n\theight: 2.5rem;\r\n\talign-items: center;\r\n\tcursor: pointer;\r\n\t&:hover {\r\n\t\tbackground-color: ${ColorCode.LINE2};\r\n\t}\r\n\t&:last-of-type {\r\n\t\tborder-radius: 0px 0px 8px 8px;\r\n\t}\r\n`;\r\n","import React from 'react';\r\nimport { GrUserSettings } from 'react-icons/gr';\r\nimport { Container } from './style';\r\n\r\ntype Props = {\r\n\tonClick: () => void;\r\n};\r\n\r\nconst AccountButton: React.FC<Props> = ({ onClick }) => {\r\n\treturn (\r\n\t\t<Container onClick={onClick}>\r\n\t\t\t<GrUserSettings />\r\n\t\t\t<span>계정 관리</span>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default AccountButton;\r\n","import React from 'react';\r\nimport { GrLogout } from 'react-icons/gr';\r\nimport { Container } from './style';\r\n\r\ntype Props = {\r\n\tonClick: () => void;\r\n};\r\n\r\nconst LogoutButton: React.FC<Props> = ({ onClick }) => {\r\n\treturn (\r\n\t\t<Container onClick={onClick}>\r\n\t\t\t<GrLogout />\r\n\t\t\t<span>로그아웃</span>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default LogoutButton;\r\n","import React from 'react';\r\nimport { GrLogout } from 'react-icons/gr';\r\nimport { Container } from './style';\r\n\r\ntype Props = {\r\n\tonClick: () => void;\r\n};\r\n\r\nconst SignOutButton: React.FC<Props> = ({ onClick }) => {\r\n\treturn (\r\n\t\t<Container onClick={onClick}>\r\n\t\t\t<GrLogout />\r\n\t\t\t<span>탈퇴</span>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default SignOutButton;\r\n","import styled, { keyframes } from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nconst dropAnimation = keyframes`\r\n\t0% {\r\n\t\topacity: 0;\r\n\t\ttransform: translateY(-0.5rem);\r\n\t}\r\n\t100% {\r\n\t\topacity: 1;\r\n\t\ttransform: translateY(0);\r\n\t}\r\n`;\r\n\r\nexport const ModalContainer = styled.div`\r\n\tposition: absolute;\r\n\ttop: 2rem;\r\n\tright: 1rem;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\twidth: 25rem;\r\n\tbox-shadow: 0px 2px 4px rgba(0, 0, 0, 0.25);\r\n\tbackground-color: ${ColorCode.WHITE};\r\n\tborder-radius: 8px;\r\n\tz-index: 20;\r\n\tpadding: 2rem 0rem 0rem 0rem;\r\n\tanimation: ${dropAnimation} 0.5s ease-in-out 1;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n\tposition: absolute;\r\n\tdisplay: block;\r\n\twidth: 100%;\r\n\tleft: 0;\r\n`;\r\n\r\nexport const Background = styled.div`\r\n\tposition: fixed;\r\n\ttop: 3rem;\r\n\tleft: 0;\r\n\tdisplay: block;\r\n\twidth: 100vw;\r\n\theight: calc(100vh - 3rem);\r\n\tz-index: 0;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Content = styled.span`\r\n\twidth: 100%;\r\n\ttext-align: center;\r\n\tpadding: 2.5rem 0;\r\n`;\r\n","import { Modal } from '@components/common';\r\nimport { MODAL_THEME } from '@utils/constants';\r\nimport React from 'react';\r\nimport { Content } from './style';\r\n\r\nexport interface Props {\r\n\thandleModalClose: () => void;\r\n}\r\n\r\nconst SignOutModal: React.FC<Props> = ({ handleModalClose }) => {\r\n\tconst handleSubmit = () => {\r\n\t\tconsole.log('회원 탈퇴');\r\n\t\thandleModalClose();\r\n\t};\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\ttheme={MODAL_THEME.NOTIFICATION}\r\n\t\t\ttitle='경고'\r\n\t\t\tremoveSubmitButton={false}\r\n\t\t\thandleModalClose={handleModalClose}\r\n\t\t\thandleSubmit={handleSubmit}\r\n\t\t\tsubmitBtnName='확인'\r\n\t\t\tcloseBtnName='취소'\r\n\t\t>\r\n\t\t\t<Content>회원 탈퇴하시겠습니까?</Content>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default SignOutModal;\r\n","import React, { Dispatch, SetStateAction } from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { useHistory } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport userState from '@stores/user';\r\nimport { logout } from '@apis/auth';\r\n\r\nimport UserInfo from './UserInfo';\r\nimport UpdateModal from './Modals/UpdateModal';\r\nimport { AccountButton, LogoutButton, SignOutButton } from './Buttons';\r\n\r\nimport { Background, Container, ModalContainer } from './style';\r\nimport SignOutModal from './Modals/SignOutModal';\r\n\r\ninterface ProfileSimpleProps {\r\n\tstatus: string;\r\n\tshowUpdateModal: boolean;\r\n\tshowSignOutModal: boolean;\r\n\tsetShowUpdateModal: Dispatch<SetStateAction<boolean>>;\r\n\tsetShowSignOutModal: Dispatch<SetStateAction<boolean>>;\r\n\thandleModalClose: () => void;\r\n}\r\n\r\nconst ProfileSimple: React.FC<ProfileSimpleProps> = ({\r\n\tstatus,\r\n\tshowUpdateModal,\r\n\tshowSignOutModal,\r\n\tsetShowUpdateModal,\r\n\tsetShowSignOutModal,\r\n\thandleModalClose,\r\n}) => {\r\n\tconst history = useHistory();\r\n\tconst user = useRecoilValue(userState);\r\n\r\n\tconst logoutHandler = () => {\r\n\t\tlogout(() => {\r\n\t\t\ttoast.success('😎 로그아웃 성공');\r\n\t\t\thistory.push('/');\r\n\t\t});\r\n\t};\r\n\r\n\tconst signOutHandler = () => {\r\n\t\thandleSignOutModalOpen();\r\n\t};\r\n\r\n\tconst handleUpdateModalClose = () => setShowUpdateModal(false);\r\n\tconst handleUpdateModalOpen = () => setShowUpdateModal(true);\r\n\tconst handleSignOutModalClose = () => setShowSignOutModal(false);\r\n\tconst handleSignOutModalOpen = () => setShowSignOutModal(true);\r\n\r\n\tconst clickHandler = () => {\r\n\t\tif (showUpdateModal) {\r\n\t\t\thandleUpdateModalClose();\r\n\t\t} else {\r\n\t\t\thandleUpdateModalOpen();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<ModalContainer>\r\n\t\t\t\t<UserInfo user={user} status={status} />\r\n\t\t\t\t<AccountButton onClick={clickHandler} />\r\n\t\t\t\t<LogoutButton onClick={logoutHandler} />\r\n\t\t\t\t<SignOutButton onClick={signOutHandler} />\r\n\t\t\t</ModalContainer>\r\n\t\t\t{showUpdateModal && <UpdateModal handleModalClose={handleUpdateModalClose} />}\r\n\t\t\t{showSignOutModal && <SignOutModal handleModalClose={handleSignOutModalClose} />}\r\n\t\t\t<Background onClick={handleModalClose} />\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default ProfileSimple;\r\n","import React, { useState } from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\nimport userState from '@stores/user';\r\n\r\nimport { Container } from './style';\r\nimport { LongLogo } from '../Logo';\r\nimport ProfileIcon from '../Icons/ProfileIcon';\r\nimport ProfileSimple from './ProfileSimple';\r\n\r\nconst Header: React.FC = () => {\r\n\tconst user = useRecoilValue(userState);\r\n\tconst [showProfileSimple, setShowProfileSimple] = useState(false);\r\n\tconst [showUpdateModal, setShowUpdateModal] = useState(false);\r\n\tconst [showSignOutModal, setShowSignOutModal] = useState(false);\r\n\tconst handleModalClose = () => {\r\n\t\tsetShowProfileSimple(false);\r\n\t\tsetShowUpdateModal(false);\r\n\t};\r\n\r\n\tconst handleModalOpen = () => {\r\n\t\tsetShowProfileSimple(true);\r\n\t};\r\n\r\n\tconst clickHandler = () => {\r\n\t\tif (showProfileSimple) {\r\n\t\t\thandleModalClose();\r\n\t\t} else {\r\n\t\t\thandleModalOpen();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<LongLogo />\r\n\t\t\t<ProfileIcon name={user.name} color={user.color} status='online' onClick={clickHandler} width={3} />\r\n\t\t\t{showProfileSimple && (\r\n\t\t\t\t<ProfileSimple\r\n\t\t\t\t\tstatus='none'\r\n\t\t\t\t\thandleModalClose={handleModalClose}\r\n\t\t\t\t\tshowUpdateModal={showUpdateModal}\r\n\t\t\t\t\tshowSignOutModal={showSignOutModal}\r\n\t\t\t\t\tsetShowUpdateModal={setShowUpdateModal}\r\n\t\t\t\t\tsetShowSignOutModal={setShowSignOutModal}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nexport const ProfileImage = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tbackground-color: ${(props) => props.color || ColorCode.WHITE};\r\n\tborder-radius: 20%;\r\n\twidth: 4rem;\r\n\theight: 4rem;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { ColorCode, NAVBAR } from '@utils/constants';\r\n\r\nexport const Container = styled.nav`\r\n\tflex-shrink: 0;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\twidth: ${NAVBAR.WIDTH}px;\r\n\theight: 100%;\r\n\tbackground-color: ${ColorCode.LINE1};\r\n\toverflow-y: hidden;\r\n`;\r\n\r\nexport const BellIconWrapper = styled.div`\r\n\tpadding: 0.8rem 0;\r\n\tborder-bottom: solid 1px ${ColorCode.LINE2};\r\n\tsvg {\r\n\t\tcolor: ${ColorCode.FONT2};\r\n\t\twidth: 1.5rem;\r\n\t\theight: auto;\r\n\t\tpadding: 0.6rem;\r\n\t\tcursor: pointer;\r\n\t\t&:hover {\r\n\t\t\tcolor: ${ColorCode.HOVER};\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const TabContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tborder-bottom: solid 1px ${ColorCode.LINE2};\r\n\tpadding: 1rem 0;\r\n\tsvg {\r\n\t\tcolor: ${ColorCode.FONT2};\r\n\t\twidth: 1.5rem;\r\n\t\theight: auto;\r\n\t\tpadding: 0.8rem 0.6rem;\r\n\t\tcursor: pointer;\r\n\t\t&:hover {\r\n\t\t\tcolor: ${ColorCode.HOVER};\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const TeamIcon = styled.div`\r\n\twidth: 2rem;\r\n\theight: 2rem;\r\n\tbackground-color: ${(props) => props.color || ColorCode.FONT2};\r\n\tborder-radius: 20%;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tcolor: ${ColorCode.WHITE};\r\n`;\r\n\r\nexport const TeamIconContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tpadding: 0.8rem 0;\r\n\tdiv {\r\n\t\tmargin: 0.8rem 0;\r\n\t\tcursor: pointer;\r\n\t\tbox-sizing: border-box;\r\n\t\t&:hover {\r\n\t\t\tborder: solid 2px ${ColorCode.WHITE};\r\n\t\t}\r\n\t}\r\n`;\r\n","import React from 'react';\r\nimport { FaBell, FaChalkboard, FaComments, FaCalendarDay, FaUserFriends } from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { PrimaryPalette } from '@utils/constants';\r\nimport { userTeamList } from '@stores/team';\r\nimport { CardData } from '@components/Team/type';\r\nimport { Container, BellIconWrapper, TabContainer, TeamIconContainer, TeamIcon } from './style';\r\n\r\nconst Navbar: React.FC = () => {\r\n\tconst groups = window.location.pathname.match(/\\/team\\/(?<teamId>\\d+)\\/(?<path>\\w+)/)?.groups;\r\n\tconst { teamId, path }: any = groups;\r\n\tconst teamList = useRecoilValue(userTeamList);\r\n\tconst myTeamList: CardData[] = [];\r\n\tteamList.reduce((pre: void, team: CardData) => {\r\n\t\tif (team.state) myTeamList.push(team);\r\n\t\treturn pre;\r\n\t}, '');\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<BellIconWrapper>\r\n\t\t\t\t<FaBell />\r\n\t\t\t</BellIconWrapper>\r\n\t\t\t<TabContainer>\r\n\t\t\t\t<Link to={`/team/${teamId}/board`}>\r\n\t\t\t\t\t<FaChalkboard />\r\n\t\t\t\t</Link>\r\n\t\t\t\t<Link to={`/team/${teamId}/chat`}>\r\n\t\t\t\t\t<FaComments />\r\n\t\t\t\t</Link>\r\n\t\t\t\t<Link to={`/team/${teamId}/calendar`}>\r\n\t\t\t\t\t<FaCalendarDay />\r\n\t\t\t\t</Link>\r\n\t\t\t\t<Link to={`/team/${teamId}/users`}>\r\n\t\t\t\t\t<FaUserFriends />\r\n\t\t\t\t</Link>\r\n\t\t\t</TabContainer>\r\n\t\t\t<TeamIconContainer>\r\n\t\t\t\t{myTeamList.map((e) => (\r\n\t\t\t\t\t<Link key={e.team.team_id} to={`/team/${e.team.team_id}/${path}`}>\r\n\t\t\t\t\t\t<TeamIcon key={e.team.team_id} color={PrimaryPalette[e.team.team_id % 6]}>\r\n\t\t\t\t\t\t\t{e.team.team_name[0].toUpperCase()}\r\n\t\t\t\t\t\t</TeamIcon>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t))}\r\n\t\t\t</TeamIconContainer>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Navbar;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nexport const Container = styled.div`\r\n\tflex-shrink: 0;\r\n\tposition: relative;\r\n\tbackground-color: ${ColorCode.BACKGROUND2};\r\n\twidth: 17rem;\r\n\tbox-shadow: rgba(0, 0, 0, 0.1) 0px 4px 6px -1px, rgba(0, 0, 0, 0.06) 0px 2px 4px -1px;\r\n`;\r\n","import React from 'react';\r\nimport { Container } from './style';\r\n\r\nconst Sidebar: React.FC = ({ children }) => {\r\n\treturn <Container>{children}</Container>;\r\n};\r\n\r\nexport default Sidebar;\r\n","import styled from 'styled-components';\r\nimport { ColorCode, Font } from '@utils/constants';\r\n\r\nexport const Container = styled.div`\r\n\tfont-size: ${Font.SMALL};\r\n\tposition: relative;\r\n\tdisplay: inline-block;\r\n\tdiv {\r\n\t\tcursor: pointer;\r\n\t\tspan {\r\n\t\t\tfont-weight: bold;\r\n\t\t}\r\n\t\tsvg {\r\n\t\t\tmargin-left: 0.2rem;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const OptionsWrapper = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tposition: absolute;\r\n\ttop: 1.5rem;\r\n\tleft: -1rem;\r\n\tbackground-color: ${ColorCode.WHITE};\r\n\tborder-radius: 8px;\r\n\tbox-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\r\n\tz-index: 1;\r\n\tdiv {\r\n\t\tpadding: 0.7rem 1rem;\r\n\t\tcursor: pointer;\r\n\t\toverflow: hidden;\r\n\t\twhite-space: nowrap;\r\n\t\t:hover {\r\n\t\t\tbackground-color: ${ColorCode.LINE1};\r\n\t\t\toverflow: hidden;\r\n\t\t}\r\n\t}\r\n`;\r\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\nimport React, { useState } from 'react';\r\nimport { FaSortDown } from 'react-icons/fa';\r\nimport { Container, OptionsWrapper } from './style';\r\n\r\ninterface Props {\r\n\toptions: string[];\r\n\tselectedOption: string | any;\r\n\tsetSelectedOption: (value: number) => void;\r\n}\r\n\r\nconst DropDown: React.FC<Props> = ({ options, selectedOption, setSelectedOption }) => {\r\n\tconst [dropDownOpen, setDropDownOpen] = useState<boolean>(false);\r\n\r\n\tconst handleDropDownOpen = () => {\r\n\t\tsetDropDownOpen(!dropDownOpen);\r\n\t};\r\n\tconst handleOptionClick = (e: React.MouseEvent<HTMLElement>) => {\r\n\t\tsetSelectedOption(Number(e.currentTarget.dataset.option));\r\n\t\tsetDropDownOpen(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<div onClick={handleDropDownOpen}>\r\n\t\t\t\t<span>{selectedOption}</span>\r\n\t\t\t\t<FaSortDown />\r\n\t\t\t</div>\r\n\t\t\t{dropDownOpen && (\r\n\t\t\t\t<OptionsWrapper>\r\n\t\t\t\t\t{options.map((option, i) => (\r\n\t\t\t\t\t\t<div key={option} data-option={i} onClick={handleOptionClick}>\r\n\t\t\t\t\t\t\t{option}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</OptionsWrapper>\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default DropDown;\r\n","import React, { useState } from 'react';\r\nimport { PrimaryPalette } from '@utils/constants';\r\nimport { Container, ColorDropDown, ColorCircle } from './style';\r\n\r\nexport interface Props {\r\n\tselectedColor: number;\r\n\tsetSelectedColor: React.Dispatch<React.SetStateAction<number>>;\r\n}\r\n\r\nconst ColorPicker: React.FC<Props> = ({ selectedColor, setSelectedColor }) => {\r\n\tconst [dropDownOpen, setDropDownOpen] = useState<boolean>(false);\r\n\r\n\tconst handleDropDownOpen = () => {\r\n\t\tsetDropDownOpen(!dropDownOpen);\r\n\t};\r\n\r\n\tconst handleColorClick = (e: React.MouseEvent<HTMLElement>) =>\r\n\t\tsetSelectedColor(Number(e.currentTarget.dataset.color));\r\n\r\n\treturn (\r\n\t\t<Container onClick={handleDropDownOpen}>\r\n\t\t\t<ColorCircle color={PrimaryPalette[selectedColor]} />\r\n\t\t\t{dropDownOpen && (\r\n\t\t\t\t<ColorDropDown>\r\n\t\t\t\t\t{PrimaryPalette.map((colorCode, i) => (\r\n\t\t\t\t\t\t<ColorCircle key={colorCode} color={colorCode} data-color={i} onClick={handleColorClick} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ColorDropDown>\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default ColorPicker;\r\n","import React, { useEffect } from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport { useSetRecoilState } from 'recoil';\r\nimport { check } from '@apis/auth';\r\nimport userState from '@stores/user';\r\nimport { removeCookie } from '@utils/cookie';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }: any) => {\r\n\tconst setUser = useSetRecoilState(userState);\r\n\tuseEffect(() => {\r\n\t\tif (localStorage.getItem('JWT')) {\r\n\t\t\tcheck(\r\n\t\t\t\t(res: any) => {\r\n\t\t\t\t\tsetUser({\r\n\t\t\t\t\t\tid: res.user_id,\r\n\t\t\t\t\t\tname: res.user_name,\r\n\t\t\t\t\t\temail: res.user_email,\r\n\t\t\t\t\t\tcolor: res.user_color,\r\n\t\t\t\t\t\tgithub_id: res.github_id,\r\n\t\t\t\t\t\tgithub_name: res.github_name,\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\t() => {\r\n\t\t\t\t\tlocalStorage.removeItem('JWT');\r\n\t\t\t\t\tremoveCookie('JWT', '');\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t}\r\n\t}, []);\r\n\treturn (\r\n\t\t<Route\r\n\t\t\t{...rest}\r\n\t\t\trender={(props) => (localStorage.getItem('JWT') ? <Component {...props} /> : <Redirect to='/' />)}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default PrivateRoute;\r\n"],"sourceRoot":""}