{"version":3,"sources":["types/calendar.ts","utils/socketContext.ts","apis/chat.ts","stores/chat.ts","utils/time.ts","components/Chat/ChatSidebar/style.ts","components/Chat/ChatSidebar/index.tsx","components/Chat/ChatHeader/SearchInput/style.ts","components/Chat/ChatHeader/SearchInput/index.tsx","components/Chat/ChatHeader/Header/SearchHeader.tsx","components/Chat/ChatHeader/Dropdown/style.ts","components/Chat/ChatHeader/Dropdown/UsersDropdown.tsx","components/Chat/ChatHeader/Dropdown/InviteDropdown.tsx","components/Chat/ChatHeader/Dropdown/UpdateDropdown.tsx","components/Chat/ChatHeader/Header/style.tsx","components/Chat/ChatHeader/Header/RoomHeader.tsx","components/Chat/ChatHeader/style.ts","components/Chat/ChatHeader/index.tsx","components/Chat/ChatContent/Message/style.ts","components/Chat/ChatContent/Message/index.tsx","components/Chat/ChatContent/style.ts","components/Chat/ChatContent/index.tsx","templates/ChatTemplate/style.ts","templates/ChatTemplate/index.tsx","pages/ChatPage/index.tsx","apis/schedule.ts","utils/calendar.ts","stores/calendar.ts","components/Calendar/CalendarHeader/style.ts","components/Calendar/CalendarHeader/index.tsx","components/Calendar/MonthlyCalendar/MonthHeader/style.ts","components/Calendar/MonthlyCalendar/MonthHeader/index.tsx","components/Calendar/MonthlyCalendar/MonthContent/style.ts","components/Calendar/MonthlyCalendar/MonthContent/Day.tsx","components/Calendar/MonthlyCalendar/MonthContent/Week.tsx","components/Calendar/MonthlyCalendar/MonthContent/index.tsx","components/Calendar/MonthlyCalendar/style.ts","components/Calendar/MonthlyCalendar/index.tsx","components/Calendar/WeeklyCalendar/WeekHeader/style.ts","components/Calendar/WeeklyCalendar/WeekHeader/index.tsx","components/Calendar/WeeklyCalendar/ScheduleItem/style.ts","components/Calendar/WeeklyCalendar/ScheduleItem/index.tsx","components/Calendar/WeeklyCalendar/WeekContent/style.ts","components/Calendar/WeeklyCalendar/WeekContent/index.tsx","components/Calendar/WeeklyCalendar/style.ts","components/Calendar/WeeklyCalendar/index.tsx","components/Calendar/CalendarModal/style.ts","components/Calendar/CalendarModal/TimeInput.tsx","components/Calendar/CalendarModal/index.tsx","templates/CalendarTemplate/style.ts","templates/CalendarTemplate/index.tsx","pages/CalendarPage/index.tsx","components/Users/UsersHeader/style.ts","components/Users/UsersHeader/index.tsx","components/Users/UserList/style.ts","components/Users/UserList/SearchUsers.tsx","components/Users/UserList/User.tsx","components/Users/UserList/UserList.tsx","components/Users/UserList/index.tsx","utils/team.ts","components/Users/Modal/style.ts","components/Users/Modal/DeleteTeamModal/index.tsx","components/Users/Modal/ExitTeamModal/index.tsx","components/Users/Modal/InviteUserModal/index.tsx","components/Users/Modal/KickoutTeamModal/index.tsx","components/Users/Modal/UpdateTeamModal/index.tsx","templates/UsersTemplate/style.ts","templates/UsersTemplate/index.tsx","pages/UsersPage/index.tsx","components/Board/Postit/index.tsx","components/Board/Canvas/index.tsx","components/Board/Modal/Create/style.ts","components/Board/Modal/Create/index.tsx","components/Board/Modal/Delete/style.ts","components/Board/Modal/Delete/index.tsx","components/Board/CreateButton/style.ts","components/Board/CreateButton/index.tsx","templates/BoardTemplate/style.ts","templates/BoardTemplate/index.tsx","pages/BoardPage/index.tsx","routes/TeamRoute.tsx"],"names":["DayCode","SocketContext","React","createContext","socketApi","socket","teamId","userId","emit","chatRoomId","content","chatRoomName","userList","messageData","chatModeState","atom","key","default","chatRoomsState","currChatRoomIdState","chatRoomUsersState","messagesState","TimeToSec","SidebarHeader","styled","div","ColorCode","LINE2","Font","MEDIUM","NewChatBtn","button","FONT1","WHITE","ChatRoomsContainer","ChatRoom","props","focus","ChatRoomInfoContainer","X_SMALL","ChatRoomInfo","SMALL","ChatSidebar","socketRef","useContext","useState","sortedChatRooms","setSortedChatRooms","useRecoilState","currChatRoomId","setCurrChatRoomId","chatRooms","useRecoilValue","teamUsers","teamUsersSelector","setChatMode","useSetRecoilState","useEffect","sort","a","b","Date","lastMessage","createdAt","getTime","type","onClick","map","chatRoom","current","name","color","status","width","isHover","date","getHours","getMinutes","toString","padStart","getMonth","getDate","Container","PRIMARY1","UserListContainer","BACKGROUND1","LINE3","InputWrapper","SearchContainer","UserContainer","LINE1","SearchInput","inviteUsers","addInviteUser","deleteInviteUser","inputRef","useRef","myId","userState","id","chatMode","chatRoomUsers","userSearchResult","setUserSearchResult","searchByKey","searchKey","Object","values","filter","user","find","chatRoomUser","regex","RegExp","email","match","addToInvitationList","invitedUser","value","placeholder","ref","onChange","e","currentTarget","matches","onKeyDown","preventDefault","handleUserInvite","SearchHeader","UsersDropdownContainer","ProfileContainer","InvititationBtn","InviteDropdownContainer","SearchInputWrapper","ButttonContainer","UpdateDropdownContainer","UsersDropdown","handleDropdownMode","InviteDropdown","initInviteUser","text","backgroundColor","fontColor","handler","BLACK","UpdateDropdown","defaultValue","getChatRoomName","RoomHeaderContainer","ButtonContainer","UsersDropdownBtn","ExitBtn","RoomHeader","setChatRooms","resetCurrChatRoom","useResetRecoilState","dropdownMode","setDropdownMode","mode","handleChatRoomExit","length","ChatHeader","myChat","ChatIconWrapper","MessageContainer","PRIMARY2","InfoContainer","Message","message","isMyChat","MessagesContainer","NoticeContainer","InputContainer","ChatContent","messagesEndRef","myInfo","messages","handleNewChatRoomCreate","handleSendMessage","messageId","onKeyPress","Layout","MainContainer","ChatContainer","ChatTemplate","inviteUsersReducer","action","newUser","users","Error","ChatPage","Number","params","useReducer","dispatchInviteUsers","setMessages","resetCurrentChatRoom","setChatRoomUsers","scrollIntoView","behavior","scrollToBottom","on","prev","off","messageList","errorMessage","toast","error","getSchedules","firstDate","lastDate","fetchApi","get","res","json","data","scheduleData","scheduleSnakeToCamel","createNewSchedule","newSchedule","post","updateSchedule","scheduleId","put","undefined","deleteSchedule","delete","schedule","schedule_id","team_id","title","startDate","start_date","endDate","end_date","repeatId","repeat_id","repeatOption","repeat_option","repeatCount","repeat_count","getFirstDate","isMonthly","dateInfo","moment","year","month","format","weeklyStartDate","getLastDate","add","dateToFormatString","isTodayDate","i","isDoubleMonth","getCurrDateInfo","startOf","toDate","isNum","num","isNaN","ModalMode","ModalSchedule","weekContentNumber","hour","header","FONT2","HOVER","TodayBtn","ConvertBtnContainer","ConvertBtn","CalendarHeader","changeToCurrDate","changeToPrevDate","changeToNextDate","changeToMonthly","changeToWeekly","handleModalOpen","setModalMode","resetModalSchedule","nextDateInfo","getFullYear","WeekNameContainer","DayNameWrapper","RED","MonthHeader","day","idx","className","ContentContainer","DayNum","DayWrapper","Schedule","ORANGE","WeekContainer","Day","schedules","setModalSchedule","obj","getScheduleByDay","handleScheduleClick","PrimaryPalette","Week","week","uuidv4","MonthContent","firstDay","getDay","lastDay","curDay","result","Array","forEach","push","generateDays","section","MonthlyCalendar","DayContainer","WeekHeader","dayInfo","v","tDate","setDate","el","start","len","borderColor","ScheduleItem","SecondaryPalette","TimeContainer","DaysContainer","TimeBlock","CurrTimeLine","hr","MSEC_TO_HOUR","HALF_HOUR_TO_MIN","HOUR_TO_MIN","LINE_SPACE_PX","EXTRA_SPACE_PX","TIME_LIST","WEEK_NUMBER","DAY_TIME_NUMBER","TimeListGenerator","timeList","renderItem","item","time","setTime","containerRef","getStartY","scrollY","scrollTo","timer","setInterval","clearInterval","refDate","isSameDate","WeeklyCalendar","WeekContent","FormContainer","form","TitleContainer","TimeInput","selectedDate","setSelectedDate","checkModalMode","selectedStartTime","setSelectedStartTime","selectedEndTime","setSelectedEndTime","selected","readOnly","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","dateFormat","CalendarModal","handleModalClose","addSchedule","deleteScheduleById","updateScheduleById","repeatOptions","modalSchedule","modalMode","selectedColor","setSelectedColor","selectedRepeat","setSelectedRepeat","defaultTitle","setDefaultTitle","defaultContent","setDefaultContent","selectedRepeatCount","setSelectedRepeatCount","titleRef","contentRef","getScheduleData","validateSchedule","newScheduleData","warn","handleSubmit","newSchedules","handleDeleteButtonClick","changeUpdateMode","setScheduleState","removeSubmitButton","options","selectedOption","setSelectedOption","CalendarContainer","CalendarTemplate","isModalVisible","schedulesReducer","dateInfoReducer","subtract","getPrevDateInfo","getNextDateInfo","CalendarPage","dispatchSchedules","dispatchDateInfo","setIsMonthly","setIsModalVisible","fetchSchedules","scheduleList","UserHeaderContainer","TeamName","UsersHeader","teamInfo","teamInfoSelector","Thumbnail","team_name","IconWrapper","input","BACKGROUND2","UserWrapper","SearchUsersContainer","LARGE","LabelContainer","SearchUsers","handleInput","openModal","isAdmin","DropDown","size","User","isOnline","role","setUser","selectedUser","setTeamUsersTrigger","teamUsersTrigger","onSelect","RoleArr","patchRole","UsersList","onlineUsers","managerUsers","normalUsers","UserListIndex","teamUserList","filteredUsers","setFilteredUsers","setIsAdmin","setModal","modalState","isOpen","checkAdmin","target","toLowerCase","indexOf","UserList","handleDeleteBtn","setLoadTrigger","deleteTeam","DeleteTeamModal","teamListLoadTrigger","history","useHistory","Modal","theme","MODAL_THEME","NOTIFICATION","submitBtnName","closeBtnName","ExitTeamModal","readTeamUsers","keys","leaveTeam","InviteUserModal","inviteUser","KickoutTeamModal","kickOut","UpdateTeamModal","teamInfoLoadTrigger","updateTitle","setUpdateTitle","team_desc","updateDesc","setUpdateDesc","update","UsersTemplate","modal","closeModal","UsersPage","setOnlineUsers","PADDING","REM","FONT_SIZE","small","medium","onlyDate","DateObj","Title","isUpdating","fontSize","fontStyle","x","y","POSTIT","WIDTH","height","Content","userName","HEIGHT","Footer","createdBy","updatedBy","updatedAt","fill","GRAY","wrap","align","Menu","handleUpdateModalOpen","useImage","pencilIcon","image","opacity","Postit","postit","isMine","getUserNameById","onDrag","onDragStart","onDragEnd","setModalType","setClickedPostit","window","innerWidth","innerHeight","onDragMove","scaleX","whoIsDragging","scaleY","draggable","whoIsUpdating","stroke","strokeWidth","shadowOffsetX","shadowOffsetY","shadowOpacity","shadowBlur","updateStartPostit","Canvas","postits","handleDrag","handleDragStart","handleDragEnd","CANVAS","Input","Textarea","textarea","CreatePostitModal","modalType","clickedPostit","textareaRef","setColor","updateEndPostit","updatedPostit","makePostitObj","createNewPostit","ColorPicker","floatAnimation","keyframes","ERROR","Text","span","DeleteArea","upDownAnimation","PLACEHOLDER","Wrapper","YELLOW","CreateButton","HEADER","BoardTemplate","showModal","showDelete","Create","Delete","BoardPage","setPostits","setShowModal","setShowDelete","setUpdatedPostitList","initPoistList","newPostit","targetId","deletePostit","dragPostit","dragEndPostit","setUpdatedPostit","previousPostitList","postitIdx","findIndex","elem","splice","postitList","mouseY","parent","getRelativePointerPosition","TeamRoute","computedMatch","io","process","transports","disconnect","Provider","PrivateRoute","exact","path","component"],"mappings":"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","file":"static/js/4.d5330fb3.chunk.js","sourcesContent":["export interface DateInfoType {\r\n\tyear: number;\r\n\tmonth: number;\r\n\tweeklyStartDate: Date;\r\n\tisDoubleMonth: boolean;\r\n}\r\n\r\nexport interface ScheduleType {\r\n\tscheduleId: number;\r\n\tteamId: number;\r\n\ttitle: string;\r\n\tstartDate: string;\r\n\tendDate: string;\r\n\trepeatId: string;\r\n\trepeatOption: number;\r\n\trepeatCount: number;\r\n\tcontent: string;\r\n\tcolor: number;\r\n}\r\n\r\nexport interface ScheduleModalType {\r\n\ttitle: string;\r\n\tcolor: number;\r\n\trepeatOption: number;\r\n\tstartDate: string;\r\n\tendDate: string;\r\n\tcontent: string;\r\n}\r\n\r\nexport interface ScheduleResType {\r\n\tschedule_id: number;\r\n\tteam_id: number;\r\n\ttitle: string;\r\n\tstart_date: string;\r\n\tend_date: string;\r\n\trepeat_id: string;\r\n\trepeat_option: number;\r\n\trepeat_count: number;\r\n\tcontent: string;\r\n\tcolor: number;\r\n}\r\n\r\nexport interface ScheduleReqType {\r\n\tschedule_id?: number;\r\n\ttitle?: string;\r\n\tstart_date: string;\r\n\tend_date: string;\r\n\trepeat_option: number;\r\n\trepeat_count: number;\r\n\tcontent?: string;\r\n\tcolor: number;\r\n}\r\n\r\nexport interface TimeType {\r\n\thour: number;\r\n\ttext: string;\r\n}\r\n\r\nexport enum DayCode {\r\n\t'일요일' = 0,\r\n\t'월요일' = 1,\r\n\t'화요일' = 2,\r\n\t'수요일' = 3,\r\n\t'목요일' = 4,\r\n\t'금요일' = 5,\r\n\t'토요일' = 6,\r\n}\r\n\r\nexport const weekContentNumber: any = {\r\n\tMSEC_TO_HOUR: 60000,\r\n\tHALF_HOUR_TO_MIN: 30,\r\n\tHOUR_TO_MIN: 60,\r\n\tLINE_SPACE_PX: 2.5 * 16,\r\n\tEXTRA_SPACE_PX: 10,\r\n\tWEEK_NUMBER: 7,\r\n\tDAY_TIME_NUMBER: 48,\r\n\tTIME_LIST: [\r\n\t\t{ hour: 12, text: '오전' },\r\n\t\t{ hour: 1, text: '오전' },\r\n\t\t{ hour: 2, text: '오전' },\r\n\t\t{ hour: 3, text: '오전' },\r\n\t\t{ hour: 4, text: '오전' },\r\n\t\t{ hour: 5, text: '오전' },\r\n\t\t{ hour: 6, text: '오전' },\r\n\t\t{ hour: 7, text: '오전' },\r\n\t\t{ hour: 8, text: '오전' },\r\n\t\t{ hour: 9, text: '오전' },\r\n\t\t{ hour: 10, text: '오후' },\r\n\t\t{ hour: 11, text: '오후' },\r\n\t\t{ hour: 12, text: '오후' },\r\n\t\t{ hour: 1, text: '오후' },\r\n\t\t{ hour: 2, text: '오후' },\r\n\t\t{ hour: 3, text: '오후' },\r\n\t\t{ hour: 4, text: '오후' },\r\n\t\t{ hour: 5, text: '오후' },\r\n\t\t{ hour: 6, text: '오후' },\r\n\t\t{ hour: 7, text: '오후' },\r\n\t\t{ hour: 8, text: '오후' },\r\n\t\t{ hour: 9, text: '오후' },\r\n\t\t{ hour: 10, text: '오후' },\r\n\t\t{ hour: 11, text: '오후' },\r\n\t],\r\n};\r\n","import React from 'react';\r\n\r\nexport const SocketContext = React.createContext<any>(null);\r\n","import { UserIdType } from '@src/types/team';\r\nimport { Socket } from 'socket.io-client';\r\n\r\nexport const socketApi = {\r\n\tenterChatPage: (socket: Socket, teamId: number, userId: number) => {\r\n\t\tsocket.emit('enter chat page', { teamId, userId });\r\n\t},\r\n\tenterChatRoom: (socket: Socket, chatRoomId: number) => {\r\n\t\tsocket.emit('enter chat room', { chatRoomId });\r\n\t},\r\n\tsendMessage: (socket: Socket, content: string, userId: number, chatRoomId: number) => {\r\n\t\tsocket.emit('send message', { content, userId, chatRoomId });\r\n\t},\r\n\tcreateChatRoom: (\r\n\t\tsocket: Socket,\r\n\t\tteamId: number,\r\n\t\tchatRoomName: string,\r\n\t\tuserList: UserIdType[],\r\n\t\tmessageData: { content: string; userId: number },\r\n\t) => {\r\n\t\tsocket.emit('create chat room', { teamId, chatRoomName, userList, messageData });\r\n\t},\r\n\tinviteUsers: (socket: Socket, teamId: number, chatRoomId: number, userList: UserIdType[]) => {\r\n\t\tsocket.emit('invite users', { teamId, chatRoomId, userList });\r\n\t},\r\n\texitChatRoom: (socket: Socket, chatRoomId: number, userId: number) => {\r\n\t\tsocket.emit('exit chat room', { chatRoomId, userId });\r\n\t},\r\n\tupdateChatRoomName: (socket: Socket, chatRoomId: number, chatRoomName: string) => {\r\n\t\tsocket.emit('update chat room name', { chatRoomId, chatRoomName });\r\n\t},\r\n};\r\n","import { atom } from 'recoil';\r\nimport { ChatRoomListType, MessageListType } from '@src/types/chat';\r\nimport { UserIdType } from '@src/types/team';\r\n\r\nexport const chatModeState = atom({\r\n\tkey: 'chatModeState',\r\n\tdefault: 'none',\r\n});\r\n\r\nexport const chatRoomsState = atom({\r\n\tkey: 'chatRoomsState',\r\n\tdefault: [] as ChatRoomListType,\r\n});\r\n\r\nexport const currChatRoomIdState = atom({\r\n\tkey: 'currChatRoomIdState',\r\n\tdefault: -1,\r\n});\r\n\r\nexport const chatRoomUsersState = atom({\r\n\tkey: 'chatRoomUsersState',\r\n\tdefault: [] as UserIdType[],\r\n});\r\n\r\nexport const messagesState = atom({\r\n\tkey: 'messagesState',\r\n\tdefault: [] as MessageListType,\r\n});\r\n","const TimeToSec = {\r\n\tMinuteToSec: 60,\r\n\tHourToSec: 3600,\r\n\tDayToSec: 86400,\r\n\tMonthToSec: 2678400,\r\n};\r\n\r\nexport const timeSince = (date: Date) => {\r\n\tconst curr = new Date().getTime();\r\n\tconst prev = date.getTime();\r\n\tconst pastSec = (curr - prev) / 1000;\r\n\r\n\tif (pastSec < TimeToSec.DayToSec) {\r\n\t\treturn `${date.getHours()}:${date.getMinutes().toString().padStart(2, '0')}`;\r\n\t}\r\n\treturn `${date.getMonth() + 1}. ${date.getDate()}.`;\r\n};\r\n\r\nexport const timeToString = (date: Date) => {\r\n\treturn `${date.getMonth() + 1}. ${date.getDate()}. ${date.getHours()}:${date\r\n\t\t.getMinutes()\r\n\t\t.toString()\r\n\t\t.padStart(2, '0')}`;\r\n};\r\n","import { ColorCode, Font } from '@utils/constants';\r\nimport styled from 'styled-components';\r\n\r\ninterface ChatRoomProps {\r\n\tfocus: boolean;\r\n}\r\n\r\nexport const SidebarHeader = styled.div`\r\n\tdisplay: flex;\r\n\theight: 3.5rem;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n\tpadding-left: 1rem;\r\n\tborder-bottom: solid 1px ${ColorCode.LINE2};\r\n\tbutton {\r\n\t\tfont-size: ${Font.MEDIUM};\r\n\t\tfont-weight: bold;\r\n\t\tborder: none;\r\n\t\tcursor: pointer;\r\n\t}\r\n`;\r\n\r\nexport const NewChatBtn = styled.button`\r\n\twidth: 2.5rem;\r\n\theight: 2.5rem;\r\n\tcursor: pointer;\r\n\tborder-radius: 50%;\r\n\tborder: none;\r\n\tbackground-color: transparent;\r\n\tmargin-right: 0.4rem;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tsvg {\r\n\t\twidth: 1.5rem;\r\n\t\theight: 1.5rem;\r\n\t\tcolor: ${ColorCode.FONT1};\r\n\t}\r\n\t:hover {\r\n\t\tbackground-color: ${ColorCode.WHITE};\r\n\t}\r\n`;\r\n\r\nexport const ChatRoomsContainer = styled.div`\r\n\twidth: 100%;\r\n\tposition: absolute;\r\n\ttop: 3.5rem;\r\n\tbottom: 0;\r\n\toverflow-y: scroll;\r\n\t::-webkit-scrollbar {\r\n\t\tdisplay: none;\r\n\t}\r\n`;\r\n\r\nexport const ChatRoom = styled.div<ChatRoomProps>`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tpadding: 0 1rem;\r\n\tbox-sizing: border-box;\r\n\tcursor: pointer;\r\n\twidth: 100%;\r\n\theight: 4.5rem;\r\n\tborder-radius: 8px;\r\n\tbackground-color: ${(props) => (props.focus ? `${ColorCode.WHITE}` : 'transparent')};\r\n\t:hover {\r\n\t\tbackground-color: ${ColorCode.WHITE};\r\n\t}\r\n`;\r\n\r\nexport const ChatRoomInfoContainer = styled.div`\r\n\twidth: calc(100% - 2.3rem);\r\n\tpadding-left: 0.5rem;\r\n\tfont-size: ${Font.X_SMALL};\r\n\tflex-grow: 1;\r\n\toverflow: hidden;\r\n\twhite-space: nowrap;\r\n`;\r\n\r\nexport const ChatRoomInfo = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\tmargin-bottom: 0.5rem;\r\n\th3 {\r\n\t\twidth: 8rem;\r\n\t\toverflow: hidden;\r\n\t\tfont-size: ${Font.SMALL};\r\n\t}\r\n`;\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useRecoilValue, useSetRecoilState, useRecoilState } from 'recoil';\r\n\r\nimport { timeSince } from '@utils/time';\r\nimport { teamUsersSelector } from '@stores/team';\r\nimport { chatModeState, currChatRoomIdState, chatRoomsState } from '@stores/chat';\r\nimport { socketApi } from '@apis/chat';\r\nimport { SocketContext } from '@utils/socketContext';\r\nimport { ChatRoomListType } from '@src/types/chat';\r\n\r\nimport { BiListPlus } from 'react-icons/bi';\r\nimport { Sidebar, ProfileIcon } from '@components/common';\r\nimport { SidebarHeader, ChatRoomsContainer, ChatRoom, ChatRoomInfoContainer, ChatRoomInfo, NewChatBtn } from './style';\r\n\r\ninterface Props {\r\n\tteamId: number;\r\n}\r\n\r\nconst ChatSidebar: React.FC<Props> = ({ teamId }) => {\r\n\tconst socketRef = useContext(SocketContext);\r\n\tconst [sortedChatRooms, setSortedChatRooms] = useState<ChatRoomListType>([]);\r\n\tconst [currChatRoomId, setCurrChatRoomId] = useRecoilState(currChatRoomIdState);\r\n\tconst chatRooms = useRecoilValue(chatRoomsState);\r\n\tconst teamUsers = useRecoilValue(teamUsersSelector(teamId));\r\n\tconst setChatMode = useSetRecoilState(chatModeState);\r\n\r\n\tconst handleEnterChatRoom = (chatRoomId: number) => {\r\n\t\tsocketApi.enterChatRoom(socketRef.current, chatRoomId);\r\n\t\tsetCurrChatRoomId(chatRoomId);\r\n\t\tsetChatMode('chat');\r\n\t};\r\n\tconst handleChatModeNone = () => {\r\n\t\tsetChatMode('none');\r\n\t\tsetCurrChatRoomId(-1);\r\n\t};\r\n\tconst handleChatModeCreate = () => {\r\n\t\tsetChatMode('create');\r\n\t\tsetCurrChatRoomId(-1);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsetSortedChatRooms(\r\n\t\t\t[...chatRooms].sort(\r\n\t\t\t\t(a, b) => new Date(b.lastMessage.createdAt).getTime() - new Date(a.lastMessage.createdAt).getTime(),\r\n\t\t\t),\r\n\t\t);\r\n\t}, [chatRooms]);\r\n\r\n\treturn (\r\n\t\t<Sidebar>\r\n\t\t\t<SidebarHeader>\r\n\t\t\t\t<button type='button' onClick={handleChatModeNone}>\r\n\t\t\t\t\t채팅\r\n\t\t\t\t</button>\r\n\t\t\t\t<NewChatBtn onClick={handleChatModeCreate}>\r\n\t\t\t\t\t<BiListPlus />\r\n\t\t\t\t</NewChatBtn>\r\n\t\t\t</SidebarHeader>\r\n\t\t\t<ChatRoomsContainer>\r\n\t\t\t\t{sortedChatRooms.map((chatRoom) => (\r\n\t\t\t\t\t<ChatRoom\r\n\t\t\t\t\t\tkey={chatRoom.chatRoomId}\r\n\t\t\t\t\t\tfocus={chatRoom.chatRoomId === currChatRoomId}\r\n\t\t\t\t\t\tonClick={() => handleEnterChatRoom(chatRoom.chatRoomId)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ProfileIcon\r\n\t\t\t\t\t\t\tname={chatRoom.chatRoomName}\r\n\t\t\t\t\t\t\tcolor={chatRoom.chatRoomId % 6}\r\n\t\t\t\t\t\t\tstatus='none'\r\n\t\t\t\t\t\t\twidth={3.2}\r\n\t\t\t\t\t\t\tisHover={false}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ChatRoomInfoContainer>\r\n\t\t\t\t\t\t\t<ChatRoomInfo>\r\n\t\t\t\t\t\t\t\t<h3>{chatRoom.chatRoomName}</h3>\r\n\t\t\t\t\t\t\t\t<span>{timeSince(new Date(chatRoom.lastMessage.createdAt))}</span>\r\n\t\t\t\t\t\t\t</ChatRoomInfo>\r\n\t\t\t\t\t\t\t<span>{`${\r\n\t\t\t\t\t\t\t\tteamUsers[chatRoom.lastMessage.userId] ? teamUsers[chatRoom.lastMessage.userId].name : '알 수 없음'\r\n\t\t\t\t\t\t\t}: ${chatRoom.lastMessage.content}`}</span>\r\n\t\t\t\t\t\t</ChatRoomInfoContainer>\r\n\t\t\t\t\t</ChatRoom>\r\n\t\t\t\t))}\r\n\t\t\t</ChatRoomsContainer>\r\n\t\t</Sidebar>\r\n\t);\r\n};\r\n\r\nexport default ChatSidebar;\r\n","import { ColorCode, Font } from '@utils/constants';\r\nimport styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\tmin-height: 100%;\r\n\tbackground-color: ${ColorCode.WHITE};\r\n\tpadding: 0 0.6rem;\r\n\tbox-sizing: border-box;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tflex-wrap: wrap;\r\n\tborder-bottom: solid 2px transparent;\r\n\t:focus-within {\r\n\t\tborder-style: outset;\r\n\t\tborder-bottom: solid 2px ${ColorCode.PRIMARY1};\r\n\t}\r\n`;\r\n\r\nexport const UserListContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n\tdiv {\r\n\t\tdisplay: flex;\r\n\t\tpadding: 0.5rem;\r\n\t\tmargin: 0.5rem 0.3rem;\r\n\t\tbackground-color: ${ColorCode.BACKGROUND1};\r\n\t\tborder-radius: 10px;\r\n\t\tspan {\r\n\t\t\tfont-size: ${Font.SMALL};\r\n\t\t}\r\n\t\tsvg {\r\n\t\t\twidth: 0.6rem;\r\n\t\t\tmargin-left: 0.4rem;\r\n\t\t\tcolor: ${ColorCode.LINE3};\r\n\t\t\tcursor: pointer;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n\tflex-grow: 1;\r\n\tinput {\r\n\t\twidth: 100%;\r\n\t\theight: 3rem;\r\n\t\tpadding-left: 0.5rem;\r\n\t\tborder: none;\r\n\t\toutline: none;\r\n\t}\r\n`;\r\n\r\nexport const SearchContainer = styled.div`\r\n\tposition: absolute;\r\n\ttop: 100%;\r\n\tleft: 3rem;\r\n\tright: 3rem;\r\n\tbackground-color: ${ColorCode.WHITE};\r\n\tborder-radius: 0 0 8px 8px;\r\n\tbox-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\r\n`;\r\n\r\nexport const UserContainer = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tpadding: 0 0.8rem;\r\n\theight: 3rem;\r\n\tcursor: pointer;\r\n\tborder-radius: 8px;\r\n\tspan {\r\n\t\tcolor: ${ColorCode.FONT1};\r\n\t\tfont-size: ${Font.SMALL};\r\n\t}\r\n\t:hover {\r\n\t\tbackground-color: ${ColorCode.LINE1};\r\n\t}\r\n`;\r\n","import React, { useRef, useState } from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\n\r\nimport userState from '@stores/user';\r\nimport { teamUsersSelector } from '@stores/team';\r\nimport { chatModeState, chatRoomUsersState } from '@stores/chat';\r\nimport { TeamUsersType, TeamUserType, UserIdType } from '@src/types/team';\r\n\r\nimport { FaTimes } from 'react-icons/fa';\r\nimport { ProfileIcon } from '@components/common';\r\nimport { Container, UserListContainer, InputWrapper, SearchContainer, UserContainer } from './style';\r\n\r\ninterface Props {\r\n\tteamId: number;\r\n\tinviteUsers: UserIdType[];\r\n\taddInviteUser: (newUser: UserIdType) => void;\r\n\tdeleteInviteUser: (id: number) => void;\r\n}\r\n\r\nconst SearchInput: React.FC<Props> = ({ teamId, inviteUsers, addInviteUser, deleteInviteUser }) => {\r\n\tconst inputRef = useRef<HTMLInputElement>(null);\r\n\tconst myId = useRecoilValue(userState).id;\r\n\tconst chatMode = useRecoilValue(chatModeState);\r\n\tconst teamUsers = useRecoilValue<TeamUsersType>(teamUsersSelector(teamId));\r\n\tconst chatRoomUsers = useRecoilValue(chatRoomUsersState);\r\n\tconst [userSearchResult, setUserSearchResult] = useState<TeamUserType[]>([]);\r\n\r\n\tconst getTeamUserList = (): TeamUserType[] => {\r\n\t\tif (chatMode === 'chat') {\r\n\t\t\treturn Object.values(teamUsers).filter(\r\n\t\t\t\t(user) => !chatRoomUsers.find((chatRoomUser) => chatRoomUser.userId === user.userId),\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn Object.values(teamUsers);\r\n\t};\r\n\tconst searchByKey = (searchKey: string): TeamUserType[] => {\r\n\t\treturn getTeamUserList().filter((user) => {\r\n\t\t\tconst regex = new RegExp(searchKey, 'gi');\r\n\t\t\treturn (\r\n\t\t\t\tuser.userId !== myId && (teamUsers[user.userId].email.match(regex) || teamUsers[user.userId].name.match(regex))\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\tconst handleSearchByKey = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tconst searchKey = e.currentTarget.value;\r\n\t\tconst matches = !searchKey ? [] : searchByKey(searchKey);\r\n\t\tsetUserSearchResult(matches);\r\n\t};\r\n\tconst handleUserInvite = (userId: number) => {\r\n\t\tconst user = teamUsers[userId];\r\n\t\tif (user) addToInvitationList(user.userId);\r\n\t};\r\n\tconst handleKeyPress = (e: React.KeyboardEvent) => {\r\n\t\tif (e.key !== 'Enter') return;\r\n\t\te.preventDefault();\r\n\t\taddToInvitationList(userSearchResult[0].userId); // enter 눌렀을 때 첫번째 결과로 입력\r\n\t};\r\n\r\n\tconst addToInvitationList = (userId: number) => {\r\n\t\tif (!inputRef.current) return;\r\n\t\tif (inviteUsers.find((invitedUser) => invitedUser.userId === userId)) return;\r\n\t\taddInviteUser({ userId });\r\n\t\tsetUserSearchResult([]);\r\n\t\tinputRef.current.value = '';\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<UserListContainer>\r\n\t\t\t\t{inviteUsers.map((user) => (\r\n\t\t\t\t\t<div key={user.userId}>\r\n\t\t\t\t\t\t<span>{teamUsers[user.userId].name}</span>\r\n\t\t\t\t\t\t<FaTimes onClick={() => deleteInviteUser(user.userId)} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</UserListContainer>\r\n\t\t\t<InputWrapper>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tplaceholder='초대할 유저 이름 입력'\r\n\t\t\t\t\tref={inputRef}\r\n\t\t\t\t\tonChange={handleSearchByKey}\r\n\t\t\t\t\tonKeyDown={handleKeyPress}\r\n\t\t\t\t/>\r\n\t\t\t</InputWrapper>\r\n\t\t\t<SearchContainer>\r\n\t\t\t\t{userSearchResult.map((user) => (\r\n\t\t\t\t\t<UserContainer key={user.userId} onClick={() => handleUserInvite(user.userId)}>\r\n\t\t\t\t\t\t<ProfileIcon name={user.name} color={user.color} status='none' width={2.4} isHover={false} />\r\n\t\t\t\t\t\t<span>{`${user.name} (${user.email})`}</span>\r\n\t\t\t\t\t</UserContainer>\r\n\t\t\t\t))}\r\n\t\t\t</SearchContainer>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default SearchInput;\r\n","import React from 'react';\r\n\r\nimport { UserIdType } from '@src/types/team';\r\nimport SearchInput from '@components/Chat/ChatHeader/SearchInput';\r\n\r\ninterface Props {\r\n\tteamId: number;\r\n\tinviteUsers: UserIdType[];\r\n\taddInviteUser: (newUser: UserIdType) => void;\r\n\tdeleteInviteUser: (id: number) => void;\r\n}\r\n\r\nconst SearchHeader: React.FC<Props> = ({ teamId, inviteUsers, addInviteUser, deleteInviteUser }) => {\r\n\treturn (\r\n\t\t<SearchInput\r\n\t\t\tteamId={teamId}\r\n\t\t\tinviteUsers={inviteUsers}\r\n\t\t\taddInviteUser={addInviteUser}\r\n\t\t\tdeleteInviteUser={deleteInviteUser}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default SearchHeader;\r\n","import { ColorCode, Font } from '@utils/constants';\r\nimport styled from 'styled-components';\r\n\r\nexport const UsersDropdownContainer = styled.div`\r\n\tposition: absolute;\r\n\ttop: calc(100% + 0.2rem);\r\n\tright: 1rem;\r\n\theight: fit-content;\r\n\tbackground-color: ${ColorCode.WHITE};\r\n\tborder-radius: 8px;\r\n\tfont-size: ${Font.SMALL};\r\n\tbox-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\r\n`;\r\n\r\nexport const ProfileContainer = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\theight: 3rem;\r\n\tpadding: 0 1.2rem 0 0.5rem;\r\n\t:hover {\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: ${ColorCode.LINE1};\r\n\t}\r\n`;\r\n\r\nexport const InvititationBtn = styled.div`\r\n\tpadding: 0 1.2rem;\r\n\theight: 3rem;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tcursor: pointer;\r\n\tborder-top: solid 1px ${ColorCode.LINE1};\r\n\tsvg {\r\n\t\twidth: 1.1rem;\r\n\t\theight: 1.1rem;\r\n\t\tpadding-right: 0.4rem;\r\n\t\tcolor: ${ColorCode.FONT1};\r\n\t}\r\n\t:hover {\r\n\t\tborder-radius: 8px;\r\n\t\tbackground-color: ${ColorCode.LINE1};\r\n\t}\r\n`;\r\n\r\nexport const InviteDropdownContainer = styled.div`\r\n\tposition: absolute;\r\n\ttop: calc(100% + 0.2rem);\r\n\tright: 1rem;\r\n\twidth: 20rem;\r\n\theight: fit-content;\r\n\tbackground-color: ${ColorCode.WHITE};\r\n\tborder-radius: 8px;\r\n\tfont-size: ${Font.SMALL};\r\n\tpadding: 1.8rem 1rem 1rem 1rem;\r\n\tbox-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\r\n\th3 {\r\n\t\tfont-weight: bold;\r\n\t\tpadding-left: 0.5rem;\r\n\t\tmargin-bottom: 0.5rem;\r\n\t}\r\n`;\r\n\r\nexport const SearchInputWrapper = styled.div`\r\n\tposition: relative;\r\n`;\r\n\r\nexport const ButttonContainer = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: right;\r\n\tmargin-top: 1rem;\r\n\tbutton {\r\n\t\tmargin-left: 0.5rem;\r\n\t}\r\n`;\r\n\r\nexport const UpdateDropdownContainer = styled.div`\r\n\tposition: absolute;\r\n\ttop: calc(100% + 0.2rem);\r\n\tleft: 1rem;\r\n\twidth: 20rem;\r\n\theight: fit-content;\r\n\tbackground-color: ${ColorCode.WHITE};\r\n\tborder-radius: 8px;\r\n\tfont-size: ${Font.SMALL};\r\n\tpadding: 1.8rem 1rem 1rem 1rem;\r\n\tbox-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\r\n\th3 {\r\n\t\tfont-weight: bold;\r\n\t\tpadding-left: 0.5rem;\r\n\t\tmargin-bottom: 1.2rem;\r\n\t}\r\n\tinput {\r\n\t\tbackground-color: ${ColorCode.BACKGROUND1};\r\n\t\tpadding: 0.5rem;\r\n\t\tborder-radius: 8px;\r\n\t\twidth: 100%;\r\n\t\tbox-sizing: border-box;\r\n\t\tborder: none;\r\n\t\toutline: none;\r\n\t}\r\n`;\r\n","import React from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\n\r\nimport { teamUsersSelector } from '@stores/team';\r\nimport { chatRoomUsersState } from '@stores/chat';\r\nimport { DropdownModeType } from '@src/types/chat';\r\nimport { UserIdType } from '@src/types/team';\r\n\r\nimport { FaUserPlus } from 'react-icons/fa';\r\nimport { ProfileIcon } from '@components/common';\r\nimport { UsersDropdownContainer, ProfileContainer, InvititationBtn } from './style';\r\n\r\ninterface Props {\r\n\tteamId: number;\r\n\thandleDropdownMode: (mode: DropdownModeType) => void;\r\n}\r\n\r\nconst UsersDropdown: React.FC<Props> = ({ teamId, handleDropdownMode }) => {\r\n\tconst teamUsers = useRecoilValue(teamUsersSelector(teamId));\r\n\tconst chatRoomUsers = useRecoilValue(chatRoomUsersState);\r\n\r\n\treturn (\r\n\t\t<UsersDropdownContainer>\r\n\t\t\t{chatRoomUsers.map((user: UserIdType) => (\r\n\t\t\t\t<ProfileContainer key={user.userId}>\r\n\t\t\t\t\t<ProfileIcon\r\n\t\t\t\t\t\tname={teamUsers[user.userId].name}\r\n\t\t\t\t\t\tcolor={teamUsers[user.userId].color}\r\n\t\t\t\t\t\tstatus='none'\r\n\t\t\t\t\t\twidth={2.5}\r\n\t\t\t\t\t\tisHover={false}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<span>{teamUsers[user.userId].name}</span>\r\n\t\t\t\t</ProfileContainer>\r\n\t\t\t))}\r\n\t\t\t<InvititationBtn onClick={() => handleDropdownMode('invite')}>\r\n\t\t\t\t<FaUserPlus />\r\n\t\t\t\t<span>유저 추가하기</span>\r\n\t\t\t</InvititationBtn>\r\n\t\t</UsersDropdownContainer>\r\n\t);\r\n};\r\n\r\nexport default UsersDropdown;\r\n","import React, { useContext } from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\n\r\nimport { socketApi } from '@apis/chat';\r\nimport { currChatRoomIdState } from '@stores/chat';\r\nimport { ColorCode } from '@utils/constants';\r\nimport { SocketContext } from '@utils/socketContext';\r\nimport { UserIdType } from '@src/types/team';\r\nimport { DropdownModeType } from '@src/types/chat';\r\n\r\nimport { Button } from '@components/common';\r\nimport SearchInput from '../SearchInput';\r\nimport { InviteDropdownContainer, ButttonContainer, SearchInputWrapper } from './style';\r\n\r\ninterface Props {\r\n\tteamId: number;\r\n\tinviteUsers: UserIdType[];\r\n\taddInviteUser: (newUser: UserIdType) => void;\r\n\tdeleteInviteUser: (id: number) => void;\r\n\tinitInviteUser: () => void;\r\n\thandleDropdownMode: (node: DropdownModeType) => void;\r\n}\r\nconst InviteDropdown: React.FC<Props> = ({\r\n\tteamId,\r\n\tinviteUsers,\r\n\taddInviteUser,\r\n\tdeleteInviteUser,\r\n\tinitInviteUser,\r\n\thandleDropdownMode,\r\n}) => {\r\n\tconst socketRef = useContext(SocketContext);\r\n\tconst currChatRoomId = useRecoilValue(currChatRoomIdState);\r\n\r\n\tconst handleInviteUsers = () => {\r\n\t\tsocketApi.inviteUsers(socketRef.current, teamId, currChatRoomId, inviteUsers);\r\n\t\tinitInviteUser();\r\n\t\thandleDropdownMode('none');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<InviteDropdownContainer>\r\n\t\t\t<h3>유저 초대하기</h3>\r\n\t\t\t<SearchInputWrapper>\r\n\t\t\t\t<SearchInput\r\n\t\t\t\t\tteamId={teamId}\r\n\t\t\t\t\tinviteUsers={inviteUsers}\r\n\t\t\t\t\taddInviteUser={addInviteUser}\r\n\t\t\t\t\tdeleteInviteUser={deleteInviteUser}\r\n\t\t\t\t/>\r\n\t\t\t</SearchInputWrapper>\r\n\t\t\t<ButttonContainer>\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttext='초대'\r\n\t\t\t\t\tbackgroundColor={ColorCode.PRIMARY1}\r\n\t\t\t\t\tfontColor={ColorCode.WHITE}\r\n\t\t\t\t\thandler={handleInviteUsers}\r\n\t\t\t\t/>\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttext='닫기'\r\n\t\t\t\t\tbackgroundColor={ColorCode.WHITE}\r\n\t\t\t\t\tfontColor={ColorCode.BLACK}\r\n\t\t\t\t\thandler={() => handleDropdownMode('none')}\r\n\t\t\t\t/>\r\n\t\t\t</ButttonContainer>\r\n\t\t</InviteDropdownContainer>\r\n\t);\r\n};\r\n\r\nexport default InviteDropdown;\r\n","import React, { useRef, useContext } from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\n\r\nimport { chatRoomsState, currChatRoomIdState } from '@stores/chat';\r\nimport { SocketContext } from '@utils/socketContext';\r\nimport { socketApi } from '@apis/chat';\r\nimport { ColorCode } from '@utils/constants';\r\nimport { DropdownModeType } from '@src/types/chat';\r\n\r\nimport { Button } from '@components/common';\r\nimport { ButttonContainer, UpdateDropdownContainer } from './style';\r\n\r\ninterface Props {\r\n\thandleDropdownMode: (mode: DropdownModeType) => void;\r\n}\r\n\r\nconst UpdateDropdown: React.FC<Props> = ({ handleDropdownMode }) => {\r\n\tconst inputRef = useRef<HTMLInputElement>(null);\r\n\tconst socketRef = useContext(SocketContext);\r\n\tconst currChatRoomId = useRecoilValue(currChatRoomIdState);\r\n\tconst chatRooms = useRecoilValue(chatRoomsState);\r\n\r\n\tconst handleChatRoomNameUpdate = () => {\r\n\t\tif (!inputRef.current) return;\r\n\t\tif (inputRef.current.value === '') return;\r\n\t\tsocketApi.updateChatRoomName(socketRef.current, currChatRoomId, inputRef.current.value);\r\n\t\thandleDropdownMode('none');\r\n\t};\r\n\tconst getChatRoomName = (chatRoomId: number) =>\r\n\t\tchatRooms.find((chatRoom) => chatRoom.chatRoomId === chatRoomId)?.chatRoomName;\r\n\r\n\treturn (\r\n\t\t<UpdateDropdownContainer>\r\n\t\t\t<h3>채팅방 이름 변경</h3>\r\n\t\t\t<input type='text' defaultValue={getChatRoomName(currChatRoomId)} ref={inputRef} />\r\n\t\t\t<ButttonContainer>\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttext='변경'\r\n\t\t\t\t\tbackgroundColor={ColorCode.PRIMARY1}\r\n\t\t\t\t\tfontColor={ColorCode.WHITE}\r\n\t\t\t\t\thandler={handleChatRoomNameUpdate}\r\n\t\t\t\t/>\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttext='닫기'\r\n\t\t\t\t\tbackgroundColor={ColorCode.WHITE}\r\n\t\t\t\t\tfontColor={ColorCode.BLACK}\r\n\t\t\t\t\thandler={() => handleDropdownMode('none')}\r\n\t\t\t\t/>\r\n\t\t\t</ButttonContainer>\r\n\t\t</UpdateDropdownContainer>\r\n\t);\r\n};\r\n\r\nexport default UpdateDropdown;\r\n","import { ColorCode } from '@utils/constants';\r\nimport styled from 'styled-components';\r\n\r\nexport const RoomHeaderContainer = styled.div`\r\n\theight: 100%;\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\tpadding: 0 1rem;\r\n\tposition: relative;\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n\tdisplay: flex;\r\n`;\r\n\r\nexport const UsersDropdownBtn = styled.button`\r\n\twidth: 2.5rem;\r\n\theight: 2.5rem;\r\n\tcursor: pointer;\r\n\tborder: none;\r\n\tbackground-color: transparent;\r\n\tcolor: ${ColorCode.FONT1};\r\n\tflex-shrink: 0;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tposition: relative;\r\n\tsvg {\r\n\t\twidth: 1.2rem;\r\n\t\theight: 1.2rem;\r\n\t}\r\n\tspan {\r\n\t\tposition: absolute;\r\n\t\tright: 0.5rem;\r\n\t\tbottom: 0.4rem;\r\n\t}\r\n\t:hover {\r\n\t\tcolor: ${ColorCode.PRIMARY1};\r\n\t}\r\n`;\r\n\r\nexport const ExitBtn = styled.button`\r\n\twidth: 2.5rem;\r\n\theight: 2.5rem;\r\n\tcursor: pointer;\r\n\tborder: none;\r\n\tbackground-color: transparent;\r\n\tcolor: ${ColorCode.FONT1};\r\n\tflex-shrink: 0;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tsvg {\r\n\t\twidth: 1.4rem;\r\n\t\theight: 1.4rem;\r\n\t}\r\n\t:hover {\r\n\t\tcolor: ${ColorCode.PRIMARY1};\r\n\t}\r\n`;\r\n\r\nexport const ChatRoomInfoContainer = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tflex-shrink: 0;\r\n\th2 {\r\n\t\tmargin: 0 0.6rem;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\tsvg {\r\n\t\tcolor: ${ColorCode.FONT1};\r\n\t\tcursor: pointer;\r\n\t\t:hover {\r\n\t\t\tcolor: ${ColorCode.PRIMARY1};\r\n\t\t}\r\n\t}\r\n`;\r\n","import React, { useState, useContext } from 'react';\r\nimport { useRecoilState, useRecoilValue, useResetRecoilState, useSetRecoilState } from 'recoil';\r\n\r\nimport { socketApi } from '@apis/chat';\r\nimport userState from '@stores/user';\r\nimport { chatModeState, chatRoomsState, currChatRoomIdState, chatRoomUsersState } from '@stores/chat';\r\nimport { SocketContext } from '@utils/socketContext';\r\nimport { DropdownModeType } from '@src/types/chat';\r\nimport { UserIdType } from '@src/types/team';\r\n\r\nimport { FaUserPlus, FaPen, FaSignOutAlt } from 'react-icons/fa';\r\nimport { ProfileIcon } from '@components/common';\r\nimport UsersDropdown from '../Dropdown/UsersDropdown';\r\nimport InviteDropdown from '../Dropdown/InviteDropdown';\r\nimport UpdateDropdown from '../Dropdown/UpdateDropdown';\r\nimport { RoomHeaderContainer, ChatRoomInfoContainer, ButtonContainer, UsersDropdownBtn, ExitBtn } from './style';\r\n\r\ninterface Props {\r\n\tteamId: number;\r\n\tinviteUsers: UserIdType[];\r\n\taddInviteUser: (newUser: UserIdType) => void;\r\n\tdeleteInviteUser: (id: number) => void;\r\n\tinitInviteUser: () => void;\r\n}\r\n\r\nconst RoomHeader: React.FC<Props> = ({ teamId, inviteUsers, addInviteUser, deleteInviteUser, initInviteUser }) => {\r\n\tconst socketRef = useContext(SocketContext);\r\n\tconst myId = useRecoilValue(userState).id;\r\n\tconst [chatRooms, setChatRooms] = useRecoilState(chatRoomsState);\r\n\tconst chatRoomUsers = useRecoilValue(chatRoomUsersState);\r\n\tconst currChatRoomId = useRecoilValue(currChatRoomIdState);\r\n\tconst resetCurrChatRoom = useResetRecoilState(currChatRoomIdState);\r\n\tconst setChatMode = useSetRecoilState(chatModeState);\r\n\r\n\tconst [dropdownMode, setDropdownMode] = useState<DropdownModeType>('none');\r\n\r\n\tconst handleDropdownMode = (mode: DropdownModeType) => setDropdownMode(mode);\r\n\r\n\tconst handleChatRoomExit = async () => {\r\n\t\tsocketApi.exitChatRoom(socketRef.current, currChatRoomId, myId);\r\n\t\tsetChatRooms(chatRooms.filter((chatRoom) => chatRoom.chatRoomId !== currChatRoomId));\r\n\t\tsetChatMode('none');\r\n\t\tresetCurrChatRoom();\r\n\t};\r\n\r\n\tconst handleUpdateDropdown = () => {\r\n\t\tif (dropdownMode === 'update') handleDropdownMode('none');\r\n\t\telse handleDropdownMode('update');\r\n\t};\r\n\tconst handleUsersDropdown = () => {\r\n\t\tif (dropdownMode === 'invite' || dropdownMode === 'users') handleDropdownMode('none');\r\n\t\telse handleDropdownMode('users');\r\n\t};\r\n\r\n\tconst getChatRoomName = (chatRoomId: number) =>\r\n\t\tchatRooms.find((chatRoom) => chatRoom.chatRoomId === chatRoomId)?.chatRoomName;\r\n\r\n\treturn (\r\n\t\t<RoomHeaderContainer>\r\n\t\t\t<ChatRoomInfoContainer>\r\n\t\t\t\t<ProfileIcon\r\n\t\t\t\t\tname={getChatRoomName(currChatRoomId) ?? ''}\r\n\t\t\t\t\tcolor={currChatRoomId % 6}\r\n\t\t\t\t\tstatus='none'\r\n\t\t\t\t\twidth={3.2}\r\n\t\t\t\t\tisHover={false}\r\n\t\t\t\t/>\r\n\t\t\t\t<h2>{getChatRoomName(currChatRoomId) ?? ''}</h2>\r\n\t\t\t\t<FaPen onClick={handleUpdateDropdown} />\r\n\t\t\t</ChatRoomInfoContainer>\r\n\t\t\t<ButtonContainer>\r\n\t\t\t\t<UsersDropdownBtn onClick={handleUsersDropdown}>\r\n\t\t\t\t\t<FaUserPlus />\r\n\t\t\t\t\t<span>{chatRoomUsers.length}</span>\r\n\t\t\t\t</UsersDropdownBtn>\r\n\t\t\t\t<ExitBtn onClick={handleChatRoomExit}>\r\n\t\t\t\t\t<FaSignOutAlt />\r\n\t\t\t\t</ExitBtn>\r\n\t\t\t</ButtonContainer>\r\n\t\t\t{dropdownMode === 'update' && <UpdateDropdown handleDropdownMode={handleDropdownMode} />}\r\n\t\t\t{dropdownMode === 'users' && <UsersDropdown teamId={teamId} handleDropdownMode={handleDropdownMode} />}\r\n\t\t\t{dropdownMode === 'invite' && (\r\n\t\t\t\t<InviteDropdown\r\n\t\t\t\t\tteamId={teamId}\r\n\t\t\t\t\tinviteUsers={inviteUsers}\r\n\t\t\t\t\taddInviteUser={addInviteUser}\r\n\t\t\t\t\tdeleteInviteUser={deleteInviteUser}\r\n\t\t\t\t\tinitInviteUser={initInviteUser}\r\n\t\t\t\t\thandleDropdownMode={handleDropdownMode}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</RoomHeaderContainer>\r\n\t);\r\n};\r\n\r\nexport default RoomHeader;\r\n","import { ColorCode } from '@utils/constants';\r\nimport styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\tposition: absolute;\r\n\twidth: 100%;\r\n\theight: 3.5rem;\r\n\tborder-bottom: solid 1px ${ColorCode.LINE2};\r\n\tz-index: 15;\r\n`;\r\n","import React from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\n\r\nimport { UserIdType } from '@src/types/team';\r\nimport { chatModeState, currChatRoomIdState } from '@stores/chat';\r\n\r\nimport SearchHeader from './Header/SearchHeader';\r\nimport RoomHeader from './Header/RoomHeader';\r\nimport { Container } from './style';\r\n\r\ninterface Props {\r\n\tteamId: number;\r\n\tinviteUsers: UserIdType[];\r\n\taddInviteUser: (newUser: UserIdType) => void;\r\n\tdeleteInviteUser: (id: number) => void;\r\n\tinitInviteUser: () => void;\r\n}\r\n\r\nconst ChatHeader: React.FC<Props> = ({ teamId, inviteUsers, addInviteUser, deleteInviteUser, initInviteUser }) => {\r\n\tconst currChatRoomId = useRecoilValue(currChatRoomIdState);\r\n\tconst chatMode = useRecoilValue(chatModeState);\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{chatMode === 'create' ? (\r\n\t\t\t\t<SearchHeader\r\n\t\t\t\t\tteamId={teamId}\r\n\t\t\t\t\tinviteUsers={inviteUsers}\r\n\t\t\t\t\taddInviteUser={addInviteUser}\r\n\t\t\t\t\tdeleteInviteUser={deleteInviteUser}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\tcurrChatRoomId !== -1 && (\r\n\t\t\t\t\t<RoomHeader\r\n\t\t\t\t\t\tteamId={teamId}\r\n\t\t\t\t\t\tinviteUsers={inviteUsers}\r\n\t\t\t\t\t\taddInviteUser={addInviteUser}\r\n\t\t\t\t\t\tdeleteInviteUser={deleteInviteUser}\r\n\t\t\t\t\t\tinitInviteUser={initInviteUser}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default ChatHeader;\r\n","import { ColorCode, Font } from '@utils/constants';\r\nimport styled from 'styled-components';\r\n\r\ninterface Props {\r\n\tmyChat: boolean;\r\n}\r\nexport const Container = styled.div<Props>`\r\n\tdisplay: flex;\r\n\tmargin: 1.5rem 3rem;\r\n\tjustify-content: ${(props) => (props.myChat ? `right` : `left`)};\r\n`;\r\n\r\nexport const ChatIconWrapper = styled.div`\r\n\tmargin-right: 0.6rem;\r\n`;\r\n\r\nexport const MessageContainer = styled.div<Props>`\r\n\tmax-width: 70%;\r\n\tpadding: 0.5rem 1rem;\r\n\tfont-size: ${Font.SMALL};\r\n\tborder-radius: 8px;\r\n\tbackground-color: ${(props) => (props.myChat ? `${ColorCode.PRIMARY2}` : `${ColorCode.WHITE}`)};\r\n`;\r\n\r\nexport const InfoContainer = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n\tmargin-bottom: 0.5rem;\r\n\tb {\r\n\t\tfont-weight: bold;\r\n\t\tpadding-right: 0.5rem;\r\n\t}\r\n\tspan {\r\n\t\tfont-size: ${Font.X_SMALL};\r\n\t}\r\n`;\r\n\r\nexport const ImojiWraper = styled.div`\r\n\tpadding-left: 1rem;\r\n`;\r\n","import React from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\n\r\nimport { MessageType } from '@src/types/chat';\r\nimport userState from '@stores/user';\r\nimport { teamUsersSelector } from '@stores/team';\r\nimport { timeToString } from '@utils/time';\r\n\r\nimport { ProfileIcon } from '@components/common';\r\nimport { Container, ChatIconWrapper, MessageContainer, InfoContainer } from './style';\r\n\r\ninterface Props {\r\n\tteamId: number;\r\n\tmessage: MessageType;\r\n}\r\n\r\nconst Message: React.FC<Props> = ({ teamId, message }) => {\r\n\tconst teamUsers = useRecoilValue(teamUsersSelector(teamId));\r\n\tconst myId = useRecoilValue(userState).id;\r\n\r\n\tconst isMyChat = () => message.userId === myId;\r\n\r\n\treturn (\r\n\t\t<Container myChat={isMyChat()}>\r\n\t\t\t{!isMyChat() && (\r\n\t\t\t\t<ChatIconWrapper>\r\n\t\t\t\t\t<ProfileIcon\r\n\t\t\t\t\t\tname={teamUsers[message.userId] ? teamUsers[message.userId].name : '알 수 없음'}\r\n\t\t\t\t\t\tcolor={teamUsers[message.userId] ? teamUsers[message.userId].color : 0}\r\n\t\t\t\t\t\tstatus='none'\r\n\t\t\t\t\t\twidth={3.2}\r\n\t\t\t\t\t\tisHover={false}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ChatIconWrapper>\r\n\t\t\t)}\r\n\t\t\t<MessageContainer myChat={isMyChat()}>\r\n\t\t\t\t<InfoContainer>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{!isMyChat() && <b>{teamUsers[message.userId] ? teamUsers[message.userId].name : '알 수 없음'}</b>}\r\n\t\t\t\t\t\t<span>{timeToString(new Date(message.createdAt))}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</InfoContainer>\r\n\t\t\t\t<span>{message.content}</span>\r\n\t\t\t</MessageContainer>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Message;\r\n","import { ColorCode } from '@utils/constants';\r\nimport styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\tposition: absolute;\r\n\ttop: 3.5rem;\r\n\tbottom: 0;\r\n\tleft: 0;\r\n\tright: 0;\r\n`;\r\n\r\nexport const MessagesContainer = styled.div`\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tbottom: 4.6rem;\r\n\tleft: 0;\r\n\tright: 0;\r\n\toverflow-y: scroll;\r\n\t::-webkit-scrollbar {\r\n\t\tdisplay: none;\r\n\t}\r\n`;\r\n\r\nexport const NoticeContainer = styled.div`\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tbottom: 4.6rem;\r\n\tleft: 0;\r\n\tright: 0;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tspan {\r\n\t\tcolor: ${ColorCode.FONT1};\r\n\t\tfont-weight: bold;\r\n\t\tdisplay: block;\r\n\t\tmargin-bottom: 1rem;\r\n\t}\r\n`;\r\n\r\nexport const InputContainer = styled.div`\r\n\tposition: absolute;\r\n\tbottom: 0;\r\n\tleft: 0;\r\n\tright: 0;\r\n\tborder-top: solid 1px ${ColorCode.LINE1};\r\n\tpadding: 0.8rem 0;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tinput {\r\n\t\twidth: 80%;\r\n\t\theight: 3rem;\r\n\t\tborder-radius: 5px;\r\n\t\tbox-sizing: border-box;\r\n\t\tborder: solid 2px transparent;\r\n\t\tpadding-left: 0.8rem;\r\n\t\t:focus {\r\n\t\t\toutline: none;\r\n\t\t\tborder-style: outset;\r\n\t\t\tborder-bottom: solid 2px ${ColorCode.PRIMARY1};\r\n\t\t}\r\n\t}\r\n\tsvg {\r\n\t\twidth: 1.5rem;\r\n\t\theight: 1.5rem;\r\n\t\tcolor: ${ColorCode.FONT1};\r\n\t\tmargin-left: 0.5rem;\r\n\t\tcursor: pointer;\r\n\t\t:hover {\r\n\t\t\tcolor: ${ColorCode.PRIMARY1};\r\n\t\t}\r\n\t}\r\n`;\r\n","import React, { useRef, useContext } from 'react';\r\nimport { useRecoilValue, useRecoilState } from 'recoil';\r\n\r\nimport { socketApi } from '@apis/chat';\r\nimport { SocketContext } from '@utils/socketContext';\r\nimport { UserIdType } from '@src/types/team';\r\nimport userState from '@stores/user';\r\nimport { teamUsersSelector } from '@stores/team';\r\nimport { chatModeState, currChatRoomIdState, messagesState } from '@stores/chat';\r\n\r\nimport { FaTelegramPlane } from 'react-icons/fa';\r\nimport Message from './Message';\r\nimport { Container, MessagesContainer, NoticeContainer, InputContainer } from './style';\r\n\r\ninterface Props {\r\n\tteamId: number;\r\n\tinviteUsers: UserIdType[];\r\n\tmessagesEndRef: React.RefObject<HTMLDivElement>;\r\n}\r\n\r\nconst ChatContent: React.FC<Props> = ({ teamId, inviteUsers, messagesEndRef }) => {\r\n\tconst inputRef = useRef<HTMLInputElement>(null);\r\n\tconst socketRef = useContext(SocketContext);\r\n\r\n\tconst myInfo = useRecoilValue(userState);\r\n\tconst currChatRoomId = useRecoilValue(currChatRoomIdState);\r\n\tconst teamUsers = useRecoilValue(teamUsersSelector(teamId));\r\n\tconst messages = useRecoilValue(messagesState);\r\n\tconst [chatMode, setChatMode] = useRecoilState(chatModeState);\r\n\r\n\tconst handleEnterCheck = (e: React.KeyboardEvent) => {\r\n\t\tif (e.key !== 'Enter') return;\r\n\t\tif (chatMode === 'create') {\r\n\t\t\thandleNewChatRoomCreate();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\thandleSendMessage();\r\n\t};\r\n\r\n\tconst handleNewChatRoomCreate = () => {\r\n\t\tif (!socketRef.current) return;\r\n\t\tif (!inputRef.current) return;\r\n\t\tif (inputRef.current.value === '') return;\r\n\t\tif (!inviteUsers.length) return;\r\n\t\tconst chatRoomName = `${myInfo.name}, ${teamUsers[inviteUsers[0].userId].name} ..`;\r\n\t\tsocketApi.createChatRoom(socketRef.current, teamId, chatRoomName, [...inviteUsers, { userId: myInfo.id }], {\r\n\t\t\tcontent: inputRef.current.value,\r\n\t\t\tuserId: myInfo.id,\r\n\t\t});\r\n\t\tinputRef.current.value = '';\r\n\t\tsetChatMode('none');\r\n\t};\r\n\r\n\tconst handleSendMessage = () => {\r\n\t\tif (!inputRef.current) return;\r\n\t\tif (inputRef.current.value === '') return;\r\n\t\tsocketApi.sendMessage(socketRef.current, inputRef.current.value, myInfo.id, currChatRoomId);\r\n\t\tinputRef.current.value = '';\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{chatMode === 'chat' ? (\r\n\t\t\t\t<MessagesContainer>\r\n\t\t\t\t\t{messages.map((message) => (\r\n\t\t\t\t\t\t<Message key={message.messageId} message={message} teamId={teamId} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t<div ref={messagesEndRef} />\r\n\t\t\t\t</MessagesContainer>\r\n\t\t\t) : (\r\n\t\t\t\t<NoticeContainer>\r\n\t\t\t\t\t<span>새 대화를 시작하고 있습니다.</span>\r\n\t\t\t\t\t<span>아래에 첫 번째 메시지를 입력하세요.</span>\r\n\t\t\t\t</NoticeContainer>\r\n\t\t\t)}\r\n\t\t\t<InputContainer>\r\n\t\t\t\t<input type='text' placeholder='새 메시지 입력' ref={inputRef} onKeyPress={handleEnterCheck} />\r\n\t\t\t\t<FaTelegramPlane onClick={chatMode === 'create' ? handleNewChatRoomCreate : handleSendMessage} />\r\n\t\t\t</InputContainer>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default ChatContent;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nexport const Layout = styled.div`\r\n\tposition: relative;\r\n\theight: 100%;\r\n`;\r\n\r\nexport const MainContainer = styled.div`\r\n\tposition: absolute;\r\n\ttop: 3rem;\r\n\tleft: 0;\r\n\tright: 0;\r\n\tbottom: 0;\r\n\tdisplay: flex;\r\n\tbackground-color: ${ColorCode.BACKGROUND1};\r\n`;\r\n\r\nexport const ChatContainer = styled.div`\r\n\tposition: relative;\r\n\tmin-width: 35rem;\r\n\tflex-grow: 1;\r\n\tbackground-color: ${ColorCode.BACKGROUND1};\r\n\tbox-shadow: rgba(0, 0, 0, 0.1) 0px 4px 6px -1px, rgba(0, 0, 0, 0.06) 0px 2px 4px -1px;\r\n`;\r\n","import React from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\n\r\nimport { chatModeState } from '@stores/chat';\r\nimport { UserIdType } from '@src/types/team';\r\n\r\nimport { Header, Navbar } from '@components/common';\r\nimport ChatSidebar from '@components/Chat/ChatSidebar';\r\nimport ChatHeader from '@components/Chat/ChatHeader';\r\nimport ChatContent from '@components/Chat/ChatContent';\r\nimport { Layout, MainContainer, ChatContainer } from './style';\r\n\r\ninterface Props {\r\n\tteamId: number;\r\n\tinviteUsers: UserIdType[];\r\n\tmessagesEndRef: React.RefObject<HTMLDivElement>;\r\n\taddInviteUser: (newUser: UserIdType) => void;\r\n\tdeleteInviteUser: (id: number) => void;\r\n\tinitInviteUser: () => void;\r\n}\r\n\r\nconst ChatTemplate: React.FC<Props> = ({\r\n\tteamId,\r\n\tinviteUsers,\r\n\tmessagesEndRef,\r\n\taddInviteUser,\r\n\tdeleteInviteUser,\r\n\tinitInviteUser,\r\n}) => {\r\n\tconst chatMode = useRecoilValue(chatModeState);\r\n\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<Header />\r\n\t\t\t<MainContainer>\r\n\t\t\t\t<Navbar />\r\n\t\t\t\t<ChatSidebar teamId={teamId} />\r\n\t\t\t\t{chatMode !== 'none' && (\r\n\t\t\t\t\t<ChatContainer>\r\n\t\t\t\t\t\t<ChatHeader\r\n\t\t\t\t\t\t\tteamId={teamId}\r\n\t\t\t\t\t\t\tinviteUsers={inviteUsers}\r\n\t\t\t\t\t\t\taddInviteUser={addInviteUser}\r\n\t\t\t\t\t\t\tdeleteInviteUser={deleteInviteUser}\r\n\t\t\t\t\t\t\tinitInviteUser={initInviteUser}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ChatContent teamId={teamId} inviteUsers={inviteUsers} messagesEndRef={messagesEndRef} />\r\n\t\t\t\t\t</ChatContainer>\r\n\t\t\t\t)}\r\n\t\t\t</MainContainer>\r\n\t\t</Layout>\r\n\t);\r\n};\r\nexport default ChatTemplate;\r\n","import React, { useReducer, useEffect, useContext, useRef } from 'react';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { useRecoilState, useRecoilValue, useResetRecoilState, useSetRecoilState } from 'recoil';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { socketApi } from '@apis/chat';\r\nimport userState from '@stores/user';\r\nimport { currChatRoomIdState, messagesState, chatModeState, chatRoomsState, chatRoomUsersState } from '@stores/chat';\r\nimport { SocketContext } from '@utils/socketContext';\r\nimport { UserIdType } from '@src/types/team';\r\nimport { ChatRoomListType, ChatRoomType, MessageListType, MessageType } from '@src/types/chat';\r\n\r\nimport ChatTemplate from '@templates/ChatTemplate';\r\n\r\ntype InviteUsersAction = { type: 'ADD'; newUser: UserIdType } | { type: 'DELETE'; id: number } | { type: 'INIT' };\r\n\r\nconst inviteUsersReducer = (inviteUsers: UserIdType[], action: InviteUsersAction): UserIdType[] => {\r\n\tswitch (action.type) {\r\n\t\tcase 'ADD':\r\n\t\t\treturn [...inviteUsers, action.newUser];\r\n\t\tcase 'DELETE':\r\n\t\t\treturn [...inviteUsers.filter((users) => users.userId !== action.id)];\r\n\t\tcase 'INIT':\r\n\t\t\treturn [];\r\n\t\tdefault:\r\n\t\t\tthrow new Error();\r\n\t}\r\n};\r\n\r\ninterface MatchParams {\r\n\tteamId: string;\r\n}\r\n\r\ntype Props = RouteComponentProps<MatchParams>;\r\n\r\nconst ChatPage: React.FC<Props> = ({ match }) => {\r\n\tconst teamId = Number(match.params.teamId);\r\n\tconst socketRef = useContext(SocketContext);\r\n\tconst messagesEndRef = useRef<HTMLDivElement>(null);\r\n\tconst [inviteUsers, dispatchInviteUsers] = useReducer(inviteUsersReducer, []);\r\n\r\n\tconst myId = useRecoilValue(userState).id;\r\n\tconst [messages, setMessages] = useRecoilState(messagesState);\r\n\tconst currChatRoomId = useRecoilValue(currChatRoomIdState);\r\n\tconst setChatRooms = useSetRecoilState(chatRoomsState);\r\n\tconst resetCurrentChatRoom = useResetRecoilState(currChatRoomIdState);\r\n\tconst setChatMode = useSetRecoilState(chatModeState);\r\n\tconst setChatRoomUsers = useSetRecoilState(chatRoomUsersState);\r\n\r\n\tconst addInviteUser = (newUser: UserIdType) => dispatchInviteUsers({ type: 'ADD', newUser });\r\n\tconst deleteInviteUser = (id: number) => dispatchInviteUsers({ type: 'DELETE', id });\r\n\tconst initInviteUser = () => dispatchInviteUsers({ type: 'INIT' });\r\n\r\n\tconst scrollToBottom = () => messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n\r\n\tuseEffect(() => {\r\n\t\tresetCurrentChatRoom();\r\n\t\tsetChatMode('none');\r\n\t\tinitInviteUser();\r\n\t}, [teamId]);\r\n\r\n\tuseEffect(() => {\r\n\t\tscrollToBottom();\r\n\t}, [messages]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (socketRef.current) {\r\n\t\t\tinitInviteUser();\r\n\t\t\tsocketRef.current.on('receive message', (message: MessageType) => {\r\n\t\t\t\tsetChatRooms((prev) => {\r\n\t\t\t\t\tconst chatRoom = prev.find((chatRoom) => chatRoom.chatRoomId === message.chatRoomId);\r\n\t\t\t\t\tif (!chatRoom) return [...prev];\r\n\t\t\t\t\treturn [\r\n\t\t\t\t\t\t{ ...chatRoom, lastMessage: message },\r\n\t\t\t\t\t\t...prev.filter((chatRoom) => chatRoom.chatRoomId !== message.chatRoomId),\r\n\t\t\t\t\t];\r\n\t\t\t\t});\r\n\t\t\t\tif (message.chatRoomId === currChatRoomId) setMessages((messages) => [...messages, message]);\r\n\t\t\t});\r\n\t\t\tsocketRef.current.on(\r\n\t\t\t\t'join chat room',\r\n\t\t\t\t({ chatRoomId, userList }: { chatRoomId: number; userList: UserIdType[] }) => {\r\n\t\t\t\t\tif (chatRoomId === currChatRoomId) setChatRoomUsers((prev) => [...prev, ...userList]);\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t\tsocketRef.current.on('left chat room', ({ chatRoomId, userId }: { chatRoomId: number; userId: number }) => {\r\n\t\t\t\tif (chatRoomId === currChatRoomId)\r\n\t\t\t\t\tsetChatRoomUsers((prev) => [...prev.filter((user) => user.userId !== userId)]);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn () => {\r\n\t\t\tsocketRef.current.off('receive message');\r\n\t\t\tsocketRef.current.off('join chat room');\r\n\t\t\tsocketRef.current.off('left chat room');\r\n\t\t};\r\n\t}, [socketRef.current, currChatRoomId]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (socketRef.current) {\r\n\t\t\tsocketApi.enterChatPage(socketRef.current, teamId, myId);\r\n\t\t\tsocketRef.current.on('receive chat rooms info', ({ chatRooms }: { chatRooms: ChatRoomListType }) =>\r\n\t\t\t\tsetChatRooms(chatRooms),\r\n\t\t\t);\r\n\t\t\tsocketRef.current.on(\r\n\t\t\t\t'receive chat room info',\r\n\t\t\t\t({ userList, messageList }: { chatRoomId: number; userList: UserIdType[]; messageList: MessageListType }) => {\r\n\t\t\t\t\tsetMessages(messageList);\r\n\t\t\t\t\tsetChatRoomUsers(userList);\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t\tsocketRef.current.on('invited to chat room', (chatRoom: ChatRoomType) =>\r\n\t\t\t\tsetChatRooms((prev) => [chatRoom, ...prev]),\r\n\t\t\t);\r\n\t\t\tsocketRef.current.on(\r\n\t\t\t\t'updated chat room name',\r\n\t\t\t\t({ chatRoomId, chatRoomName }: { chatRoomId: number; chatRoomName: string }) => {\r\n\t\t\t\t\tsetChatRooms((prev) => {\r\n\t\t\t\t\t\tconst chatRoom = prev.find((chatRoom) => chatRoom.chatRoomId === chatRoomId);\r\n\t\t\t\t\t\tif (!chatRoom) return [...prev];\r\n\t\t\t\t\t\treturn [{ ...chatRoom, chatRoomName }, ...prev.filter((chatRoom) => chatRoom.chatRoomId !== chatRoomId)];\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t\tsocketRef.current.on('chat error', (errorMessage: string) => {\r\n\t\t\t\ttoast.error(errorMessage);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn () => {\r\n\t\t\tsocketRef.current.off('receive chat rooms info');\r\n\t\t\tsocketRef.current.off('receive chat room info');\r\n\t\t\tsocketRef.current.off('invited to chat room');\r\n\t\t\tsocketRef.current.off('updated chat room name');\r\n\t\t\tsocketRef.current.off('chat error');\r\n\t\t};\r\n\t}, [socketRef.current, teamId]);\r\n\r\n\treturn (\r\n\t\t<ChatTemplate\r\n\t\t\tteamId={teamId}\r\n\t\t\tinviteUsers={inviteUsers}\r\n\t\t\tmessagesEndRef={messagesEndRef}\r\n\t\t\taddInviteUser={addInviteUser}\r\n\t\t\tdeleteInviteUser={deleteInviteUser}\r\n\t\t\tinitInviteUser={initInviteUser}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default ChatPage;\r\n","import { toast } from 'react-toastify';\r\nimport { ScheduleType, ScheduleReqType, ScheduleResType } from '@src/types/calendar';\r\nimport fetchApi from '@utils/fetch';\r\n\r\nexport const getSchedules = async (teamId: number, firstDate: string, lastDate: string): Promise<ScheduleType[]> => {\r\n\ttry {\r\n\t\tconst res = await fetchApi.get(`/api/schedules/${teamId}?start_date=${firstDate}&end_date=${lastDate}`);\r\n\t\tif (res.status === 404) throw new Error('😣 일정을 가져올 수 없습니다!');\r\n\t\telse if (res.status === 403) throw new Error('😣 권한이 없습니다!');\r\n\t\tconst data = await res.json();\r\n\t\tconst scheduleData: ScheduleType[] = data.map(scheduleSnakeToCamel);\r\n\t\treturn scheduleData;\r\n\t} catch (err) {\r\n\t\ttoast.error((err as Error).message);\r\n\t\treturn [];\r\n\t}\r\n};\r\n\r\nexport const createNewSchedule = async (teamId: number, newSchedule: ScheduleReqType): Promise<ScheduleType[]> => {\r\n\ttry {\r\n\t\tconst res = await fetchApi.post(`/api/schedules/${teamId}`, { ...newSchedule });\r\n\t\tif (res.status === 409) throw new Error('😣 일정 추가에 실패하였습니다!');\r\n\t\telse if (res.status === 403) throw new Error('😣 권한이 없습니다!');\r\n\t\tconst data = await res.json();\r\n\t\tconst scheduleData: ScheduleType[] = data.map(scheduleSnakeToCamel);\r\n\t\treturn scheduleData;\r\n\t} catch (err) {\r\n\t\ttoast.error((err as Error).message);\r\n\t\treturn [];\r\n\t}\r\n};\r\n\r\nexport const updateSchedule = async (\r\n\tscheduleId: number,\r\n\tnewSchedule: ScheduleReqType,\r\n): Promise<ScheduleType | undefined> => {\r\n\ttry {\r\n\t\tconst res = await fetchApi.put(`/api/schedules/${scheduleId}`, { ...newSchedule });\r\n\t\tif (res.status === 409) throw new Error('😣 일정 수정에 실패하였습니다!');\r\n\t\telse if (res.status === 403) throw new Error('😣 권한이 없습니다!');\r\n\t\tconst data = await res.json();\r\n\t\tconst scheduleData = scheduleSnakeToCamel(data);\r\n\t\treturn scheduleData;\r\n\t} catch (err) {\r\n\t\ttoast.error((err as Error).message);\r\n\t\treturn undefined;\r\n\t}\r\n};\r\n\r\nexport const deleteSchedule = async (scheduleId: number): Promise<boolean> => {\r\n\ttry {\r\n\t\tconst res = await fetchApi.delete(`/api/schedules/${scheduleId}`);\r\n\t\tif (res.status === 409) throw new Error('😣 일정 삭제에 실패하였습니다!');\r\n\t\telse if (res.status === 403) throw new Error('😣 권한이 없습니다!');\r\n\t\treturn true;\r\n\t} catch (err) {\r\n\t\ttoast.error((err as Error).message);\r\n\t\treturn false;\r\n\t}\r\n};\r\n\r\nconst scheduleSnakeToCamel = (schedule: ScheduleResType) => {\r\n\treturn {\r\n\t\tscheduleId: schedule.schedule_id,\r\n\t\tteamId: schedule.team_id,\r\n\t\ttitle: schedule.title,\r\n\t\tstartDate: schedule.start_date,\r\n\t\tendDate: schedule.end_date,\r\n\t\trepeatId: schedule.repeat_id,\r\n\t\trepeatOption: schedule.repeat_option,\r\n\t\trepeatCount: schedule.repeat_count,\r\n\t\tcontent: schedule.content,\r\n\t\tcolor: schedule.color,\r\n\t};\r\n};\r\n","import moment from 'moment';\r\nimport { DateInfoType } from '@src/types/calendar';\r\n\r\nexport const getFirstDate = (isMonthly: boolean, dateInfo: DateInfoType): string =>\r\n\tisMonthly\r\n\t\t? moment(new Date(dateInfo.year, dateInfo.month - 1, 1)).format('YYYYMMDD')\r\n\t\t: moment(dateInfo.weeklyStartDate).format('YYYYMMDD');\r\n\r\nexport const getLastDate = (isMonthly: boolean, dateInfo: DateInfoType): string =>\r\n\tisMonthly\r\n\t\t? moment(new Date(dateInfo.year, dateInfo.month, 0)).format('YYYYMMDD')\r\n\t\t: moment(dateInfo.weeklyStartDate).add(7, 'days').format('YYYYMMDD');\r\n\r\nexport const dateToFormatString = (date: Date, format: string): string => moment(date).format(format).toString();\r\n\r\nexport const isTodayDate = (date: Date, i: number): boolean =>\r\n\tmoment(date).add(i, 'days').format('YYYYMMDD') === moment().format('YYYYMMDD');\r\n\r\nexport const isSameDate = (date: Date, i: number, refDate: Date): boolean =>\r\n\tmoment(date).add(i, 'days').format('YYYYMMDD') === moment(refDate).format('YYYYMMDD');\r\n\r\nconst isDoubleMonth = (date: moment.Moment): boolean => date.month() !== date.add(7, 'days').month();\r\n\r\nexport const getCurrDateInfo = (): DateInfoType => {\r\n\tconst date = moment().startOf('week');\r\n\treturn {\r\n\t\tyear: date.year(),\r\n\t\tmonth: date.month() + 1,\r\n\t\tweeklyStartDate: date.toDate(),\r\n\t\tisDoubleMonth: isDoubleMonth(date),\r\n\t};\r\n};\r\n\r\nexport const getPrevDateInfo = (\r\n\tyear: number,\r\n\tmonth: number,\r\n\tweeklyStartDate: Date,\r\n\tisMonthly: boolean,\r\n): DateInfoType => {\r\n\tif (isMonthly) {\r\n\t\tconst date = moment([year, month - 1, 1]).subtract(1, 'months');\r\n\t\treturn {\r\n\t\t\tyear: date.year(),\r\n\t\t\tmonth: date.month() + 1,\r\n\t\t\tweeklyStartDate: date.startOf('week').toDate(),\r\n\t\t\tisDoubleMonth: isDoubleMonth(date),\r\n\t\t};\r\n\t}\r\n\tconst date = moment(weeklyStartDate).subtract(1, 'weeks');\r\n\treturn {\r\n\t\tyear: date.year(),\r\n\t\tmonth: date.month() + 1,\r\n\t\tweeklyStartDate: date.toDate(),\r\n\t\tisDoubleMonth: isDoubleMonth(date),\r\n\t};\r\n};\r\n\r\nexport const getNextDateInfo = (\r\n\tyear: number,\r\n\tmonth: number,\r\n\tweeklyStartDate: Date,\r\n\tisMonthly: boolean,\r\n): DateInfoType => {\r\n\tif (isMonthly) {\r\n\t\tconst date = moment([year, month - 1, 1]).add(1, 'months');\r\n\t\treturn {\r\n\t\t\tyear: date.year(),\r\n\t\t\tmonth: date.month() + 1,\r\n\t\t\tweeklyStartDate: date.startOf('week').toDate(),\r\n\t\t\tisDoubleMonth: isDoubleMonth(date),\r\n\t\t};\r\n\t}\r\n\tconst date = moment(weeklyStartDate).add(1, 'weeks');\r\n\treturn {\r\n\t\tyear: date.year(),\r\n\t\tmonth: date.month() + 1,\r\n\t\tweeklyStartDate: date.toDate(),\r\n\t\tisDoubleMonth: isDoubleMonth(date),\r\n\t};\r\n};\r\n\r\nexport const isNum = (num: number | string): boolean => !Number.isNaN(Number(num));\r\n","import { atom } from 'recoil';\r\n\r\nexport const ModalMode = atom({\r\n\tkey: 'calendarModalMode',\r\n\tdefault: {\r\n\t\tmode: 'create',\r\n\t},\r\n});\r\n\r\nexport const ModalSchedule = atom({\r\n\tkey: 'calendarModalSchedule',\r\n\tdefault: {\r\n\t\tscheduleId: -1,\r\n\t\tcolor: 0,\r\n\t\ttitle: '',\r\n\t\tstartDate: new Date().toString(),\r\n\t\tendDate: new Date().toString(),\r\n\t\trepeatId: '',\r\n\t\trepeatOption: 0,\r\n\t\tcontent: '',\r\n\t},\r\n});\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nexport const Container = styled.header`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\twidth: 100%;\r\n\theight: 2.5rem;\r\n\tbackground-color: ${ColorCode.BACKGROUND1};\r\n\tpadding: 0 0.8rem;\r\n\tbox-sizing: border-box;\r\n\tborder-bottom: solid 1px ${ColorCode.LINE2};\r\n\tsvg {\r\n\t\tcolor: ${ColorCode.FONT2};\r\n\t}\r\n`;\r\n\r\nexport const InfoContainer = styled.div`\r\n\tflex-shrink: 0;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tfont-size: 0.9rem;\r\n\tdiv {\r\n\t\tpadding: 0 0.8rem;\r\n\t}\r\n\tsvg {\r\n\t\tcursor: pointer;\r\n\t\t&:hover {\r\n\t\t\tcolor: ${ColorCode.HOVER};\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n\tflex-shrink: 0;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\t& > * {\r\n\t\tmargin-left: 0.5rem;\r\n\t}\r\n\tbutton {\r\n\t\tpadding-left: 0.5rem;\r\n\t\tpadding-right: 0.5rem;\r\n\t}\r\n`;\r\n\r\nexport const TodayBtn = styled.button`\r\n\tborder: none;\r\n\tbackground-color: transparent;\r\n\tcursor: pointer;\r\n\tspan {\r\n\t\tpadding-left: 0.3rem;\r\n\t\tfont-size: 0.9rem;\r\n\t}\r\n\t&:hover {\r\n\t\tspan,\r\n\t\tsvg {\r\n\t\t\tcolor: ${ColorCode.HOVER};\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const NewAppointmentBtn = styled.button`\r\n\tbackground-color: ${ColorCode.HOVER};\r\n\tcolor: ${ColorCode.WHITE};\r\n\tborder-radius: 8px;\r\n\tpadding: 0.3rem 0.5rem;\r\n\tborder-color: transparent;\r\n\tsvg {\r\n\t\tcolor: ${ColorCode.WHITE};\r\n\t\tpadding-right: 0.2rem;\r\n\t}\r\n\t&:hover {\r\n\t\tbackground-color: ${ColorCode.PRIMARY1};\r\n\t}\r\n`;\r\n\r\ninterface btnProps {\r\n\tfocus: boolean;\r\n}\r\n\r\nexport const ConvertBtnContainer = styled.div`\r\n\tdisplay: flex;\r\n\twidth: max-content;\r\n\tborder-radius: 8px;\r\n\tborder: 1px solid ${ColorCode.LINE2};\r\n`;\r\n\r\nexport const ConvertBtn = styled.button<btnProps>`\r\n\tbackground-color: ${(props) => (props.focus ? `${ColorCode.PRIMARY1}` : 'transparent')};\r\n\tcolor: ${(props) => (props.focus ? `${ColorCode.WHITE}` : `${ColorCode.BLACK}`)};\r\n\tborder: 1px solid transparent;\r\n\tborder-radius: 8px;\r\n\tcursor: pointer;\r\n\tpadding: 0.3rem 0.4rem;\r\n\t:hover {\r\n\t\tborder: 1px solid ${ColorCode.PRIMARY1};\r\n\t\topacity: 0.9;\r\n\t}\r\n`;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { useResetRecoilState, useSetRecoilState } from 'recoil';\r\n\r\nimport { ModalMode, ModalSchedule } from '@stores/calendar';\r\nimport { ColorCode } from '@utils/constants';\r\nimport { DateInfoType, weekContentNumber } from '@src/types/calendar';\r\n\r\nimport { FaChevronLeft, FaChevronRight, FaCalendarAlt } from 'react-icons/fa';\r\nimport NewAppointmentBtn from '@components/common/Button';\r\nimport { Container, InfoContainer, TodayBtn, ConvertBtn, ConvertBtnContainer, ButtonContainer } from './style';\r\n\r\ninterface Props {\r\n\tchangeToCurrDate: () => void;\r\n\tchangeToPrevDate: () => void;\r\n\tchangeToNextDate: () => void;\r\n\tchangeToMonthly: () => void;\r\n\tchangeToWeekly: () => void;\r\n\thandleModalOpen: () => void;\r\n\tisMonthly: boolean;\r\n\tdateInfo: DateInfoType;\r\n}\r\n\r\nconst CalendarHeader: React.FC<Props> = ({\r\n\tchangeToCurrDate,\r\n\tchangeToPrevDate,\r\n\tchangeToNextDate,\r\n\tchangeToMonthly,\r\n\tchangeToWeekly,\r\n\thandleModalOpen,\r\n\tisMonthly,\r\n\tdateInfo,\r\n}) => {\r\n\tconst setModalMode = useSetRecoilState(ModalMode);\r\n\tconst resetModalSchedule = useResetRecoilState(ModalSchedule);\r\n\r\n\tconst handleCreateModalOpen = () => {\r\n\t\tresetModalSchedule();\r\n\t\tsetModalMode({ mode: 'create' });\r\n\t\thandleModalOpen();\r\n\t};\r\n\r\n\tconst nextDateInfo = () => {\r\n\t\tconst date = moment(dateInfo.weeklyStartDate).add(weekContentNumber.WEEK_NUMBER, 'days');\r\n\t\treturn { year: date.year(), month: date.month() };\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<InfoContainer>\r\n\t\t\t\t<TodayBtn onClick={changeToCurrDate}>\r\n\t\t\t\t\t<FaCalendarAlt />\r\n\t\t\t\t\t<span>오늘</span>\r\n\t\t\t\t</TodayBtn>\r\n\t\t\t\t<FaChevronLeft onClick={changeToPrevDate} />\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{!isMonthly && dateInfo.isDoubleMonth ? (\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t{`${dateInfo.weeklyStartDate.getFullYear()}년 ${dateInfo.weeklyStartDate.getMonth() + 1}월 - \r\n\t\t\t\t\t\t\t${nextDateInfo().year}년 ${nextDateInfo().month + 1}월`}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t{dateInfo.year}년 {dateInfo.month}월\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<FaChevronRight onClick={changeToNextDate} />\r\n\t\t\t</InfoContainer>\r\n\t\t\t<ButtonContainer>\r\n\t\t\t\t<ConvertBtnContainer>\r\n\t\t\t\t\t<ConvertBtn focus={!isMonthly} onClick={changeToWeekly}>\r\n\t\t\t\t\t\t주간\r\n\t\t\t\t\t</ConvertBtn>\r\n\t\t\t\t\t<ConvertBtn focus={isMonthly} onClick={changeToMonthly}>\r\n\t\t\t\t\t\t월간\r\n\t\t\t\t\t</ConvertBtn>\r\n\t\t\t\t</ConvertBtnContainer>\r\n\t\t\t\t<NewAppointmentBtn\r\n\t\t\t\t\ttext='+ 새 일정'\r\n\t\t\t\t\thandler={handleCreateModalOpen}\r\n\t\t\t\t\tbackgroundColor={ColorCode.PRIMARY1}\r\n\t\t\t\t\tfontColor={ColorCode.WHITE}\r\n\t\t\t\t/>\r\n\t\t\t</ButtonContainer>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default CalendarHeader;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nexport const WeekNameContainer = styled.div`\r\n\tdisplay: grid;\r\n\tgrid-template-columns: repeat(7, 1fr);\r\n\twidth: 100%;\r\n\t& > * {\r\n\t\tpadding: 0.5rem;\r\n\t}\r\n`;\r\n\r\nexport const DayNameWrapper = styled.div`\r\n\theight: 2rem;\r\n\tborder-right: 1px solid ${ColorCode.LINE2};\r\n\tborder-bottom: 1px solid ${ColorCode.LINE2};\r\n\tbackground-color: ${ColorCode.BACKGROUND1};\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\t&.sunday {\r\n\t\tcolor: ${ColorCode.RED};\r\n\t}\r\n`;\r\n","import React from 'react';\r\nimport { DayNameWrapper, WeekNameContainer } from './style';\r\n\r\nconst MonthHeader: React.FC = () => {\r\n\treturn (\r\n\t\t<WeekNameContainer>\r\n\t\t\t{['일', '월', '화', '수', '목', '금', '토'].map((day, idx) => (\r\n\t\t\t\t<DayNameWrapper key={day} className={idx === 0 ? 'sunday' : ''}>\r\n\t\t\t\t\t{day}\r\n\t\t\t\t</DayNameWrapper>\r\n\t\t\t))}\r\n\t\t</WeekNameContainer>\r\n\t);\r\n};\r\n\r\nexport default MonthHeader;\r\n","import styled from 'styled-components';\r\nimport { ColorCode, Font } from '@utils/constants';\r\n\r\ninterface ScheduleProps {\r\n\tonClick: () => void;\r\n\tcolor: string;\r\n}\r\n\r\nexport const ContentContainer = styled.div`\r\n\theight: 100%;\r\n`;\r\n\r\nexport const DayNum = styled.div`\r\n\tmargin: 0.5rem;\r\n`;\r\n\r\nexport const DayWrapper = styled.div`\r\n\theight: 100%;\r\n\tborder-right: 1px solid ${ColorCode.LINE2};\r\n\t&.sunday {\r\n\t\tcolor: ${ColorCode.RED};\r\n\t}\r\n\t&:hover {\r\n\t\tbackground-color: ${ColorCode.BACKGROUND1};\r\n\t}\r\n`;\r\n\r\nexport const Schedule = styled.div<ScheduleProps>`\r\n\tfont-size: ${Font.SMALL};\r\n\tborder-radius: 8px;\r\n\tbackground-color: ${(props) => props.color || ColorCode.ORANGE};\r\n\tpadding: 0.5rem;\r\n\tmargin: 0.3rem 0;\r\n\tcolor: ${ColorCode.BLACK};\r\n\tcursor: pointer;\r\n`;\r\n\r\nexport const WeekContainer = styled.div`\r\n\tdisplay: grid;\r\n\tgrid-template-columns: repeat(7, 1fr);\r\n\twidth: 100%;\r\n\tmin-height: 16%;\r\n\tborder-bottom: 1px solid ${ColorCode.LINE2};\r\n`;\r\n","import React from 'react';\r\nimport { useSetRecoilState } from 'recoil';\r\nimport { PrimaryPalette } from '@utils/constants';\r\nimport { ModalMode, ModalSchedule } from '@stores/calendar';\r\nimport { ScheduleType } from '@src/types/calendar';\r\nimport { DayWrapper, Schedule, DayNum } from './style';\r\n\r\ninterface Props {\r\n\tday: number;\r\n\tidx: number;\r\n\tschedules: ScheduleType[];\r\n\thandleModalOpen: () => void;\r\n}\r\n\r\nconst Day: React.FC<Props> = ({ day, idx, schedules, handleModalOpen }) => {\r\n\tconst getScheduleByDay = (day: number) => schedules.filter((obj) => new Date(obj.startDate).getDate() === day);\r\n\tconst setModalMode = useSetRecoilState(ModalMode);\r\n\tconst setModalSchedule = useSetRecoilState(ModalSchedule);\r\n\tconst handleScheduleClick = (schedule: ScheduleType) => {\r\n\t\tsetModalMode({ mode: 'read' });\r\n\t\tsetModalSchedule(schedule);\r\n\t\thandleModalOpen();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<DayWrapper className={idx === 0 ? 'sunday' : ''}>\r\n\t\t\t{day !== 0 ? <DayNum>{day}</DayNum> : null}\r\n\t\t\t{getScheduleByDay(day).map((schedule) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Schedule\r\n\t\t\t\t\t\tkey={schedule.scheduleId}\r\n\t\t\t\t\t\tonClick={() => handleScheduleClick(schedule)}\r\n\t\t\t\t\t\tcolor={PrimaryPalette[schedule.color]}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{schedule.title}\r\n\t\t\t\t\t</Schedule>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</DayWrapper>\r\n\t);\r\n};\r\n\r\nexport default Day;\r\n","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { ScheduleType } from '@src/types/calendar';\r\nimport { WeekContainer } from './style';\r\nimport Day from './Day';\r\n\r\ninterface Props {\r\n\tweek: number[];\r\n\tschedules: ScheduleType[];\r\n\thandleModalOpen: () => void;\r\n}\r\n\r\nconst Week: React.FC<Props> = ({ week, schedules, handleModalOpen }) => {\r\n\treturn (\r\n\t\t<WeekContainer>\r\n\t\t\t{week.map((day, idx) => (\r\n\t\t\t\t<Day key={uuidv4()} day={day} idx={idx} schedules={schedules} handleModalOpen={handleModalOpen} />\r\n\t\t\t))}\r\n\t\t</WeekContainer>\r\n\t);\r\n};\r\n\r\nexport default Week;\r\n","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { DateInfoType, ScheduleType, weekContentNumber } from '@src/types/calendar';\r\nimport Week from './Week';\r\nimport { ContentContainer } from './style';\r\n\r\ninterface Props {\r\n\tdateInfo: DateInfoType;\r\n\tschedules: ScheduleType[];\r\n\thandleModalOpen: () => void;\r\n}\r\n\r\nconst MonthContent: React.FC<Props> = ({ dateInfo, schedules, handleModalOpen }) => {\r\n\tconst getFirstDay = (month: number, year: number): number => new Date(`${year}-${month}-01`).getDay();\r\n\tconst firstDay = getFirstDay(dateInfo.month, dateInfo.year);\r\n\tconst lastDay = new Date(dateInfo.year, dateInfo.month, 0).getDate();\r\n\r\n\tconst generateDays = (firstDay: number, lastDay: number): number[][] => {\r\n\t\tlet curDay = 1;\r\n\t\tconst result: number[][] = [];\r\n\t\tconst week: number[] = [];\r\n\t\t// 첫 주이지만 전 달인 요일\r\n\t\t[...Array(firstDay)].forEach(() => {\r\n\t\t\tweek.push(0);\r\n\t\t});\r\n\t\t// 1일부터 첫주 마지막까지\r\n\t\t[...Array(weekContentNumber.WEEK_NUMBER - firstDay)].forEach(() => {\r\n\t\t\tweek.push(curDay);\r\n\t\t\tcurDay += 1;\r\n\t\t});\r\n\t\tresult.push(week);\r\n\r\n\t\t// 마지막주까지 쭉\r\n\t\twhile (curDay <= lastDay) {\r\n\t\t\tconst week: number[] = [];\r\n\t\t\tlet day = curDay;\r\n\t\t\t// 무조건 1주를 채우도록\r\n\t\t\t[...Array(weekContentNumber.WEEK_NUMBER)].forEach(() => {\r\n\t\t\t\tif (day <= lastDay) {\r\n\t\t\t\t\tweek.push(day);\r\n\t\t\t\t\tday += 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tweek.push(0);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tresult.push(week);\r\n\t\t\tcurDay = day;\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n\treturn (\r\n\t\t<ContentContainer>\r\n\t\t\t{generateDays(firstDay, lastDay).map((week) => (\r\n\t\t\t\t<Week key={uuidv4()} week={week} schedules={schedules} handleModalOpen={handleModalOpen} />\r\n\t\t\t))}\r\n\t\t</ContentContainer>\r\n\t);\r\n};\r\n\r\nexport default MonthContent;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.section`\r\n\theight: calc(100% - 3rem);\r\n\toverflow: hidden;\r\n`;\r\n","import React from 'react';\r\nimport { DateInfoType, ScheduleType } from '@src/types/calendar';\r\nimport MonthHeader from './MonthHeader';\r\nimport MonthContent from './MonthContent';\r\nimport { Container } from './style';\r\n\r\ninterface MonthlyCalendarProps {\r\n\tdateInfo: DateInfoType;\r\n\tschedules: ScheduleType[];\r\n\thandleModalOpen: () => void;\r\n}\r\n\r\nconst MonthlyCalendar: React.FC<MonthlyCalendarProps> = ({\r\n\tdateInfo,\r\n\tschedules,\r\n\thandleModalOpen,\r\n}: MonthlyCalendarProps) => {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<MonthHeader />\r\n\t\t\t<MonthContent dateInfo={dateInfo} schedules={schedules} handleModalOpen={handleModalOpen} />\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default MonthlyCalendar;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\ninterface DayContainerProps {\r\n\tfocus: boolean;\r\n}\r\n\r\nexport const Container = styled.header`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\theight: 4rem;\r\n\tbackground-color: ${ColorCode.BACKGROUND1};\r\n\tborder-bottom: solid 1px ${ColorCode.LINE2};\r\n\tpadding-left: 4.5rem;\r\n\tbox-sizing: border-box;\r\n`;\r\n\r\nexport const DayContainer = styled.div<DayContainerProps>`\r\n\theight: 100%;\r\n\tborder-left: solid 1px ${ColorCode.LINE2};\r\n\tflex-grow: 1;\r\n\tflex-shrink: 0;\r\n\tpadding: 0.5rem;\r\n\tbox-sizing: border-box;\r\n\tcolor: ${ColorCode.FONT1};\r\n\tbackground-color: ${(props) => `${props.focus ? ColorCode.WHITE : ''}`};\r\n\tb {\r\n\t\tdisplay: block;\r\n\t\tfont-size: 1.5rem;\r\n\t}\r\n\tspan {\r\n\t\tdisplay: block;\r\n\t\tpadding-top: 0.5rem;\r\n\t\tfont-size: 0.8rem;\r\n\t}\r\n`;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { DateInfoType, DayCode, weekContentNumber } from '@src/types/calendar';\r\nimport { Container, DayContainer } from './style';\r\n\r\ninterface Props {\r\n\tdateInfo: DateInfoType;\r\n}\r\n\r\nconst WeekHeader: React.FC<Props> = ({ dateInfo }) => {\r\n\tconst dayInfo = [...Array(weekContentNumber.WEEK_NUMBER)].map((v, i) => {\r\n\t\tconst tDate = new Date(dateInfo.weeklyStartDate);\r\n\t\ttDate.setDate(tDate.getDate() + i);\r\n\t\treturn { day: i, date: tDate.getDate() };\r\n\t});\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{dayInfo.map((el, i) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<DayContainer\r\n\t\t\t\t\t\tkey={uuidv4()}\r\n\t\t\t\t\t\tfocus={moment(dateInfo.weeklyStartDate).add(i, 'days').format('YYYYMMDD') === moment().format('YYYYMMDD')}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<b>{el.date}</b>\r\n\t\t\t\t\t\t<span>{DayCode[el.day]}</span>\r\n\t\t\t\t\t</DayContainer>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default WeekHeader;\r\n","import styled from 'styled-components';\r\nimport { Font } from '@utils/constants';\r\n\r\ninterface ContainerProps {\r\n\tlen: number;\r\n\tstart: number;\r\n\tcolor: string;\r\n\tborderColor: string;\r\n}\r\n\r\nexport const Container = styled.div<ContainerProps>`\r\n\tposition: absolute;\r\n\ttop: ${(props) => `${(props.start * 2.5).toString()}rem`};\r\n\tleft: 0;\r\n\tright: 0;\r\n\theight: ${(props) => `${(props.len * 2.5).toString()}rem`};\r\n\tborder-left: solid 4px;\r\n\tborder-color: ${(props) => `${props.borderColor}`};\r\n\tborder-radius: 4px;\r\n\tbackground-color: ${(props) => `${props.color}`};\r\n\tcursor: pointer;\r\n\tspan {\r\n\t\tdisplay: block;\r\n\t\tpadding: 0.5rem;\r\n\t\tfont-size: ${Font.SMALL};\r\n\t}\r\n`;\r\n","import React from 'react';\r\nimport { useSetRecoilState } from 'recoil';\r\n\r\nimport { ModalMode, ModalSchedule } from '@stores/calendar';\r\nimport { ScheduleType } from '@src/types/calendar';\r\nimport { PrimaryPalette, SecondaryPalette } from '@utils/constants';\r\nimport { Container } from './style';\r\n\r\ninterface Props {\r\n\tstart: number;\r\n\tlen: number;\r\n\tschedule: ScheduleType;\r\n\thandleModalOpen: () => void;\r\n}\r\n\r\nconst ScheduleItem: React.FC<Props> = ({ start, len, schedule, handleModalOpen }) => {\r\n\tconst setModalMode = useSetRecoilState(ModalMode);\r\n\tconst setModalSchedule = useSetRecoilState(ModalSchedule);\r\n\tconst handleScheduleClick = () => {\r\n\t\tsetModalMode({ mode: 'read' });\r\n\t\tsetModalSchedule(schedule);\r\n\t\thandleModalOpen();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container\r\n\t\t\tlen={len}\r\n\t\t\tstart={start}\r\n\t\t\tcolor={PrimaryPalette[schedule.color]}\r\n\t\t\tborderColor={SecondaryPalette[schedule.color]}\r\n\t\t\tonClick={handleScheduleClick}\r\n\t\t>\r\n\t\t\t<span>{schedule.title}</span>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default ScheduleItem;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\ninterface CurrTimeLineProps {\r\n\tstart: number;\r\n}\r\n\r\ninterface DayContainerProps {\r\n\tfocus: boolean;\r\n}\r\n\r\nexport const Container = styled.div`\r\n\tdisplay: flex;\r\n\tbackground-color: ${ColorCode.BACKGROUND1};\r\n\toverflow-y: scroll;\r\n\tposition: absolute;\r\n\ttop: 4rem;\r\n\tleft: 0;\r\n\tright: 0;\r\n\tbottom: 0;\r\n\t::-webkit-scrollbar {\r\n\t\tdisplay: none;\r\n\t}\r\n`;\r\n\r\nexport const TimeContainer = styled.div`\r\n\twidth: 4.5rem;\r\n\tdiv {\r\n\t\theight: 5rem;\r\n\t\tpadding-top: 0.3rem;\r\n\t\tfont-size: 0.8rem;\r\n\t\tcolor: ${ColorCode.FONT1};\r\n\t\ttext-align: center;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n`;\r\n\r\nexport const DaysContainer = styled.div`\r\n\tposition: relative;\r\n\tflex-grow: 1;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tflex-wrap: wrap;\r\n`;\r\n\r\nexport const DayContainer = styled.div<DayContainerProps>`\r\n\tposition: relative;\r\n\tflex-grow: 1;\r\n\tborder-left: solid 1px ${ColorCode.LINE2};\r\n\tbackground-color: ${(props) => `${props.focus ? ColorCode.WHITE : ''}`};\r\n`;\r\n\r\nexport const TimeBlock = styled.div`\r\n\tbox-sizing: border-box;\r\n\theight: 2.5rem;\r\n\tborder-bottom: solid 1px ${ColorCode.LINE2};\r\n\tborder-collapse: collapse;\r\n\t&:hover {\r\n\t\tbackground-color: ${ColorCode.LINE1};\r\n\t}\r\n`;\r\n\r\nexport const CurrTimeLine = styled.hr<CurrTimeLineProps>`\r\n\tposition: absolute;\r\n\ttop: ${(props) => `${(props.start * 2.5).toString()}rem`};\r\n\tleft: 4.5rem;\r\n\tborder-width: 1px 0 0 0;\r\n\tborder-color: ${ColorCode.RED};\r\n\tborder-style: dashed;\r\n\twidth: 100%;\r\n\tmargin: 0;\r\n\tz-index: 10;\r\n`;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { DateInfoType, weekContentNumber, ScheduleType, TimeType } from '@src/types/calendar';\r\nimport { isTodayDate, isSameDate } from '@utils/calendar';\r\nimport ScheduleItem from '../ScheduleItem';\r\nimport { Container, TimeContainer, DaysContainer, DayContainer, TimeBlock, CurrTimeLine } from './style';\r\n\r\ninterface Props {\r\n\tdateInfo: DateInfoType;\r\n\tschedules: ScheduleType[];\r\n\thandleModalOpen: () => void;\r\n}\r\n\r\ninterface TimeListProps {\r\n\ttimeList: TimeType[];\r\n\trenderItem: (item: TimeType) => unknown;\r\n}\r\n\r\nconst {\r\n\tMSEC_TO_HOUR,\r\n\tHALF_HOUR_TO_MIN,\r\n\tHOUR_TO_MIN,\r\n\tLINE_SPACE_PX,\r\n\tEXTRA_SPACE_PX,\r\n\tTIME_LIST,\r\n\tWEEK_NUMBER,\r\n\tDAY_TIME_NUMBER,\r\n} = weekContentNumber;\r\n\r\nconst TimeListGenerator: React.FC<TimeListProps> = ({ timeList, renderItem }) => {\r\n\treturn <TimeContainer>{timeList.map((item: { hour: number; text: string }) => renderItem(item))}</TimeContainer>;\r\n};\r\n\r\nconst Schedule: React.FC<Props> = ({ dateInfo, schedules = [], handleModalOpen }) => {\r\n\tconst [time, setTime] = useState(new Date());\r\n\tconst containerRef = useRef<HTMLDivElement>(null);\r\n\r\n\tconst getStartY = (date: Date) => {\r\n\t\treturn (date.getHours() * HOUR_TO_MIN + date.getMinutes()) / HALF_HOUR_TO_MIN;\r\n\t};\r\n\tconst getLenY = (startDate: Date, endDate: Date) => {\r\n\t\treturn (endDate.getTime() - startDate.getTime()) / MSEC_TO_HOUR / HALF_HOUR_TO_MIN;\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst scrollY = getStartY(new Date());\r\n\t\tcontainerRef.current?.scrollTo(0, scrollY * LINE_SPACE_PX - EXTRA_SPACE_PX);\r\n\r\n\t\tconst timer = setInterval(() => {\r\n\t\t\tsetTime(new Date());\r\n\t\t}, 10000);\r\n\t\treturn () => {\r\n\t\t\tclearInterval(timer);\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Container ref={containerRef}>\r\n\t\t\t<TimeListGenerator\r\n\t\t\t\ttimeList={TIME_LIST}\r\n\t\t\t\trenderItem={(item) => (\r\n\t\t\t\t\t<div key={uuidv4()}>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t{item.text} {item.hour}시\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t\t<DaysContainer>\r\n\t\t\t\t{[...Array(WEEK_NUMBER)].map((v, i) => (\r\n\t\t\t\t\t<DayContainer key={uuidv4()} focus={isTodayDate(dateInfo.weeklyStartDate, i)}>\r\n\t\t\t\t\t\t{[...Array(DAY_TIME_NUMBER)].map(() => (\r\n\t\t\t\t\t\t\t<TimeBlock key={uuidv4()} />\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t{schedules\r\n\t\t\t\t\t\t\t.filter((schedule) => isSameDate(dateInfo.weeklyStartDate, i, new Date(schedule.startDate)))\r\n\t\t\t\t\t\t\t.map((schedule) => (\r\n\t\t\t\t\t\t\t\t<ScheduleItem\r\n\t\t\t\t\t\t\t\t\tkey={schedule.scheduleId}\r\n\t\t\t\t\t\t\t\t\tschedule={schedule}\r\n\t\t\t\t\t\t\t\t\tstart={getStartY(new Date(schedule.startDate))}\r\n\t\t\t\t\t\t\t\t\tlen={getLenY(new Date(schedule.startDate), new Date(schedule.endDate))}\r\n\t\t\t\t\t\t\t\t\thandleModalOpen={handleModalOpen}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t</DayContainer>\r\n\t\t\t\t))}\r\n\t\t\t</DaysContainer>\r\n\t\t\t<CurrTimeLine start={getStartY(time)} />\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Schedule;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nexport const Container = styled.div`\r\n\tposition: absolute;\r\n\ttop: 2.5rem;\r\n\tleft: 4.2rem;\r\n\tright: 0;\r\n\tbottom: 0;\r\n\tbackground-color: ${ColorCode.BACKGROUND1};\r\n`;\r\n","import React from 'react';\r\nimport { DateInfoType, ScheduleType } from '@src/types/calendar';\r\nimport WeekHeader from './WeekHeader';\r\nimport WeekContent from './WeekContent';\r\nimport { Container } from './style';\r\n\r\ninterface Props {\r\n\tdateInfo: DateInfoType;\r\n\tschedules: ScheduleType[];\r\n\thandleModalOpen: () => void;\r\n}\r\n\r\nconst WeeklyCalendar: React.FC<Props> = ({ dateInfo, schedules, handleModalOpen }) => {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<WeekHeader dateInfo={dateInfo} />\r\n\t\t\t<WeekContent dateInfo={dateInfo} schedules={schedules} handleModalOpen={handleModalOpen} />\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default WeeklyCalendar;\r\n","import styled from 'styled-components';\r\nimport { ColorCode, Font } from '@utils/constants';\r\n\r\nexport const FormContainer = styled.form`\r\n\ttextarea {\r\n\t\tmargin: 1.5rem 0 1rem 0;\r\n\t\tborder: none;\r\n\t\twidth: 100%;\r\n\t\tfont-size: ${Font.SMALL};\r\n\t\tfont-family: inherit;\r\n\t\tresize: none;\r\n\t\tpadding: 0;\r\n\t\t:focus {\r\n\t\t\toutline: none;\r\n\t\t}\r\n\t}\r\n\tspan {\r\n\t\tfont-weight: bold;\r\n\t\tfont-size: ${Font.SMALL};\r\n\t}\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tmargin-bottom: 1.5rem;\r\n\tinput {\r\n\t\tmargin-left: 0.5rem;\r\n\t\tfont-size: 1.2rem;\r\n\t}\r\n`;\r\nexport const TimeContainer = styled.div`\r\n\twidth: 20rem;\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\tmargin-bottom: 1.5rem;\r\n\tinput {\r\n\t\twidth: 5rem;\r\n\t\tfont-family: inherit;\r\n\t\tfont-size: ${Font.SMALL};\r\n\t\tcursor: pointer;\r\n\t}\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n\tposition: absolute;\r\n\ttop: 1.5rem;\r\n\tright: 1.5rem;\r\n\tborder: transparent;\r\n\tbackground-color: transparent;\r\n\tpadding: 0;\r\n\tsvg {\r\n\t\tmargin-left: 1rem;\r\n\t\tcolor: ${ColorCode.LINE3};\r\n\t\tcursor: pointer;\r\n\t\twidth: 1.2rem;\r\n\t\theight: 1.2rem;\r\n\t}\r\n`;\r\n","import React from 'react';\r\n\r\nimport DatePicker from 'react-datepicker';\r\nimport { TimeContainer } from './style';\r\n\r\ninterface Props {\r\n\tselectedDate: Date;\r\n\tsetSelectedDate: (date: Date) => void;\r\n\tcheckModalMode: (mode: string) => boolean;\r\n\tselectedStartTime: Date;\r\n\tsetSelectedStartTime: (date: Date) => void;\r\n\tselectedEndTime: Date;\r\n\tsetSelectedEndTime: (date: Date) => void;\r\n}\r\n\r\nconst TimeInput: React.FC<Props> = ({\r\n\tselectedDate,\r\n\tsetSelectedDate,\r\n\tcheckModalMode,\r\n\tselectedStartTime,\r\n\tsetSelectedStartTime,\r\n\tselectedEndTime,\r\n\tsetSelectedEndTime,\r\n}) => {\r\n\treturn (\r\n\t\t<TimeContainer>\r\n\t\t\t<DatePicker\r\n\t\t\t\tselected={selectedDate}\r\n\t\t\t\tonChange={(date: Date) => setSelectedDate(date)}\r\n\t\t\t\treadOnly={checkModalMode('read')}\r\n\t\t\t/>\r\n\t\t\t<DatePicker\r\n\t\t\t\tselected={selectedStartTime}\r\n\t\t\t\tonChange={(date: Date) => setSelectedStartTime(date)}\r\n\t\t\t\tshowTimeSelect\r\n\t\t\t\tshowTimeSelectOnly\r\n\t\t\t\ttimeIntervals={30}\r\n\t\t\t\ttimeCaption='Time'\r\n\t\t\t\tdateFormat='h:mm aa'\r\n\t\t\t\treadOnly={checkModalMode('read')}\r\n\t\t\t/>\r\n\t\t\t<span>&nbsp;~&nbsp;</span>\r\n\t\t\t<DatePicker\r\n\t\t\t\tselected={selectedEndTime}\r\n\t\t\t\tonChange={(date: Date) => setSelectedEndTime(date)}\r\n\t\t\t\tshowTimeSelect\r\n\t\t\t\tshowTimeSelectOnly\r\n\t\t\t\ttimeIntervals={30}\r\n\t\t\t\ttimeCaption='Time'\r\n\t\t\t\tdateFormat='h:mm aa'\r\n\t\t\t\treadOnly={checkModalMode('read')}\r\n\t\t\t/>\r\n\t\t</TimeContainer>\r\n\t);\r\n};\r\n\r\nexport default TimeInput;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { useRecoilState, useRecoilValue } from 'recoil';\r\nimport moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { ScheduleType, ScheduleReqType, ScheduleModalType } from '@src/types/calendar';\r\nimport { ModalMode, ModalSchedule } from '@stores/calendar';\r\nimport { createNewSchedule, deleteSchedule, updateSchedule } from '@apis/schedule';\r\nimport { PrimaryPalette } from '@utils/constants';\r\nimport { dateToFormatString, isNum } from '@utils/calendar';\r\n\r\nimport { FaTrashAlt, FaPencilAlt } from 'react-icons/fa';\r\nimport { ColorCircle } from '@components/common/ColorPicker/style';\r\nimport { ColorPicker, DropDown, Modal } from '@components/common';\r\nimport TimeInput from './TimeInput';\r\nimport { FormContainer, TitleContainer, ButtonContainer } from './style';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\ninterface Props {\r\n\thandleModalClose: () => void;\r\n\taddSchedule: (newSchedules: ScheduleType[]) => void;\r\n\tdeleteScheduleById: (id: number) => void;\r\n\tupdateScheduleById: (id: number, newSchedule: ScheduleType) => void;\r\n\tteamId: number;\r\n}\r\n\r\nconst CalendarModal: React.FC<Props> = ({\r\n\thandleModalClose,\r\n\taddSchedule,\r\n\tdeleteScheduleById,\r\n\tupdateScheduleById,\r\n\tteamId,\r\n}) => {\r\n\tconst repeatOptions: string[] = ['반복안함', '매일반복', '매주반복', '매월반복'];\r\n\r\n\tconst { scheduleId } = useRecoilValue(ModalSchedule);\r\n\tconst modalSchedule = useRecoilValue(ModalSchedule);\r\n\tconst [modalMode, setModalMode] = useRecoilState(ModalMode);\r\n\r\n\tconst [selectedColor, setSelectedColor] = useState(0);\r\n\tconst [selectedRepeat, setSelectedRepeat] = useState(0);\r\n\tconst [selectedDate, setSelectedDate] = useState(new Date());\r\n\tconst [selectedStartTime, setSelectedStartTime] = useState(new Date());\r\n\tconst [selectedEndTime, setSelectedEndTime] = useState(new Date());\r\n\tconst [defaultTitle, setDefaultTitle] = useState('');\r\n\tconst [defaultContent, setDefaultContent] = useState('');\r\n\tconst [selectedRepeatCount, setSelectedRepeatCount] = useState(0);\r\n\r\n\tconst titleRef = useRef<HTMLInputElement>(null);\r\n\tconst contentRef = useRef<HTMLTextAreaElement>(null);\r\n\r\n\tconst getScheduleData = (): ScheduleReqType => {\r\n\t\treturn {\r\n\t\t\tcolor: selectedColor,\r\n\t\t\ttitle: titleRef.current?.value,\r\n\t\t\tstart_date: moment(\r\n\t\t\t\t`${dateToFormatString(selectedDate, 'YYYY-MM-DD')} ${dateToFormatString(selectedStartTime, 'HH:mm')}`,\r\n\t\t\t\t'YYYY-MM-DD hh:mm',\r\n\t\t\t).toString(),\r\n\t\t\tend_date: moment(\r\n\t\t\t\t`${dateToFormatString(selectedDate, 'YYYY-MM-DD')} ${dateToFormatString(selectedEndTime, 'HH:mm')}`,\r\n\t\t\t\t'YYYY-MM-DD hh:mm',\r\n\t\t\t).toString(),\r\n\t\t\trepeat_option: selectedRepeat,\r\n\t\t\trepeat_count: isNum(selectedRepeatCount) ? selectedRepeatCount : 1,\r\n\t\t\tcontent: contentRef.current?.value,\r\n\t\t};\r\n\t};\r\n\r\n\tconst validateSchedule = (newScheduleData: ScheduleReqType): boolean => {\r\n\t\tconst { title, content, start_date, end_date } = newScheduleData;\r\n\t\tif (!title) {\r\n\t\t\ttoast.warn('😮 제목을 입력해주세요!');\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (!content) {\r\n\t\t\ttoast.warn('😮 설명을 입력해주세요!');\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (new Date(start_date) >= new Date(end_date)) {\r\n\t\t\ttoast.warn('😮 시작과 끝 시간이 올바르지 않습니다!');\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t};\r\n\r\n\tconst checkModalMode = (mode: string): boolean => modalMode.mode === mode;\r\n\r\n\tconst handleSubmit = async () => {\r\n\t\tconst newScheduleData = getScheduleData();\r\n\t\tif (validateSchedule(newScheduleData)) {\r\n\t\t\tif (checkModalMode('create')) {\r\n\t\t\t\tconst newSchedules = await createNewSchedule(teamId, newScheduleData);\r\n\t\t\t\taddSchedule(newSchedules);\r\n\t\t\t} else {\r\n\t\t\t\tnewScheduleData.schedule_id = scheduleId;\r\n\t\t\t\tconst newSchedule = await updateSchedule(scheduleId, newScheduleData);\r\n\t\t\t\tif (newSchedule) updateScheduleById(scheduleId, newSchedule);\r\n\t\t\t}\r\n\t\t\thandleModalClose();\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleDeleteButtonClick = async (e: React.MouseEvent) => {\r\n\t\te.preventDefault();\r\n\t\tawait deleteSchedule(scheduleId);\r\n\t\tdeleteScheduleById(scheduleId);\r\n\t\thandleModalClose();\r\n\t};\r\n\r\n\tconst changeUpdateMode = async (e: React.MouseEvent) => {\r\n\t\te.preventDefault();\r\n\t\tsetModalMode({ mode: 'update' });\r\n\t};\r\n\r\n\tconst checkValidateRepeatCount = (e: React.FormEvent<HTMLInputElement>) => {\r\n\t\tif (selectedRepeat === 0 || !isNum(e.currentTarget.value)) {\r\n\t\t\te.currentTarget.value = '';\r\n\t\t\tsetSelectedRepeatCount(0);\r\n\t\t} else {\r\n\t\t\tsetSelectedRepeatCount(Number(e.currentTarget.value));\r\n\t\t}\r\n\t};\r\n\r\n\tconst setScheduleState = ({ title, color, repeatOption, startDate, endDate, content }: ScheduleModalType) => {\r\n\t\tsetSelectedColor(color);\r\n\t\tsetSelectedRepeat(repeatOption);\r\n\t\tsetSelectedDate(new Date(startDate));\r\n\t\tsetSelectedStartTime(new Date(startDate));\r\n\t\tsetSelectedEndTime(new Date(endDate));\r\n\t\tsetDefaultTitle(title);\r\n\t\tsetDefaultContent(content);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst { title, color, repeatOption, startDate, endDate, content } = modalSchedule;\r\n\t\tsetScheduleState({ title, color, repeatOption, startDate, endDate, content });\r\n\t}, [modalMode, modalSchedule]);\r\n\r\n\treturn (\r\n\t\t<Modal handleModalClose={handleModalClose} handleSubmit={handleSubmit} removeSubmitButton={checkModalMode('read')}>\r\n\t\t\t<FormContainer>\r\n\t\t\t\t<TitleContainer>\r\n\t\t\t\t\t{checkModalMode('read') ? (\r\n\t\t\t\t\t\t<ColorCircle color={PrimaryPalette[selectedColor]} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<ColorPicker selectedColor={selectedColor} setSelectedColor={setSelectedColor} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tref={titleRef}\r\n\t\t\t\t\t\tdefaultValue={defaultTitle}\r\n\t\t\t\t\t\tplaceholder='제목을 입력해 주세요.'\r\n\t\t\t\t\t\treadOnly={checkModalMode('read')}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</TitleContainer>\r\n\t\t\t\t<TimeInput\r\n\t\t\t\t\tselectedDate={selectedDate}\r\n\t\t\t\t\tsetSelectedDate={setSelectedDate}\r\n\t\t\t\t\tcheckModalMode={checkModalMode}\r\n\t\t\t\t\tselectedStartTime={selectedStartTime}\r\n\t\t\t\t\tsetSelectedStartTime={setSelectedStartTime}\r\n\t\t\t\t\tselectedEndTime={selectedEndTime}\r\n\t\t\t\t\tsetSelectedEndTime={setSelectedEndTime}\r\n\t\t\t\t/>\r\n\t\t\t\t{!checkModalMode('create') ? (\r\n\t\t\t\t\t<span>{repeatOptions[selectedRepeat]}</span>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<DropDown\r\n\t\t\t\t\t\t\toptions={repeatOptions}\r\n\t\t\t\t\t\t\tselectedOption={repeatOptions[selectedRepeat]}\r\n\t\t\t\t\t\t\tsetSelectedOption={setSelectedRepeat}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\tonChange={checkValidateRepeatCount}\r\n\t\t\t\t\t\t\tplaceholder='반복횟수'\r\n\t\t\t\t\t\t\treadOnly={selectedRepeat === 0}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tref={contentRef}\r\n\t\t\t\t\tdefaultValue={defaultContent}\r\n\t\t\t\t\treadOnly={checkModalMode('read')}\r\n\t\t\t\t\tplaceholder='설명을 입력해 주세요'\r\n\t\t\t\t/>\r\n\t\t\t\t{checkModalMode('read') && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<ButtonContainer>\r\n\t\t\t\t\t\t\t<FaPencilAlt onClick={changeUpdateMode} />\r\n\t\t\t\t\t\t\t<FaTrashAlt onClick={handleDeleteButtonClick} />\r\n\t\t\t\t\t\t</ButtonContainer>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</FormContainer>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default CalendarModal;\r\n","import styled from 'styled-components';\r\n\r\nexport const Layout = styled.div`\r\n\tposition: relative;\r\n\theight: 100%;\r\n`;\r\n\r\nexport const MainContainer = styled.div`\r\n\tposition: absolute;\r\n\ttop: 3rem;\r\n\tleft: 0;\r\n\tright: 0;\r\n\tbottom: 0;\r\n\tdisplay: flex;\r\n`;\r\n\r\nexport const CalendarContainer = styled.div`\r\n\tflex-grow: 1;\r\n`;\r\n","import React from 'react';\r\n\r\nimport { DateInfoType, ScheduleType } from '@src/types/calendar';\r\n\r\nimport { Header, Navbar } from '@components/common';\r\nimport CalendarHeader from '@components/Calendar/CalendarHeader';\r\nimport MonthlyCalendar from '@components/Calendar/MonthlyCalendar';\r\nimport WeeklyCalendar from '@components/Calendar/WeeklyCalendar';\r\nimport CalendarModal from '@components/Calendar/CalendarModal';\r\nimport { Layout, MainContainer, CalendarContainer } from './style';\r\n\r\ninterface Props {\r\n\tteamId: number;\r\n\tschedules: ScheduleType[];\r\n\tisMonthly: boolean;\r\n\tdateInfo: DateInfoType;\r\n\tisModalVisible: boolean;\r\n\taddSchedule: (newSchedules: ScheduleType[]) => void;\r\n\tdeleteScheduleById: (id: number) => void;\r\n\tupdateScheduleById: (id: number, newSchedule: ScheduleType) => void;\r\n\thandleModalOpen: () => void;\r\n\thandleModalClose: () => void;\r\n\tchangeToMonthly: () => void;\r\n\tchangeToWeekly: () => void;\r\n\tchangeToCurrDate: () => void;\r\n\tchangeToPrevDate: () => void;\r\n\tchangeToNextDate: () => void;\r\n}\r\n\r\nconst CalendarTemplate: React.FC<Props> = ({\r\n\tteamId,\r\n\tschedules,\r\n\tisMonthly,\r\n\tdateInfo,\r\n\tisModalVisible,\r\n\taddSchedule,\r\n\tdeleteScheduleById,\r\n\tupdateScheduleById,\r\n\thandleModalOpen,\r\n\thandleModalClose,\r\n\tchangeToMonthly,\r\n\tchangeToWeekly,\r\n\tchangeToCurrDate,\r\n\tchangeToPrevDate,\r\n\tchangeToNextDate,\r\n}) => {\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<Header />\r\n\t\t\t<MainContainer>\r\n\t\t\t\t<Navbar />\r\n\t\t\t\t<CalendarContainer>\r\n\t\t\t\t\t<CalendarHeader\r\n\t\t\t\t\t\tisMonthly={isMonthly}\r\n\t\t\t\t\t\tdateInfo={dateInfo}\r\n\t\t\t\t\t\tchangeToCurrDate={changeToCurrDate}\r\n\t\t\t\t\t\tchangeToPrevDate={changeToPrevDate}\r\n\t\t\t\t\t\tchangeToNextDate={changeToNextDate}\r\n\t\t\t\t\t\tchangeToMonthly={changeToMonthly}\r\n\t\t\t\t\t\tchangeToWeekly={changeToWeekly}\r\n\t\t\t\t\t\thandleModalOpen={handleModalOpen}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{isMonthly ? (\r\n\t\t\t\t\t\t<MonthlyCalendar dateInfo={dateInfo} schedules={schedules} handleModalOpen={handleModalOpen} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<WeeklyCalendar dateInfo={dateInfo} schedules={schedules} handleModalOpen={handleModalOpen} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</CalendarContainer>\r\n\t\t\t</MainContainer>\r\n\t\t\t{isModalVisible && (\r\n\t\t\t\t<CalendarModal\r\n\t\t\t\t\thandleModalClose={handleModalClose}\r\n\t\t\t\t\taddSchedule={addSchedule}\r\n\t\t\t\t\tdeleteScheduleById={deleteScheduleById}\r\n\t\t\t\t\tupdateScheduleById={updateScheduleById}\r\n\t\t\t\t\tteamId={teamId}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Layout>\r\n\t);\r\n};\r\nexport default CalendarTemplate;\r\n","import React, { useState, useEffect, useReducer } from 'react';\r\nimport { RouteComponentProps } from 'react-router';\r\n\r\nimport { getSchedules } from '@apis/schedule';\r\nimport { getFirstDate, getLastDate, getCurrDateInfo, getPrevDateInfo, getNextDateInfo } from '@utils/calendar';\r\nimport { ScheduleType, DateInfoType } from '@src/types/calendar';\r\n\r\nimport CalendarTemplate from '@templates/CalendarTemplate';\r\n\r\ntype SchedulesAction =\r\n\t| { type: 'FETCH'; newSchedules: ScheduleType[] }\r\n\t| { type: 'ADD'; newSchedules: ScheduleType[] }\r\n\t| { type: 'DELETE'; id: number }\r\n\t| { type: 'UPDATE'; id: number; newSchedule: ScheduleType };\r\n\r\nconst schedulesReducer = (schedules: ScheduleType[], action: SchedulesAction): ScheduleType[] => {\r\n\tswitch (action.type) {\r\n\t\tcase 'FETCH':\r\n\t\t\treturn [...action.newSchedules];\r\n\t\tcase 'ADD':\r\n\t\t\treturn [...schedules, ...action.newSchedules];\r\n\t\tcase 'DELETE':\r\n\t\t\treturn [...schedules.filter((schedule) => schedule.scheduleId !== action.id)];\r\n\t\tcase 'UPDATE':\r\n\t\t\treturn [...schedules.filter((schedule) => schedule.scheduleId !== action.id), action.newSchedule];\r\n\t\tdefault:\r\n\t\t\tthrow new Error();\r\n\t}\r\n};\r\n\r\ntype DateInfoAction =\r\n\t| { type: 'CURR_DATE' }\r\n\t| { type: 'PREV_DATE'; isMonthly: boolean }\r\n\t| { type: 'NEXT_DATE'; isMonthly: boolean };\r\n\r\nconst dateInfoReducer = (dateInfo: DateInfoType, action: DateInfoAction): DateInfoType => {\r\n\tswitch (action.type) {\r\n\t\tcase 'CURR_DATE':\r\n\t\t\treturn getCurrDateInfo();\r\n\t\tcase 'PREV_DATE':\r\n\t\t\treturn getPrevDateInfo(dateInfo.year, dateInfo.month, dateInfo.weeklyStartDate, action.isMonthly);\r\n\t\tcase 'NEXT_DATE':\r\n\t\t\treturn getNextDateInfo(dateInfo.year, dateInfo.month, dateInfo.weeklyStartDate, action.isMonthly);\r\n\t\tdefault:\r\n\t\t\tthrow new Error();\r\n\t}\r\n};\r\n\r\ninterface MatchParams {\r\n\tteamId: string;\r\n}\r\ntype Props = RouteComponentProps<MatchParams>;\r\n\r\nconst CalendarPage: React.FC<Props> = ({ match }) => {\r\n\tconst [schedules, dispatchSchedules] = useReducer(schedulesReducer, []);\r\n\tconst [dateInfo, dispatchDateInfo] = useReducer(dateInfoReducer, getCurrDateInfo());\r\n\tconst [isMonthly, setIsMonthly] = useState(false);\r\n\tconst [isModalVisible, setIsModalVisible] = useState(false);\r\n\tconst teamId = Number(match.params.teamId);\r\n\r\n\tconst fetchSchedules = async () => {\r\n\t\tconst scheduleList = await getSchedules(\r\n\t\t\tteamId,\r\n\t\t\tgetFirstDate(isMonthly, dateInfo),\r\n\t\t\tgetLastDate(isMonthly, dateInfo),\r\n\t\t);\r\n\t\tdispatchSchedules({ type: 'FETCH', newSchedules: scheduleList });\r\n\t};\r\n\r\n\tconst addSchedule = (newSchedules: ScheduleType[]) => dispatchSchedules({ type: 'ADD', newSchedules });\r\n\tconst deleteScheduleById = (id: number) => dispatchSchedules({ type: 'DELETE', id });\r\n\tconst updateScheduleById = (id: number, newSchedule: ScheduleType) =>\r\n\t\tdispatchSchedules({ type: 'UPDATE', id, newSchedule });\r\n\r\n\tconst changeToCurrDate = () => dispatchDateInfo({ type: 'CURR_DATE' });\r\n\tconst changeToPrevDate = () => dispatchDateInfo({ type: 'PREV_DATE', isMonthly });\r\n\tconst changeToNextDate = () => dispatchDateInfo({ type: 'NEXT_DATE', isMonthly });\r\n\r\n\tconst changeToMonthly = () => setIsMonthly(true);\r\n\tconst changeToWeekly = () => setIsMonthly(false);\r\n\r\n\tconst handleModalOpen = () => setIsModalVisible(true);\r\n\tconst handleModalClose = () => setIsModalVisible(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchSchedules();\r\n\t}, [dateInfo, isMonthly, teamId]);\r\n\r\n\treturn (\r\n\t\t<CalendarTemplate\r\n\t\t\tteamId={teamId}\r\n\t\t\tschedules={schedules}\r\n\t\t\tisMonthly={isMonthly}\r\n\t\t\tdateInfo={dateInfo}\r\n\t\t\tisModalVisible={isModalVisible}\r\n\t\t\taddSchedule={addSchedule}\r\n\t\t\tdeleteScheduleById={deleteScheduleById}\r\n\t\t\tupdateScheduleById={updateScheduleById}\r\n\t\t\tchangeToCurrDate={changeToCurrDate}\r\n\t\t\tchangeToPrevDate={changeToPrevDate}\r\n\t\t\tchangeToNextDate={changeToNextDate}\r\n\t\t\tchangeToMonthly={changeToMonthly}\r\n\t\t\tchangeToWeekly={changeToWeekly}\r\n\t\t\thandleModalOpen={handleModalOpen}\r\n\t\t\thandleModalClose={handleModalClose}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default CalendarPage;\r\n","import styled from 'styled-components';\r\n\r\nexport const UserHeaderContainer = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n`;\r\n\r\nexport const TeamName = styled.div`\r\n\tfont-size: 1.5rem;\r\n\tfont-weight: bold;\r\n\tmargin-left: 3rem;\r\n`;\r\n","import React from 'react';\r\nimport Thumbnail from '@components/Team/Cards/Thumbnail';\r\nimport { teamInfoSelector } from '@stores/team';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { UserHeaderContainer, TeamName } from './style';\r\n\r\ninterface Props {\r\n\tteamId: number;\r\n}\r\n\r\nconst UsersHeader: React.FC<Props> = ({ teamId }) => {\r\n\tconst teamInfo = useRecoilValue(teamInfoSelector(teamId));\r\n\treturn (\r\n\t\t<UserHeaderContainer>\r\n\t\t\t<Thumbnail team_id={teamInfo?.team_id} team_name={teamInfo?.team_name} />\r\n\t\t\t<TeamName>{teamInfo?.team_name}</TeamName>\r\n\t\t</UserHeaderContainer>\r\n\t);\r\n};\r\n\r\nexport default UsersHeader;\r\n","import styled from 'styled-components';\r\nimport { ColorCode, Font } from '@utils/constants';\r\n\r\nexport const InputContainer = styled.div`\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\t* {\r\n\t\tflex-shrink: 0;\r\n\t}\r\n`;\r\n\r\nexport const IconWrapper = styled.div`\r\n\tposition: relative;\r\n\tleft: -1.5rem;\r\n`;\r\n\r\nexport const SearchInput = styled.input`\r\n\twidth: 12rem;\r\n\tpadding: 0.5rem;\r\n\tborder-radius: 8px;\r\n\tborder: 1px solid ${ColorCode.BACKGROUND2};\r\n\tbox-shadow: 0px 2px 2px rgba(0, 0, 0, 0.1);\r\n\toutline: none;\r\n`;\r\n\r\nexport const UserWrapper = styled.div`\r\n\tbackground-color: ${ColorCode.WHITE};\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\tpadding: 0.5rem 0.7rem 0.5rem 0.5rem;\r\n\tborder-radius: 8px;\r\n\tbox-shadow: 0px 2px 2px rgba(0, 0, 0, 0.1);\r\n\tmargin: 1rem 0;\r\n\tfont-size: ${Font.SMALL};\r\n\tdiv {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t}\r\n`;\r\n\r\nexport const SearchUsersContainer = styled.div`\r\n\tmargin-top: 2rem;\r\n\th2 {\r\n\t\tfont-size: ${Font.LARGE};\r\n\t\tfont-weight: bold;\r\n\t\tmargin-bottom: 1.5rem;\r\n\t}\r\n`;\r\n\r\nexport const UserListContainer = styled.div`\r\n\tmargin-top: 2rem;\r\n\th3 {\r\n\t\tdisplay: flex;\r\n\t\tfont-weight: bold;\r\n\t\tfont-size: 1.2rem;\r\n\t\tpadding: 1rem 0;\r\n\t\tsvg {\r\n\t\t\tmargin-left: 0.5rem;\r\n\t\t\tcursor: pointer;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const LabelContainer = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\tpadding: 0 0.2rem;\r\n`;\r\n\r\nexport const Layout = styled.div``;\r\n\r\nexport const ButtonContainer = styled.div`\r\n\twidth: 22rem;\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n`;\r\n","import React from 'react';\r\nimport DropDown from '@src/components/common/DropDown';\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport { IoSettingsSharp } from 'react-icons/io5';\r\nimport { toast } from 'react-toastify';\r\nimport { SearchInput, IconWrapper, InputContainer, SearchUsersContainer, ButtonContainer } from './style';\r\n\r\ninterface Props {\r\n\thandleInput: (e: any) => void;\r\n\topenModal: (mode: string) => void;\r\n\tisAdmin: boolean;\r\n}\r\n\r\nconst SearchUsers: React.FC<Props> = ({ handleInput, openModal, isAdmin }) => {\r\n\tconst onSelect = (value: number) => {\r\n\t\tswitch (value) {\r\n\t\t\tcase 0:\r\n\t\t\t\topenModal('EXIT');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\topenModal('DELETE');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\topenModal('UPDATE');\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\ttoast('올바르지 않은 접근입니다');\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<SearchUsersContainer>\r\n\t\t\t<h2>구성원</h2>\r\n\t\t\t<InputContainer>\r\n\t\t\t\t<SearchInput type='text' placeholder='구성원 검색' onChange={handleInput} />\r\n\t\t\t\t<IconWrapper>\r\n\t\t\t\t\t<FaSearch />\r\n\t\t\t\t</IconWrapper>\r\n\t\t\t\t<ButtonContainer>\r\n\t\t\t\t\t<DropDown\r\n\t\t\t\t\t\toptions={isAdmin ? ['팀 나가기', '팀 삭제하기', '팀 정보수정'] : ['팀 나가기']}\r\n\t\t\t\t\t\tselectedOption={<IoSettingsSharp size='20' />}\r\n\t\t\t\t\t\tsetSelectedOption={onSelect}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ButtonContainer>\r\n\t\t\t</InputContainer>\r\n\t\t</SearchUsersContainer>\r\n\t);\r\n};\r\n\r\nexport default SearchUsers;\r\n","import React, { useState } from 'react';\r\nimport { ProfileIcon } from '@components/common';\r\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\r\nimport { selectedUser, teamUsersTrigger } from '@stores/team';\r\nimport { TeamUserType } from '@src/types/team';\r\nimport DropDown from '@components/common/DropDown';\r\nimport { patchRole } from '@apis/team';\r\nimport { RoleArr } from '@utils/constants';\r\nimport userState from '@stores/user';\r\nimport { UserWrapper } from './style';\r\n\r\ninterface Props {\r\n\tuser: TeamUserType;\r\n\tisAdmin: boolean;\r\n\tisOnline: (userId: number) => boolean;\r\n\topenModal: (mode: string) => void;\r\n\tteamId: number;\r\n}\r\n\r\nconst User: React.FC<Props> = ({ user, isAdmin, isOnline, openModal, teamId }) => {\r\n\tconst [selectedRepeat, setSelectedRepeat] = useState(user.role === '관리자' ? 0 : 1);\r\n\tconst setUser = useSetRecoilState(selectedUser);\r\n\tconst setTeamUsersTrigger = useSetRecoilState(teamUsersTrigger);\r\n\tconst myInfo = useRecoilValue(userState);\r\n\tconst openKickoutModal = () => {\r\n\t\tsetUser({ id: user.userId });\r\n\t\topenModal('KICKOUT');\r\n\t};\r\n\tconst onSelect = async (value: number) => {\r\n\t\tif (RoleArr[value] === user.role) return;\r\n\t\tif (value === 2) openKickoutModal();\r\n\t\telse {\r\n\t\t\tawait patchRole(setTeamUsersTrigger, user.userId, teamId, value);\r\n\t\t\tsetSelectedRepeat(value);\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<UserWrapper key={user.userId}>\r\n\t\t\t<div>\r\n\t\t\t\t<ProfileIcon\r\n\t\t\t\t\tname={user.name}\r\n\t\t\t\t\tcolor={user.color}\r\n\t\t\t\t\tstatus={isOnline(user.userId) ? 'online' : 'offline'}\r\n\t\t\t\t\twidth={2.5}\r\n\t\t\t\t\tisHover={false}\r\n\t\t\t\t/>\r\n\t\t\t\t<span>{user.name}</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t{isAdmin && myInfo.id !== user.userId ? (\r\n\t\t\t\t\t<DropDown\r\n\t\t\t\t\t\toptions={user.role === '관리자' ? RoleArr : [...RoleArr, '강퇴하기']}\r\n\t\t\t\t\t\tselectedOption={RoleArr[selectedRepeat]}\r\n\t\t\t\t\t\tsetSelectedOption={onSelect}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<span>{user.role}</span>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</UserWrapper>\r\n\t);\r\n};\r\n\r\nexport default User;\r\n","import React from 'react';\r\nimport { BsPlusCircle } from 'react-icons/bs';\r\nimport User from './User';\r\nimport { LabelContainer, UserListContainer } from './style';\r\n\r\ninterface Props {\r\n\tusers: any[];\r\n\tisAdmin: boolean;\r\n\tonlineUsers: { userId: number }[];\r\n\tteamId: number;\r\n\topenModal: (mode: string) => void;\r\n}\r\n\r\nconst UsersList: React.FC<Props> = ({ users, isAdmin, onlineUsers, teamId, openModal }) => {\r\n\tconst managerUsers: any[] = [];\r\n\tconst normalUsers: any[] = [];\r\n\tusers.forEach((e) => {\r\n\t\tif (e.role === '관리자') managerUsers.push(e);\r\n\t\telse normalUsers.push(e);\r\n\t});\r\n\r\n\tconst isOnline = (userId: number) => onlineUsers.find((user) => user.userId === userId) !== undefined;\r\n\r\n\treturn (\r\n\t\t<UserListContainer>\r\n\t\t\t<h3>소유자</h3>\r\n\t\t\t<LabelContainer>\r\n\t\t\t\t<span>이름</span>\r\n\t\t\t\t<span>역할</span>\r\n\t\t\t</LabelContainer>\r\n\t\t\t{managerUsers.map((e) => (\r\n\t\t\t\t<User key={e.userId} user={e} isAdmin={isAdmin} isOnline={isOnline} openModal={openModal} teamId={teamId} />\r\n\t\t\t))}\r\n\t\t\t<h3>\r\n\t\t\t\t<span>구성원</span>\r\n\t\t\t\t<BsPlusCircle onClick={() => openModal('INVITE')} />\r\n\t\t\t</h3>\r\n\t\t\t<LabelContainer>\r\n\t\t\t\t<span>이름</span>\r\n\t\t\t\t<span>역할</span>\r\n\t\t\t</LabelContainer>\r\n\t\t\t{normalUsers.map((e) => (\r\n\t\t\t\t<User key={e.userId} user={e} isAdmin={isAdmin} isOnline={isOnline} openModal={openModal} teamId={teamId} />\r\n\t\t\t))}\r\n\t\t</UserListContainer>\r\n\t);\r\n};\r\n\r\nexport default UsersList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport SearchUsers from '@components/Users/UserList/SearchUsers';\r\nimport UserList from '@components/Users/UserList/UserList';\r\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\r\nimport { modalState, teamUsersSelector } from '@stores/team';\r\nimport { TeamUserType } from '@src/types/team';\r\nimport userState from '@stores/user';\r\nimport { Layout } from './style';\r\n\r\ninterface Props {\r\n\tteamId: number;\r\n\tonlineUsers: { userId: number }[];\r\n}\r\n\r\nconst UserListIndex: React.FC<Props> = ({ teamId, onlineUsers }) => {\r\n\tconst myInfo = useRecoilValue(userState);\r\n\tconst teamUsers = useRecoilValue(teamUsersSelector(teamId));\r\n\tconst teamUserList: TeamUserType[] = Object.values(teamUsers);\r\n\tconst [filteredUsers, setFilteredUsers] = useState<TeamUserType[]>([]);\r\n\tconst [isAdmin, setIsAdmin] = useState(false);\r\n\tconst checkAdmin = () => teamUserList.find((user) => user.userId === myInfo.id)?.role === '관리자' || false;\r\n\tconst search = (value: string) =>\r\n\t\tteamUserList.filter((user) => user.name.toLowerCase().indexOf(value.toLowerCase()) !== -1);\r\n\tconst handleInput = (e: any) => setFilteredUsers(search(e.target.value));\r\n\r\n\tconst setModal = useSetRecoilState(modalState);\r\n\tconst openModal = (mode: string) => setModal({ isOpen: true, mode });\r\n\r\n\tuseEffect(() => {\r\n\t\tsetFilteredUsers(teamUserList);\r\n\t}, [teamUsers]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (myInfo.id !== -1) setIsAdmin(checkAdmin());\r\n\t}, [myInfo]);\r\n\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<SearchUsers handleInput={handleInput} openModal={openModal} isAdmin={isAdmin} />\r\n\t\t\t<UserList\r\n\t\t\t\tusers={filteredUsers}\r\n\t\t\t\tonlineUsers={onlineUsers}\r\n\t\t\t\tisAdmin={isAdmin}\r\n\t\t\t\tteamId={teamId}\r\n\t\t\t\topenModal={openModal}\r\n\t\t\t/>\r\n\t\t</Layout>\r\n\t);\r\n};\r\nexport default UserListIndex;\r\n","import { deleteTeam } from '@apis/team';\r\n\r\nexport const handleDeleteBtn = async (setLoadTrigger: any, teamId: number) => {\r\n\tawait deleteTeam(setLoadTrigger, teamId);\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tpadding: 2.5rem 0;\r\n`;\r\n\r\nexport const InputContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: 2rem;\r\n`;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSetRecoilState } from 'recoil';\r\nimport { teamListLoadTrigger } from '@stores/team';\r\nimport { handleDeleteBtn } from '@utils/team';\r\nimport { MODAL_THEME } from '@utils/constants';\r\nimport Modal from '@components/common/Modal';\r\nimport { Container } from '../style';\r\n\r\nexport interface Props {\r\n\thandleModalClose: () => void;\r\n\tteamId: number;\r\n}\r\n\r\nconst DeleteTeamModal: React.FC<Props> = ({ handleModalClose, teamId }) => {\r\n\tconst setLoadTrigger = useSetRecoilState(teamListLoadTrigger);\r\n\tconst history = useHistory();\r\n\tconst handleSubmit = () => {\r\n\t\thandleDeleteBtn(setLoadTrigger, teamId);\r\n\t\thandleModalClose();\r\n\t\thistory.push('/');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\ttheme={MODAL_THEME.NOTIFICATION}\r\n\t\t\thandleModalClose={handleModalClose}\r\n\t\t\thandleSubmit={handleSubmit}\r\n\t\t\tremoveSubmitButton={false}\r\n\t\t\ttitle='경고'\r\n\t\t\tsubmitBtnName='확인'\r\n\t\t\tcloseBtnName='취소'\r\n\t\t>\r\n\t\t\t<Container>정말 삭제하시겠습니까?</Container>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default DeleteTeamModal;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSetRecoilState } from 'recoil';\r\nimport { teamListLoadTrigger } from '@stores/team';\r\nimport Modal from '@components/common/Modal';\r\nimport { leaveTeam, readTeamUsers } from '@apis/team';\r\nimport { handleDeleteBtn } from '@utils/team';\r\nimport { MODAL_THEME } from '@utils/constants';\r\nimport { Container } from '../style';\r\n\r\nexport interface Props {\r\n\thandleModalClose: () => void;\r\n\tteamId: number;\r\n}\r\n\r\nconst ExitTeamModal: React.FC<Props> = ({ handleModalClose, teamId }) => {\r\n\tconst setLoadTrigger = useSetRecoilState(teamListLoadTrigger);\r\n\tconst history = useHistory();\r\n\tconst handleSubmit = async () => {\r\n\t\tconst result = await readTeamUsers(teamId);\r\n\t\tif (Object.keys(result).length === 1) handleDeleteBtn(setLoadTrigger, teamId);\r\n\t\telse await leaveTeam(setLoadTrigger, teamId);\r\n\t\thandleModalClose();\r\n\t\thistory.push('/');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\ttheme={MODAL_THEME.NOTIFICATION}\r\n\t\t\thandleModalClose={handleModalClose}\r\n\t\t\thandleSubmit={handleSubmit}\r\n\t\t\tremoveSubmitButton={false}\r\n\t\t\ttitle='경고'\r\n\t\t\tsubmitBtnName='확인'\r\n\t\t\tcloseBtnName='취소'\r\n\t\t>\r\n\t\t\t<Container>정말 탈퇴하시겠습니까?</Container>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default ExitTeamModal;\r\n","import React, { useRef } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { inviteUser } from '@apis/team';\r\nimport Modal from '@components/common/Modal';\r\nimport { Input } from '@components/common/Modal/style';\r\n\r\nexport interface Props {\r\n\tteamId: number;\r\n\thandleModalClose: () => void;\r\n}\r\n\r\nconst InviteUserModal: React.FC<Props> = ({ teamId, handleModalClose }) => {\r\n\tconst inputRef = useRef<HTMLInputElement>(null);\r\n\tconst handleSubmit = async () => {\r\n\t\tif (!inputRef.current) return;\r\n\t\tif (inputRef.current.value === '') {\r\n\t\t\ttoast.warn('😣 유저 닉네임을 입력해주세요!');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tawait inviteUser(teamId, inputRef.current.value);\r\n\t\thandleModalClose();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\ttitle='팀 초대'\r\n\t\t\thandleModalClose={handleModalClose}\r\n\t\t\thandleSubmit={handleSubmit}\r\n\t\t\tremoveSubmitButton={false}\r\n\t\t\tsubmitBtnName='초대'\r\n\t\t>\r\n\t\t\t<Input type='text' placeholder='초대할 유저 닉네임 입력' ref={inputRef} />\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default InviteUserModal;\r\n","import React from 'react';\r\nimport Modal from '@components/common/Modal';\r\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\r\nimport { selectedUser, teamUsersTrigger } from '@stores/team';\r\nimport { kickOut } from '@apis/team';\r\nimport { MODAL_THEME } from '@utils/constants';\r\nimport { Container } from '../style';\r\n\r\nexport interface Props {\r\n\thandleModalClose: () => void;\r\n\tteamId: number;\r\n}\r\n\r\nconst KickoutTeamModal: React.FC<Props> = ({ handleModalClose, teamId }) => {\r\n\tconst { id } = useRecoilValue(selectedUser);\r\n\tconst setTeamUsersTrigger = useSetRecoilState(teamUsersTrigger);\r\n\tconst handleSubmit = async () => {\r\n\t\thandleModalClose();\r\n\t\tawait kickOut(setTeamUsersTrigger, id, teamId);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\ttheme={MODAL_THEME.NOTIFICATION}\r\n\t\t\thandleModalClose={handleModalClose}\r\n\t\t\thandleSubmit={handleSubmit}\r\n\t\t\tremoveSubmitButton={false}\r\n\t\t\ttitle='경고'\r\n\t\t\tsubmitBtnName='확인'\r\n\t\t\tcloseBtnName='취소'\r\n\t\t>\r\n\t\t\t<Container>정말 강퇴하시겠습니까?</Container>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default KickoutTeamModal;\r\n","import React, { useState } from 'react';\r\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\r\nimport { teamInfoLoadTrigger, teamInfoSelector } from '@stores/team';\r\nimport { update } from '@apis/team';\r\nimport Modal from '@components/common/Modal';\r\nimport { Input, Textarea } from '@components/common/Modal/style';\r\nimport { InputContainer } from '../style';\r\n\r\nexport interface Props {\r\n\thandleModalClose: () => void;\r\n\tteamId: number;\r\n}\r\n\r\nconst UpdateTeamModal: React.FC<Props> = ({ handleModalClose, teamId }) => {\r\n\tconst teamInfo = useRecoilValue(teamInfoSelector(teamId));\r\n\tconst setLoadTrigger = useSetRecoilState(teamInfoLoadTrigger);\r\n\tconst [updateTitle, setUpdateTitle] = useState(teamInfo.team_name);\r\n\tconst [updateDesc, setUpdateDesc] = useState(teamInfo.team_desc);\r\n\tconst handleSubmit = async () => {\r\n\t\tawait update(setLoadTrigger, teamId, {\r\n\t\t\tteam_name: updateTitle,\r\n\t\t\tteam_desc: updateDesc,\r\n\t\t});\r\n\t\thandleModalClose();\r\n\t};\r\n\r\n\tconst onTitleInput = (e: React.ChangeEvent<HTMLInputElement>) => setUpdateTitle(e.currentTarget.value);\r\n\tconst onDescInput = (e: React.ChangeEvent<HTMLTextAreaElement>) => setUpdateDesc(e.currentTarget.value);\r\n\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\ttitle='팀 수정'\r\n\t\t\thandleModalClose={handleModalClose}\r\n\t\t\thandleSubmit={handleSubmit}\r\n\t\t\tremoveSubmitButton={false}\r\n\t\t\tsubmitBtnName='수정'\r\n\t\t>\r\n\t\t\t<InputContainer>\r\n\t\t\t\t<Input onChange={onTitleInput} value={updateTitle} placeholder='팀 이름을 입력하세요' />\r\n\t\t\t\t<Textarea onChange={onDescInput} value={updateDesc} placeholder='세부정보를 입력하세요' />\r\n\t\t\t</InputContainer>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default UpdateTeamModal;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nexport const MainContainer = styled.div`\r\n\tposition: absolute;\r\n\ttop: 3rem;\r\n\tleft: 0;\r\n\tright: 0;\r\n\tbottom: 0;\r\n\tdisplay: flex;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n\twidth: 100%;\r\n\tpadding: 2rem;\r\n\tbackground-color: ${ColorCode.BACKGROUND2};\r\n\toverflow-y: scroll;\r\n\tmin-width: 40rem;\r\n`;\r\n","import React from 'react';\r\nimport { Header, Navbar } from '@components/common';\r\nimport UsersHeader from '@components/Users/UsersHeader';\r\nimport UserList from '@components/Users/UserList';\r\nimport {\r\n\tExitTeamModal,\r\n\tUpdateTeamModal,\r\n\tDeleteTeamModal,\r\n\tKickoutTeamModal,\r\n\tInviteUserModal,\r\n} from '@components/Users/Modal';\r\nimport { useRecoilState } from 'recoil';\r\nimport { modalState } from '@stores/team';\r\nimport { MainContainer, ContentContainer } from './style';\r\n\r\ninterface Props {\r\n\tteamId: number;\r\n\tonlineUsers: { userId: number }[];\r\n}\r\n\r\nconst UsersTemplate: React.FC<Props> = ({ teamId, onlineUsers }) => {\r\n\tconst [modal, setModal] = useRecoilState<any>(modalState);\r\n\tconst closeModal = () => setModal({ isOpen: false, mode: modal.mode });\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Header />\r\n\t\t\t<MainContainer>\r\n\t\t\t\t<Navbar />\r\n\t\t\t\t<ContentContainer>\r\n\t\t\t\t\t<UsersHeader teamId={teamId} />\r\n\t\t\t\t\t<UserList teamId={teamId} onlineUsers={onlineUsers} />\r\n\t\t\t\t</ContentContainer>\r\n\t\t\t</MainContainer>\r\n\t\t\t{modal.mode === 'EXIT' && modal.isOpen && <ExitTeamModal handleModalClose={closeModal} teamId={teamId} />}\r\n\t\t\t{modal.mode === 'UPDATE' && modal.isOpen && <UpdateTeamModal handleModalClose={closeModal} teamId={teamId} />}\r\n\t\t\t{modal.mode === 'DELETE' && modal.isOpen && <DeleteTeamModal handleModalClose={closeModal} teamId={teamId} />}\r\n\t\t\t{modal.mode === 'KICKOUT' && modal.isOpen && <KickoutTeamModal handleModalClose={closeModal} teamId={teamId} />}\r\n\t\t\t{modal.mode === 'INVITE' && modal.isOpen && <InviteUserModal handleModalClose={closeModal} teamId={teamId} />}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default UsersTemplate;\r\n","import React, { useEffect, useContext, useState } from 'react';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { SocketContext } from '@utils/socketContext';\r\nimport UsersTemplate from '@templates/UsersTemplate';\r\nimport { UserIdType } from '@src/types/team';\r\n\r\ninterface MatchParams {\r\n\tteamId: string;\r\n}\r\n\r\ntype Props = RouteComponentProps<MatchParams>;\r\n\r\nconst UsersPage: React.FC<Props> = ({ match }) => {\r\n\tconst socketRef = useContext(SocketContext);\r\n\tconst [onlineUsers, setOnlineUsers] = useState<UserIdType[]>([]);\r\n\tconst teamId = Number(match.params.teamId);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (socketRef.current) {\r\n\t\t\tsocketRef.current.on('online users', (data: { onlineUsers: UserIdType[] }) => {\r\n\t\t\t\tsetOnlineUsers(data.onlineUsers);\r\n\t\t\t});\r\n\t\t\tsocketRef.current.emit('enter users page');\r\n\t\t}\r\n\t\treturn () => {\r\n\t\t\tsocketRef.current.emit('leave users page');\r\n\t\t\tsocketRef.current.off('online users');\r\n\t\t};\r\n\t}, [socketRef.current]);\r\n\r\n\treturn <UsersTemplate teamId={teamId} onlineUsers={onlineUsers} />;\r\n};\r\n\r\nexport default UsersPage;\r\n","import React from 'react';\r\nimport useImage from 'use-image';\r\nimport { KonvaEventObject } from 'konva/lib/Node';\r\nimport { Group, Rect, Image, Text } from 'react-konva';\r\nimport { ColorCode, POSTIT, PrimaryPalette, REM } from '@utils/constants';\r\nimport { IPostit, ISocketApi } from '@src/types/board';\r\nimport { Dispatch, SetStateAction } from 'hoist-non-react-statics/node_modules/@types/react';\r\n\r\nconst PADDING = 1 * REM;\r\nconst FONT_SIZE = {\r\n\tsmall: 0.8 * REM,\r\n\tmedium: 1 * REM,\r\n};\r\n\r\ntype Props = {\r\n\tpostit: IPostit;\r\n\tisMine: boolean;\r\n\tsocketApi: ISocketApi;\r\n\tgetUserNameById: (userId: number) => string;\r\n\tonDrag: (e: KonvaEventObject<DragEvent>) => void;\r\n\tonDragStart: (e: KonvaEventObject<DragEvent>) => void;\r\n\tonDragEnd: (e: KonvaEventObject<DragEvent>) => void;\r\n\tsetModalType: Dispatch<SetStateAction<string>>;\r\n\tsetClickedPostit: (postit: IPostit) => void;\r\n\thandleModalOpen: () => void;\r\n};\r\n\r\nconst onlyDate = (date: string) => {\r\n\tconst DateObj = new Date(date);\r\n\treturn `${DateObj.getFullYear()}. ${DateObj.getMonth() + 1}. ${DateObj.getDate()}`;\r\n};\r\n\r\nconst Title = ({ text, isUpdating }: { text: string; isUpdating: boolean }) => {\r\n\treturn (\r\n\t\t<Text\r\n\t\t\tfontSize={FONT_SIZE.medium}\r\n\t\t\tfontStyle='bold'\r\n\t\t\tx={PADDING}\r\n\t\t\ty={PADDING}\r\n\t\t\twidth={POSTIT.WIDTH - 2 * PADDING}\r\n\t\t\theight={2 * REM}\r\n\t\t\ttext={isUpdating ? '수정중...' : text}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nconst Content = ({ text, isUpdating, userName }: { text: string; isUpdating: boolean; userName: string }) => {\r\n\treturn (\r\n\t\t<Text\r\n\t\t\tfontSize={FONT_SIZE.medium}\r\n\t\t\tx={PADDING}\r\n\t\t\ty={PADDING + 2 * REM}\r\n\t\t\twidth={POSTIT.WIDTH - 2 * PADDING}\r\n\t\t\theight={POSTIT.HEIGHT - 2 * PADDING}\r\n\t\t\ttext={isUpdating ? `${userName}님이 수정중입니다.` : text}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nconst Footer = ({ createdBy, createdAt, updatedBy, updatedAt }: { [key: string]: string }) => {\r\n\treturn (\r\n\t\t<Group y={POSTIT.WIDTH - 2 * FONT_SIZE.small - 0.5 * PADDING}>\r\n\t\t\t<Text\r\n\t\t\t\tfontSize={FONT_SIZE.small}\r\n\t\t\t\twidth={POSTIT.WIDTH - 0.5 * PADDING}\r\n\t\t\t\theight={FONT_SIZE.small}\r\n\t\t\t\tfill={ColorCode.GRAY}\r\n\t\t\t\twrap='none'\r\n\t\t\t\talign='right'\r\n\t\t\t\ttext={`작성자 ${createdBy} | ${onlyDate(createdAt)}`}\r\n\t\t\t/>\r\n\t\t\t<Text\r\n\t\t\t\tfontSize={FONT_SIZE.small}\r\n\t\t\t\twidth={POSTIT.WIDTH - 0.5 * PADDING}\r\n\t\t\t\theight={FONT_SIZE.small}\r\n\t\t\t\ty={FONT_SIZE.small}\r\n\t\t\t\tfill={ColorCode.GRAY}\r\n\t\t\t\twrap='none'\r\n\t\t\t\talign='right'\r\n\t\t\t\ttext={`최근 수정 ${updatedBy} | ${onlyDate(updatedAt)}`}\r\n\t\t\t/>\r\n\t\t</Group>\r\n\t);\r\n};\r\n\r\nconst Menu = ({ handleUpdateModalOpen }: { handleUpdateModalOpen: () => void }) => {\r\n\tconst [pencilIcon] = useImage('/images/pencil-square.svg');\r\n\treturn (\r\n\t\t<Image\r\n\t\t\timage={pencilIcon}\r\n\t\t\tx={POSTIT.WIDTH - 2 * PADDING}\r\n\t\t\ty={PADDING}\r\n\t\t\twidth={1.3 * REM}\r\n\t\t\theight={1.3 * REM}\r\n\t\t\topacity={0.5}\r\n\t\t\tonClick={handleUpdateModalOpen}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nconst Postit: React.FC<Props> = ({\r\n\tpostit,\r\n\tisMine,\r\n\tsocketApi,\r\n\tgetUserNameById,\r\n\tonDrag,\r\n\tonDragStart,\r\n\tonDragEnd,\r\n\tsetModalType,\r\n\tsetClickedPostit,\r\n\thandleModalOpen,\r\n}) => {\r\n\tconst handleUpdateModalOpen = () => {\r\n\t\tif (postit.whoIsUpdating === -1 && postit.whoIsDragging === -1) {\r\n\t\t\tsetModalType('update');\r\n\t\t\tsocketApi.updateStartPostit(postit.id);\r\n\t\t\tsetClickedPostit(postit);\r\n\t\t\thandleModalOpen();\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<Group\r\n\t\t\tid={`${postit.id}`}\r\n\t\t\tx={postit.x * window.innerWidth}\r\n\t\t\ty={postit.y * window.innerHeight}\r\n\t\t\tonDragMove={onDrag}\r\n\t\t\tonDragStart={onDragStart}\r\n\t\t\tonDragEnd={onDragEnd}\r\n\t\t\tscaleX={postit.whoIsDragging !== -1 ? 1.05 : 1}\r\n\t\t\tscaleY={postit.whoIsDragging !== -1 ? 1.05 : 1}\r\n\t\t\tdraggable={(postit.whoIsDragging === -1 || isMine) && postit.whoIsUpdating === -1}\r\n\t\t\topacity={postit.whoIsUpdating !== -1 ? 0.2 : 1}\r\n\t\t>\r\n\t\t\t<Rect\r\n\t\t\t\twidth={POSTIT.WIDTH}\r\n\t\t\t\theight={POSTIT.WIDTH}\r\n\t\t\t\tfill={PrimaryPalette[postit.color]}\r\n\t\t\t\tstroke={ColorCode.PRIMARY1}\r\n\t\t\t\tstrokeWidth={isMine ? 1 : 0}\r\n\t\t\t\tshadowOffsetX={4}\r\n\t\t\t\tshadowOffsetY={4}\r\n\t\t\t\tshadowOpacity={postit.whoIsUpdating !== -1 ? 0 : 0.25}\r\n\t\t\t\tshadowBlur={4}\r\n\t\t\t/>\r\n\t\t\t<Title text={postit.title} isUpdating={postit.whoIsUpdating !== -1} />\r\n\t\t\t<Content\r\n\t\t\t\ttext={postit.content}\r\n\t\t\t\tisUpdating={postit.whoIsUpdating !== -1}\r\n\t\t\t\tuserName={postit.whoIsUpdating !== -1 ? getUserNameById(postit.whoIsUpdating) : ''}\r\n\t\t\t/>\r\n\t\t\t<Footer\r\n\t\t\t\tcreatedBy={getUserNameById(postit.createdBy)}\r\n\t\t\t\tcreatedAt={postit.createdAt}\r\n\t\t\t\tupdatedBy={getUserNameById(postit.updatedBy)}\r\n\t\t\t\tupdatedAt={postit.updatedAt}\r\n\t\t\t/>\r\n\t\t\t{postit.whoIsUpdating === -1 && <Menu handleUpdateModalOpen={handleUpdateModalOpen} />}\r\n\t\t</Group>\r\n\t);\r\n};\r\n\r\nexport default Postit;\r\n","import React from 'react';\r\nimport { Stage, Layer } from 'react-konva';\r\nimport { KonvaEventObject } from 'konva/lib/Node';\r\nimport { useRecoilValue } from 'recoil';\r\nimport userState from '@src/stores/user';\r\nimport { CANVAS } from '@utils/constants';\r\nimport { IPostit, ISocketApi } from '@src/types/board';\r\nimport { Dispatch, SetStateAction } from 'hoist-non-react-statics/node_modules/@types/react';\r\nimport Postit from '../Postit';\r\n\r\ninterface Props {\r\n\tpostits: IPostit[];\r\n\tsocketApi: ISocketApi;\r\n\tgetUserNameById: (userId: number) => string;\r\n\thandleDrag: (e: KonvaEventObject<DragEvent>) => void;\r\n\thandleDragStart: (e: KonvaEventObject<DragEvent>) => void;\r\n\thandleDragEnd: (e: KonvaEventObject<DragEvent>) => void;\r\n\tsetModalType: Dispatch<SetStateAction<string>>;\r\n\tsetClickedPostit: (postit: IPostit) => void;\r\n\thandleModalOpen: () => void;\r\n}\r\n\r\nconst Canvas: React.FC<Props> = ({\r\n\tpostits,\r\n\tsocketApi,\r\n\tgetUserNameById,\r\n\thandleDrag,\r\n\thandleDragStart,\r\n\thandleDragEnd,\r\n\tsetModalType,\r\n\tsetClickedPostit,\r\n\thandleModalOpen,\r\n}) => {\r\n\tconst userId = useRecoilValue(userState).id;\r\n\treturn (\r\n\t\t<Stage width={CANVAS.WIDTH} height={CANVAS.HEIGHT}>\r\n\t\t\t<Layer>\r\n\t\t\t\t{postits &&\r\n\t\t\t\t\tpostits.map((postit) => (\r\n\t\t\t\t\t\t<Postit\r\n\t\t\t\t\t\t\tkey={postit.id}\r\n\t\t\t\t\t\t\tpostit={postit}\r\n\t\t\t\t\t\t\tsocketApi={socketApi}\r\n\t\t\t\t\t\t\tisMine={userId === postit.whoIsDragging}\r\n\t\t\t\t\t\t\tonDrag={handleDrag}\r\n\t\t\t\t\t\t\tonDragStart={handleDragStart}\r\n\t\t\t\t\t\t\tonDragEnd={handleDragEnd}\r\n\t\t\t\t\t\t\tsetModalType={setModalType}\r\n\t\t\t\t\t\t\tsetClickedPostit={setClickedPostit}\r\n\t\t\t\t\t\t\thandleModalOpen={handleModalOpen}\r\n\t\t\t\t\t\t\tgetUserNameById={getUserNameById}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t</Layer>\r\n\t\t</Stage>\r\n\t);\r\n};\r\n\r\nexport default Canvas;\r\n","import styled from 'styled-components';\r\nimport { ColorCode } from '@utils/constants';\r\n\r\nexport const Input = styled.input`\r\n\tfont-size: 1rem;\r\n\tfont-family: Noto Sans KR;\r\n\tfont-weight: bold;\r\n\tborder: none;\r\n\tborder-bottom: 1px solid ${ColorCode.GRAY};\r\n`;\r\n\r\nexport const Textarea = styled.textarea`\r\n\tfont-size: 1rem;\r\n\tfont-family: Noto Sans KR;\r\n\tresize: none;\r\n\tmin-height: 12rem;\r\n\tmax-height: 12rem;\r\n\tmin-width: 100%;\r\n\tmax-width: 100%;\r\n\tborder: none;\r\n\t&:focus-visible {\r\n\t\toutline: none;\r\n\t}\r\n`;\r\n\r\nexport const Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tgap: 1rem;\r\n\twidth: 100%;\r\n\theight: 16rem;\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tgap: 0.5rem;\r\n`;\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport userState from '@stores/user';\r\nimport { useRecoilValue } from 'recoil';\r\nimport Modal from '@components/common/Modal';\r\nimport ColorPicker from '@components/common/ColorPicker';\r\nimport { IPostit, ISocketApi } from '@src/types/board';\r\nimport { Container, Input, Textarea, TitleContainer } from './style';\r\n\r\nexport interface Props {\r\n\tsocketApi: ISocketApi;\r\n\tmodalType: string;\r\n\tclickedPostit: IPostit | undefined;\r\n\thandleModalClose: () => void;\r\n}\r\n\r\nconst CreatePostitModal: React.FC<Props> = ({ socketApi, modalType, clickedPostit, handleModalClose }) => {\r\n\tconst inputRef = useRef<HTMLInputElement>(null);\r\n\tconst textareaRef = useRef<HTMLTextAreaElement>(null);\r\n\tconst user = useRecoilValue(userState);\r\n\tconst [color, setColor] = useState<number>(0);\r\n\r\n\tconst makePostitObj = (modalType: string, title: string, content: string) => {\r\n\t\tif (modalType === 'update' && clickedPostit) {\r\n\t\t\tconst updatedPostit = clickedPostit;\r\n\t\t\tupdatedPostit.id = Number(updatedPostit.id);\r\n\t\t\tupdatedPostit.title = title;\r\n\t\t\tupdatedPostit.color = color;\r\n\t\t\tupdatedPostit.content = content;\r\n\t\t\tupdatedPostit.updatedBy = user.id;\r\n\t\t\tupdatedPostit.whoIsUpdating = -1;\r\n\t\t\treturn updatedPostit;\r\n\t\t}\r\n\t\t// if (modalType === 'create')\r\n\t\treturn {\r\n\t\t\ttitle,\r\n\t\t\tcolor,\r\n\t\t\tcontent,\r\n\t\t\tcreatedBy: user.id,\r\n\t\t\tupdatedBy: user.id,\r\n\t\t};\r\n\t};\r\n\r\n\tconst handleSubmit = () => {\r\n\t\tif (inputRef.current && textareaRef.current) {\r\n\t\t\tconst title = inputRef.current.value;\r\n\t\t\tconst content = textareaRef.current.value;\r\n\t\t\tconst postit = makePostitObj(modalType, title, content);\r\n\t\t\t// 포스트잇 객체, 요청 유저 정보, 팀 아이디\r\n\t\t\tif (modalType === 'create') socketApi.createNewPostit(postit);\r\n\t\t\telse if (modalType === 'update') socketApi.updateEndPostit(postit);\r\n\t\t\thandleModalClose();\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleClose = () => {\r\n\t\tif (modalType === 'update' && clickedPostit) socketApi.updateEndPostit({ id: clickedPostit.id });\r\n\t\thandleModalClose();\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (modalType === 'update' && clickedPostit) {\r\n\t\t\tsetColor(clickedPostit.color);\r\n\t\t}\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\thandleModalClose={handleClose}\r\n\t\t\thandleSubmit={handleSubmit}\r\n\t\t\tremoveSubmitButton={false}\r\n\t\t\tsubmitBtnName={modalType === 'create' ? '생성' : '수정'}\r\n\t\t>\r\n\t\t\t<Container>\r\n\t\t\t\t<TitleContainer>\r\n\t\t\t\t\t<ColorPicker selectedColor={color} setSelectedColor={setColor} />\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tref={inputRef}\r\n\t\t\t\t\t\tdefaultValue={modalType === 'update' && clickedPostit ? clickedPostit.title : ''}\r\n\t\t\t\t\t\tplaceholder='제목을 입력하세요'\r\n\t\t\t\t\t/>\r\n\t\t\t\t</TitleContainer>\r\n\t\t\t\t<Textarea\r\n\t\t\t\t\tref={textareaRef}\r\n\t\t\t\t\tdefaultValue={modalType === 'update' && clickedPostit ? clickedPostit.content : ''}\r\n\t\t\t\t\tplaceholder='내용을 입력하세요'\r\n\t\t\t\t/>\r\n\t\t\t</Container>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default CreatePostitModal;\r\n","import { ColorCode, Font } from '@utils/constants';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst floatAnimation = keyframes`\r\n\t0% {\r\n\t\topacity: 0;\r\n\t}\r\n\t100% {\r\n\t\topacity: 1;\r\n\t}\r\n`;\r\n\r\nexport const Container = styled.div`\r\n\tposition: absolute;\r\n\twidth: 100%;\r\n\theight: 10%;\r\n\tbottom: 0;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tbackground-color: rgba(0, 0, 0, 0.45);\r\n\tfont-size: ${Font.LARGE};\r\n\tgap: 0.5rem;\r\n\tanimation: ${floatAnimation} 0.2s ease-out 1;\r\n\tcolor: ${ColorCode.WHITE};\r\n\t&:hover {\r\n\t\tcolor: ${ColorCode.ERROR};\r\n\t\tcursor: grab;\r\n\t\tspan:before {\r\n\t\t\tcontent: '포스트잇 삭제';\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const Text = styled.span`\r\n\t&:before {\r\n\t\tcontent: '이 영역에 포스트잇을 놓을 경우 삭제할 수 있습니다.';\r\n\t}\r\n`;\r\n","import React from 'react';\r\nimport { RiDeleteBin6Line } from 'react-icons/ri';\r\nimport { Container, Text } from './style';\r\n\r\nconst DeleteArea: React.FC = () => {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<RiDeleteBin6Line />\r\n\t\t\t<Text />\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default DeleteArea;\r\n","import { ColorCode } from '@utils/constants';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst upDownAnimation = keyframes`\r\n\t0% {\r\n\t\ttransform: translateY(-0.5rem);\r\n\t}\r\n\t100% {\r\n\t\ttransform: translateY(0);\r\n\t}\r\n`;\r\n\r\nexport const Container = styled.div`\r\n\tposition: fixed;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: flex-end;\r\n\talign-items: center;\r\n\tbottom: 0;\r\n\tright: 5rem;\r\n\twidth: 17rem;\r\n\theight: calc(6rem + 8px);\r\n\toverflow: hidden;\r\n\tcursor: grab;\r\n\tcolor: ${ColorCode.PLACEHOLDER};\r\n\t&:hover {\r\n\t\tdiv {\r\n\t\t\tbottom: -4rem;\r\n\t\t}\r\n\t}\r\n\tsvg {\r\n\t\tposition: absolute;\r\n\t\tbottom: 2.5rem;\r\n\t\ttransition: all 0.1s ease-in-out;\r\n\t\tanimation: ${upDownAnimation} 0.5s ease-in-out infinite alternate;\r\n\t}\r\n\tfont-size: 1.5rem;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n\tdisplay: flex;\r\n\tposition: absolute;\r\n\tbottom: -8rem;\r\n\twidth: 16rem;\r\n\theight: 10rem;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tfont-size: 1.5rem;\r\n\tcolor: ${ColorCode.GRAY};\r\n\tbackground-color: ${ColorCode.YELLOW};\r\n\tbox-shadow: 4px -3px 8px rgba(0, 0, 0, 0.25);\r\n\tspan {\r\n\t\tmargin-bottom: 1rem;\r\n\t}\r\n\tcursor: pointer;\r\n\ttransition: all 0.1s ease-in-out;\r\n`;\r\n","import React from 'react';\r\nimport { BiMessageAltAdd } from 'react-icons/bi';\r\nimport { Wrapper, Container } from './style';\r\n\r\ninterface Props {\r\n\tsetModalType: (type: string) => void;\r\n\thandleModalOpen: () => void;\r\n}\r\n\r\nconst CreateButton: React.FC<Props> = ({ setModalType, handleModalOpen }) => {\r\n\tconst handleClick = () => {\r\n\t\tsetModalType('create');\r\n\t\thandleModalOpen();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<BiMessageAltAdd />\r\n\t\t\t<Wrapper onClick={handleClick}>\r\n\t\t\t\t<span>새 포스트잇 생성</span>\r\n\t\t\t</Wrapper>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default CreateButton;\r\n","import styled from 'styled-components';\r\nimport { HEADER } from '@utils/constants';\r\n\r\nexport const Layout = styled.div`\r\n\tposition: relative;\r\n\theight: 100%;\r\n`;\r\n\r\nexport const MainContainer = styled.div`\r\n\tdisplay: flex;\r\n\tcursor: grab;\r\n\theight: calc(100% - ${HEADER.HEIGHT}px);\r\n`;\r\n","import React from 'react';\r\nimport { KonvaEventObject } from 'konva/lib/Node';\r\nimport { Header, Navbar } from '@components/common';\r\nimport Canvas from '@components/Board/Canvas';\r\nimport CreatePostitModal from '@src/components/Board/Modal/Create';\r\nimport DeleteArea from '@src/components/Board/Modal/Delete';\r\nimport CreateButton from '@components/Board/CreateButton';\r\nimport { IPostit, ISocketApi } from '@src/types/board';\r\nimport { Dispatch, SetStateAction } from 'hoist-non-react-statics/node_modules/@types/react';\r\nimport { Layout, MainContainer } from './style';\r\n\r\ninterface Props {\r\n\tpostits: IPostit[];\r\n\tsocketApi: ISocketApi;\r\n\tshowModal: boolean;\r\n\tshowDelete: boolean;\r\n\tmodalType: string;\r\n\tclickedPostit: IPostit | undefined;\r\n\tgetUserNameById: (userId: number) => string;\r\n\tsetClickedPostit: (postit: IPostit) => void;\r\n\tsetModalType: Dispatch<SetStateAction<string>>;\r\n\thandleModalOpen: () => void;\r\n\thandleModalClose: () => void;\r\n\thandleDrag: (e: KonvaEventObject<DragEvent>) => void;\r\n\thandleDragStart: (e: KonvaEventObject<DragEvent>) => void;\r\n\thandleDragEnd: (e: KonvaEventObject<DragEvent>) => void;\r\n}\r\n\r\nconst BoardTemplate: React.FC<Props> = ({\r\n\tpostits,\r\n\tsocketApi,\r\n\tshowModal,\r\n\tshowDelete,\r\n\tmodalType,\r\n\tclickedPostit,\r\n\tgetUserNameById,\r\n\tsetModalType,\r\n\tsetClickedPostit,\r\n\thandleModalOpen,\r\n\thandleModalClose,\r\n\thandleDrag,\r\n\thandleDragStart,\r\n\thandleDragEnd,\r\n}) => {\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<Header />\r\n\t\t\t<MainContainer>\r\n\t\t\t\t<Navbar />\r\n\t\t\t\t<Canvas\r\n\t\t\t\t\tpostits={postits}\r\n\t\t\t\t\tsocketApi={socketApi}\r\n\t\t\t\t\tsetModalType={setModalType}\r\n\t\t\t\t\tsetClickedPostit={setClickedPostit}\r\n\t\t\t\t\thandleModalOpen={handleModalOpen}\r\n\t\t\t\t\thandleDrag={handleDrag}\r\n\t\t\t\t\thandleDragStart={handleDragStart}\r\n\t\t\t\t\thandleDragEnd={handleDragEnd}\r\n\t\t\t\t\tgetUserNameById={getUserNameById}\r\n\t\t\t\t/>\r\n\t\t\t</MainContainer>\r\n\t\t\t<CreateButton setModalType={setModalType} handleModalOpen={handleModalOpen} />\r\n\t\t\t{showModal && (\r\n\t\t\t\t<CreatePostitModal\r\n\t\t\t\t\tsocketApi={socketApi}\r\n\t\t\t\t\tmodalType={modalType}\r\n\t\t\t\t\tclickedPostit={clickedPostit}\r\n\t\t\t\t\thandleModalClose={handleModalClose}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t{showDelete && <DeleteArea />}\r\n\t\t</Layout>\r\n\t);\r\n};\r\n\r\nexport default BoardTemplate;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { toast } from 'react-toastify';\r\nimport { KonvaEventObject } from 'konva/lib/Node';\r\nimport userState from '@src/stores/user';\r\nimport { teamUsersSelector } from '@stores/team';\r\nimport BoardTemplate from '@templates/BoardTemplate';\r\nimport { HEADER } from '@utils/constants';\r\nimport { SocketContext } from '@utils/socketContext';\r\nimport { IPostit } from '@src/types/board';\r\n\r\ninterface MatchParams {\r\n\tteamId: string;\r\n}\r\ntype Props = RouteComponentProps<MatchParams>;\r\n\r\nconst BoardPage: React.FC<Props> = ({ match }) => {\r\n\tconst [postits, setPostits] = useState<IPostit[]>([]);\r\n\tconst [showModal, setShowModal] = useState(false);\r\n\tconst [showDelete, setShowDelete] = useState(false);\r\n\tconst [modalType, setModalType] = useState('create');\r\n\tconst [clickedPostit, setClickedPostit] = useState<IPostit>();\r\n\tconst user = useRecoilValue(userState);\r\n\tconst handleModalOpen = () => setShowModal(true);\r\n\tconst handleModalClose = () => setShowModal(false);\r\n\r\n\tconst teamId = Number(match.params.teamId);\r\n\tconst teamUserList = useRecoilValue(teamUsersSelector(teamId));\r\n\tconst getUserNameById = (userId: number) =>\r\n\t\tObject.values(teamUserList).find((user) => Number(user.userId) === Number(userId))?.name ?? '';\r\n\tconst socket = useContext(SocketContext);\r\n\tconst socketApi = {\r\n\t\tsetUpdatedPostitList: (initPoistList: IPostit[]) => setPostits(initPoistList),\r\n\t\tcreateNewPostit: (newPostit: IPostit) => socket.current.emit('create new postit', newPostit),\r\n\t\tupdateStartPostit: (targetId: number) =>\r\n\t\t\tsocket.current.emit('update start postit', { id: targetId, whoIsUpdating: user.id }),\r\n\t\tupdateEndPostit: (newPostit: IPostit) =>\r\n\t\t\tsocket.current.emit('update end postit', { ...newPostit, whoIsUpdating: -1 }),\r\n\t\tdeletePostit: (targetId: number) => socket.current.emit('delete postit', targetId),\r\n\t\tdragPostit: (e: KonvaEventObject<DragEvent>) => {\r\n\t\t\tconst id = e.target.id();\r\n\t\t\tconst x = e.target.x() / window.innerWidth;\r\n\t\t\tconst y = e.target.y() / window.innerHeight;\r\n\t\t\tconst whoIsDragging = user.id;\r\n\t\t\tsocket.current.emit('drag postit', { id, x, y, whoIsDragging });\r\n\t\t},\r\n\t\tdragEndPostit: (targetId: number) => socket.current.emit('drag end postit', { id: targetId, whoIsDragging: -1 }),\r\n\t\tsetUpdatedPostit: (newPostit: IPostit) => {\r\n\t\t\tsetPostits((previousPostitList: IPostit[]) => {\r\n\t\t\t\tconst postitIdx = previousPostitList.findIndex((elem) => Number(newPostit.id) === Number(elem.id));\r\n\t\t\t\tif (postitIdx !== -1) previousPostitList.splice(postitIdx, 1);\r\n\t\t\t\treturn [...previousPostitList, newPostit];\r\n\t\t\t});\r\n\t\t},\r\n\t};\r\n\r\n\tconst handleDragStart = (e: KonvaEventObject<DragEvent>) => {\r\n\t\tconst id = Number(e.target.id());\r\n\t\tconst postitList = [...postits];\r\n\t\tconst postitIdx = postitList.findIndex((postit) => postit.id === id);\r\n\t\tconst postit = { ...postitList.splice(postitIdx, 1)[0], whoIsDragging: user.id };\r\n\t\tpostitList.push(postit);\r\n\t\tsetPostits(postitList);\r\n\t\tsetShowDelete(true);\r\n\t};\r\n\r\n\tconst handleDragEnd = (e: KonvaEventObject<DragEvent>) => {\r\n\t\tconst id = Number(e.target.id());\r\n\t\tsocketApi.dragEndPostit(id);\r\n\t\tconst postitList = [...postits];\r\n\t\tconst postitIdx = postitList.findIndex((postit) => postit.id === id);\r\n\t\tpostitList[postitIdx] = {\r\n\t\t\t...postitList[postitIdx],\r\n\t\t\tx: e.target.x() / window.innerWidth,\r\n\t\t\ty: e.target.y() / window.innerHeight,\r\n\t\t\twhoIsDragging: -1,\r\n\t\t};\r\n\t\tsetPostits(postitList);\r\n\t\tsetShowDelete(false);\r\n\t\tconst mouseY = (e.target.parent?.getRelativePointerPosition().y ?? 0) + HEADER.HEIGHT;\r\n\t\tif (mouseY > (window.innerHeight / 10) * 9 && mouseY < window.innerHeight) {\r\n\t\t\tsocketApi.deletePostit(Number(e.target.id()));\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleDrag = (e: KonvaEventObject<DragEvent>) => socketApi.dragPostit(e);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (socket.current) {\r\n\t\t\tsocket.current.emit('join board page');\r\n\t\t\tsocket.current.on('join board page', (postits: IPostit[]) => socketApi.setUpdatedPostitList(postits));\r\n\t\t\tsocket.current.on('delete postit', (postits: IPostit[]) => socketApi.setUpdatedPostitList(postits));\r\n\t\t\tsocket.current.on('create new postit', (postits: IPostit) => socketApi.setUpdatedPostit(postits));\r\n\t\t\tsocket.current.on('update start postit', (postit: IPostit) => socketApi.setUpdatedPostit(postit));\r\n\t\t\tsocket.current.on('update end postit', (postit: IPostit) => socketApi.setUpdatedPostit(postit));\r\n\t\t\tsocket.current.on('drag postit', (postit: IPostit) => socketApi.setUpdatedPostit(postit));\r\n\t\t\tsocket.current.on('drag end postit', (postit: IPostit) => socketApi.setUpdatedPostit(postit));\r\n\t\t\tsocket.current.on('team board error', (errorMessage: string) => toast.error(errorMessage));\r\n\t\t}\r\n\t\treturn () => {\r\n\t\t\tsocket.current.emit('leave board page');\r\n\t\t\tsocket.current.off('join board page');\r\n\t\t\tsocket.current.off('create new postit');\r\n\t\t\tsocket.current.off('delete postit');\r\n\t\t\tsocket.current.off('update start postit');\r\n\t\t\tsocket.current.off('update end postit');\r\n\t\t\tsocket.current.off('drag postit');\r\n\t\t\tsocket.current.off('drag end postit');\r\n\t\t\tsocket.current.off('team board error');\r\n\t\t};\r\n\t}, [socket.current, teamId]);\r\n\r\n\treturn (\r\n\t\t<BoardTemplate\r\n\t\t\tpostits={postits}\r\n\t\t\tshowModal={showModal}\r\n\t\t\tmodalType={modalType}\r\n\t\t\tclickedPostit={clickedPostit}\r\n\t\t\tgetUserNameById={getUserNameById}\r\n\t\t\tsetModalType={setModalType}\r\n\t\t\tsetClickedPostit={setClickedPostit}\r\n\t\t\thandleModalOpen={handleModalOpen}\r\n\t\t\thandleModalClose={handleModalClose}\r\n\t\t\thandleDrag={handleDrag}\r\n\t\t\thandleDragStart={handleDragStart}\r\n\t\t\thandleDragEnd={handleDragEnd}\r\n\t\t\tsocketApi={socketApi}\r\n\t\t\tshowDelete={showDelete}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default BoardPage;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { io, Socket } from 'socket.io-client';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { SocketContext } from '@utils/socketContext';\r\nimport userState from '@stores/user';\r\n\r\nimport ChatPage from '@pages/ChatPage';\r\nimport CalendarPage from '@pages/CalendarPage';\r\nimport UsersPage from '@pages/UsersPage';\r\nimport BoardPage from '@pages/BoardPage';\r\nimport PrivateRoute from './PrivateRoute';\r\n\r\nconst TeamRoute = ({ computedMatch }: any) => {\r\n\tconst { teamId } = computedMatch.params;\r\n\tconst userId = useRecoilValue(userState).id;\r\n\tconst socketRef = useRef<Socket>();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (userId !== -1) {\r\n\t\t\tsocketRef.current = io(`${process.env.REACT_APP_SERVER}/socket/team-${teamId}`, { transports: ['websocket'] });\r\n\t\t\tsocketRef.current.emit('change status to online', { teamId, userId });\r\n\t\t}\r\n\t\treturn () => {\r\n\t\t\tsocketRef.current?.disconnect();\r\n\t\t};\r\n\t}, [teamId, userId]);\r\n\r\n\treturn (\r\n\t\t<SocketContext.Provider value={socketRef}>\r\n\t\t\t<PrivateRoute exact path='/team/:teamId/chat' component={ChatPage} />\r\n\t\t\t<PrivateRoute exact path='/team/:teamId/calendar' component={CalendarPage} />\r\n\t\t\t<PrivateRoute exact path='/team/:teamId/users' component={UsersPage} teamId={teamId} />\r\n\t\t\t<PrivateRoute exact path='/team/:teamId/board' component={BoardPage} teamId={teamId} />\r\n\t\t</SocketContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default TeamRoute;\r\n"],"sourceRoot":""}